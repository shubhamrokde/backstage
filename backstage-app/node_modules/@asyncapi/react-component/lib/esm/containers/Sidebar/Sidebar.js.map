{"version":3,"file":"Sidebar.js","sourceRoot":"","sources":["../../../../src/containers/Sidebar/Sidebar.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Tag } from '@asyncapi/parser';\n\nimport { CollapseButton } from '../../components';\nimport { SideBarConfig } from '../../config/config';\nimport { useSpec } from '../../contexts';\nimport { SpecificationHelpers } from '../../helpers';\n\nconst SidebarContext = React.createContext<{\n  setShowSidebar: React.Dispatch<React.SetStateAction<boolean>>;\n}>({\n  setShowSidebar: (value: boolean | ((prevValue: boolean) => boolean)) => value,\n});\n\ninterface Props {\n  config?: SideBarConfig;\n}\n\nexport const Sidebar: React.FunctionComponent<Props> = ({ config }) => {\n  const [showSidebar, setShowSidebar] = useState(false);\n\n  const showOperations = config?.showOperations || 'byDefault';\n  const asyncapi = useSpec();\n\n  const info = asyncapi.info();\n  const logo = info.ext('x-logo');\n  const components = asyncapi.hasComponents() && asyncapi.components();\n  const messages = components && components.messages();\n  const schemas = components && components.schemas();\n\n  let Operations = OperationsList;\n  if (showOperations === 'bySpecTags') {\n    Operations = OperationsByRootTags;\n  } else if (showOperations === 'byOperationsTags') {\n    Operations = OperationsByOperationsTags;\n  }\n\n  const messagesList = messages && Object.keys(messages).length > 0 && (\n    <li className=\"mb-3 mt-9\">\n      <a\n        className=\"text-xs uppercase text-gray-700 mt-10 mb-4 font-thin hover:text-gray-900\"\n        href=\"#messages\"\n        onClick={() => setShowSidebar(false)}\n      >\n        Messages\n      </a>\n      <ul className=\"text-sm mt-2\">\n        {Object.entries(messages).map(([messageName, message]) => (\n          <li key={messageName}>\n            <a\n              className=\"flex break-words no-underline text-gray-700 mt-2 hover:text-gray-900\"\n              href={`#message-${messageName}`}\n              onClick={() => setShowSidebar(false)}\n            >\n              <div className=\"break-all inline-block\">{message.uid()}</div>\n            </a>\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  const schemasList = schemas && Object.keys(schemas).length > 0 && (\n    <li className=\"mb-3 mt-9\">\n      <a\n        className=\"text-xs uppercase text-gray-700 mt-10 mb-4 font-thin hover:text-gray-900\"\n        href=\"#schemas\"\n        onClick={() => setShowSidebar(false)}\n      >\n        Schemas\n      </a>\n      <ul className=\"text-sm mt-2\">\n        {Object.keys(schemas).map(schemaName => (\n          <li key={schemaName}>\n            <a\n              className=\"flex break-words no-underline text-gray-700 mt-2 hover:text-gray-900\"\n              href={`#schema-${schemaName}`}\n              onClick={() => setShowSidebar(false)}\n            >\n              <div className=\"break-all inline-block\">{schemaName}</div>\n            </a>\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  return (\n    <SidebarContext.Provider value={{ setShowSidebar }}>\n      <div\n        className=\"burger-menu rounded-full h-16 w-16 bg-white fixed bottom-16 right-8 flex items-center justify-center z-30 cursor-pointer shadow-md bg-teal-500\"\n        onClick={() => setShowSidebar(prev => !prev)}\n        data-lol={showSidebar}\n      >\n        <svg\n          viewBox=\"0 0 100 70\"\n          width=\"40\"\n          height=\"30\"\n          className=\"fill-current text-gray-200\"\n        >\n          <rect width=\"100\" height=\"10\" />\n          <rect y=\"30\" width=\"100\" height=\"10\" />\n          <rect y=\"60\" width=\"100\" height=\"10\" />\n        </svg>\n      </div>\n      <div\n        className={`${\n          showSidebar ? 'block fixed w-full' : 'hidden'\n        } sidebar relative w-64 max-h-screen h-full bg-gray-200 shadow z-20`}\n        // className={`${\n        //   showSidebar ? 'block fixed w-full' : 'hidden'\n        // } sidebar bg-gray-200 font-sans font-light px-4 py-8 z-20 shadow overflow-auto`}\n      >\n        <div\n          className={`${\n            showSidebar ? 'w-full' : ''\n          } block fixed max-h-screen h-full font-sans px-4 pt-8 pb-16 overflow-y-auto bg-gray-200`}\n        >\n          <div className=\"sidebar--content\">\n            <div>\n              {logo ? (\n                <img\n                  src={logo}\n                  alt={`${info.title()} logo, ${info.version()} version`}\n                />\n              ) : (\n                <h1 className=\"text-2xl font-light\">\n                  {info.title()} {info.version()}\n                </h1>\n              )}\n            </div>\n\n            <ul className=\"text-sm mt-10 relative\">\n              <li className=\"mb-3\">\n                <a\n                  className=\"text-gray-700 no-underline hover:text-gray-900\"\n                  href=\"#introduction\"\n                  onClick={() => setShowSidebar(false)}\n                >\n                  Introduction\n                </a>\n              </li>\n              {asyncapi.hasServers() && (\n                <li className=\"mb-3\">\n                  <a\n                    className=\"text-gray-700 no-underline hover:text-gray-900\"\n                    href=\"#servers\"\n                    onClick={() => setShowSidebar(false)}\n                  >\n                    Servers\n                  </a>\n                </li>\n              )}\n              {asyncapi.hasChannels() && (\n                <>\n                  <li className=\"mb-3 mt-9\">\n                    <a\n                      className=\"text-xs uppercase text-gray-700 mt-10 mb-4 font-thin hover:text-gray-900\"\n                      href=\"#operations\"\n                      onClick={() => setShowSidebar(false)}\n                    >\n                      Operations\n                    </a>\n                    <Operations />\n                  </li>\n                  {messagesList}\n                  {schemasList}\n                </>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </SidebarContext.Provider>\n  );\n};\n\nexport const OperationsList: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n  const channels = asyncapi.channels();\n\n  const operationsList: React.ReactNodeArray = [];\n  Object.entries(channels).forEach(([channelName, channel]) => {\n    if (channel.hasPublish()) {\n      operationsList.push(\n        <OperationsPubItem\n          channelName={channelName}\n          key={`pub-${channelName}`}\n        />,\n      );\n    }\n    if (channel.hasSubscribe()) {\n      operationsList.push(\n        <OperationsSubItem\n          channelName={channelName}\n          key={`sub-${channelName}`}\n        />,\n      );\n    }\n  });\n\n  return <ul className=\"text-sm mt-2\">{operationsList}</ul>;\n};\n\nexport const OperationsByRootTags: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n  const channels = asyncapi.channels();\n  const tags = asyncapi.tags();\n\n  const taggedOperations = (tag: Tag) => {\n    const operationsList: React.ReactNodeArray = [];\n    Object.entries(channels).forEach(([channelName, channel]) => {\n      if (\n        channel.hasPublish() &&\n        SpecificationHelpers.containTags(channel.publish(), tag)\n      ) {\n        operationsList.push(\n          <OperationsPubItem\n            channelName={channelName}\n            key={`pub-${channelName}`}\n          />,\n        );\n      }\n      if (\n        channel.hasSubscribe() &&\n        SpecificationHelpers.containTags(channel.subscribe(), tag)\n      ) {\n        operationsList.push(\n          <OperationsSubItem\n            channelName={channelName}\n            key={`sub-${channelName}`}\n          />,\n        );\n      }\n    });\n    return operationsList;\n  };\n\n  const untaggedOperations: React.ReactNodeArray = [];\n  Object.entries(channels).forEach(([channelName, channel]) => {\n    if (\n      channel.hasPublish() &&\n      (!channel.publish().hasTags() ||\n        !SpecificationHelpers.containTags(channel.publish(), tags))\n    ) {\n      untaggedOperations.push(\n        <OperationsPubItem\n          channelName={channelName}\n          key={`pub-${channelName}`}\n        />,\n      );\n    }\n    if (\n      channel.hasSubscribe() &&\n      (!channel.subscribe().hasTags() ||\n        !SpecificationHelpers.containTags(channel.subscribe(), tags))\n    ) {\n      untaggedOperations.push(\n        <OperationsSubItem\n          channelName={channelName}\n          key={`sub-${channelName}`}\n        />,\n      );\n    }\n  });\n\n  return (\n    <div>\n      <ul>\n        {tags &&\n          tags.map(tag => {\n            const ops = taggedOperations(tag);\n            return (\n              ops.length > 0 && (\n                <li key={tag.name()}>\n                  <OperationsByTagItem tagName={tag.name()}>\n                    {taggedOperations(tag)}\n                  </OperationsByTagItem>\n                </li>\n              )\n            );\n          })}\n        {untaggedOperations.length > 0 && (\n          <li>\n            <OperationsByTagItem tagName=\"Untagged\">\n              {untaggedOperations}\n            </OperationsByTagItem>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport const OperationsByOperationsTags: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n  const channels = asyncapi.channels();\n  const operationsTags = SpecificationHelpers.operationsTags(asyncapi);\n\n  const taggedOperations = (tag: Tag) => {\n    const operationsList: React.ReactNodeArray = [];\n    Object.entries(channels).forEach(([channelName, channel]) => {\n      if (\n        channel.hasPublish() &&\n        SpecificationHelpers.containTags(channel.publish(), tag)\n      ) {\n        operationsList.push(\n          <OperationsPubItem\n            channelName={channelName}\n            key={`pub-${channelName}`}\n          />,\n        );\n      }\n      if (\n        channel.hasSubscribe() &&\n        SpecificationHelpers.containTags(channel.subscribe(), tag)\n      ) {\n        operationsList.push(\n          <OperationsSubItem\n            channelName={channelName}\n            key={`sub-${channelName}`}\n          />,\n        );\n      }\n    });\n    return operationsList;\n  };\n\n  const untaggedOperations: React.ReactNodeArray = [];\n  Object.entries(channels).forEach(([channelName, channel]) => {\n    if (\n      channel.hasPublish() &&\n      (!channel.publish().hasTags() ||\n        !SpecificationHelpers.containTags(channel.publish(), operationsTags))\n    ) {\n      untaggedOperations.push(\n        <OperationsPubItem\n          channelName={channelName}\n          key={`pub-${channelName}`}\n        />,\n      );\n    }\n    if (\n      channel.hasSubscribe() &&\n      (!channel.subscribe().hasTags() ||\n        !SpecificationHelpers.containTags(channel.subscribe(), operationsTags))\n    ) {\n      untaggedOperations.push(\n        <OperationsSubItem\n          channelName={channelName}\n          key={`sub-${channelName}`}\n        />,\n      );\n    }\n  });\n\n  return (\n    <div>\n      <ul>\n        {operationsTags &&\n          operationsTags.map(tag => {\n            const ops = taggedOperations(tag);\n            return (\n              ops.length > 0 && (\n                <li key={tag.name()}>\n                  <OperationsByTagItem tagName={tag.name()}>\n                    {taggedOperations(tag)}\n                  </OperationsByTagItem>\n                </li>\n              )\n            );\n          })}\n        {untaggedOperations.length > 0 && (\n          <li>\n            <OperationsByTagItem tagName=\"Untagged\">\n              {untaggedOperations}\n            </OperationsByTagItem>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\ninterface OperationsByTagItemProps {\n  tagName: string;\n}\n\nconst OperationsByTagItem: React.FunctionComponent<OperationsByTagItemProps> = ({\n  tagName,\n  children,\n}) => {\n  const [expand, setExpand] = useState(false);\n\n  return (\n    <div>\n      <CollapseButton\n        onClick={() => setExpand(prev => !prev)}\n        chevronProps={{\n          className: expand ? '-rotate-180' : '-rotate-90',\n        }}\n      >\n        <span className=\"text-sm inline-block mt-1 font-extralight\">\n          {tagName}\n        </span>\n      </CollapseButton>\n      <ul className={`${expand ? 'block' : 'hidden'} text-sm mt-2 font-light`}>\n        {children}\n      </ul>\n    </div>\n  );\n};\n\ninterface OperationsPubItemProps {\n  channelName: string;\n}\n\nconst OperationsPubItem: React.FunctionComponent<OperationsPubItemProps> = ({\n  channelName,\n}) => {\n  const { setShowSidebar } = useContext(SidebarContext);\n\n  return (\n    <li>\n      <a\n        className=\"flex no-underline text-gray-700 mb-2 hover:text-gray-900\"\n        href={`#operation-publish-${channelName}`}\n        onClick={() => setShowSidebar(false)}\n      >\n        <span\n          className=\"bg-blue-600 font-bold h-6 no-underline text-white uppercase p-1 mr-2 rounded text-xs\"\n          title=\"Publish\"\n        >\n          Pub\n        </span>\n        <span className=\"break-all inline-block\">{channelName}</span>\n      </a>\n    </li>\n  );\n};\n\nconst OperationsSubItem: React.FunctionComponent<OperationsPubItemProps> = ({\n  channelName,\n}) => {\n  const { setShowSidebar } = useContext(SidebarContext);\n\n  return (\n    <li>\n      <a\n        className=\"flex no-underline text-gray-700 mb-2 hover:text-gray-900\"\n        href={`#operation-subscribe-${channelName}`}\n        onClick={() => setShowSidebar(false)}\n      >\n        <span\n          className=\"bg-green-600 font-bold h-6 no-underline text-white uppercase p-1 mr-2 rounded text-xs\"\n          title=\"Subscribe\"\n        >\n          SUB\n        </span>\n        <span className=\"break-all inline-block\">{channelName}</span>\n      </a>\n    </li>\n  );\n};\n"]}