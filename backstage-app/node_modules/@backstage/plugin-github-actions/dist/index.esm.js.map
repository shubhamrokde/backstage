{"version":3,"file":"index.esm.js","sources":["../src/api/GithubActionsApi.ts","../src/api/GithubActionsClient.ts","../src/api/types.ts","../src/routes.ts","../src/plugin.ts","../src/components/getProjectNameFromEntity.ts","../src/components/WorkflowRunStatus/WorkflowRunStatus.tsx","../src/components/WorkflowRunDetails/useWorkflowRunJobs.ts","../src/components/WorkflowRunDetails/useWorkflowRunsDetails.ts","../src/components/WorkflowRunLogs/useDownloadWorkflowRunLogs.ts","../src/components/WorkflowRunLogs/WorkflowRunLogs.tsx","../src/components/WorkflowRunDetails/WorkflowRunDetails.tsx","../src/components/useWorkflowRuns.ts","../src/components/WorkflowRunsTable/WorkflowRunsTable.tsx","../src/components/Router.tsx","../src/components/Cards/Cards.tsx","../src/components/Cards/RecentWorkflowRunsCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RestEndpointMethodTypes } from '@octokit/rest';\nimport { createApiRef } from '@backstage/core-plugin-api';\n\nexport const githubActionsApiRef = createApiRef<GithubActionsApi>({\n  id: 'plugin.githubactions.service',\n});\n\nexport type GithubActionsApi = {\n  listWorkflowRuns: ({\n    hostname,\n    owner,\n    repo,\n    pageSize,\n    page,\n    branch,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    pageSize?: number;\n    page?: number;\n    branch?: string;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['listWorkflowRuns']['response']['data']\n  >;\n  getWorkflow: ({\n    hostname,\n    owner,\n    repo,\n    id,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['getWorkflow']['response']['data']\n  >;\n  getWorkflowRun: ({\n    hostname,\n    owner,\n    repo,\n    id,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['getWorkflowRun']['response']['data']\n  >;\n  reRunWorkflow: ({\n    hostname,\n    owner,\n    repo,\n    runId,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }) => Promise<any>;\n  listJobsForWorkflowRun: ({\n    hostname,\n    owner,\n    repo,\n    id,\n    pageSize,\n    page,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n    pageSize?: number;\n    page?: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['listJobsForWorkflowRun']['response']['data']\n  >;\n  downloadJobLogsForWorkflowRun: ({\n    hostname,\n    owner,\n    repo,\n    runId,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }) => Promise<\n    RestEndpointMethodTypes['actions']['downloadJobLogsForWorkflowRun']['response']['data']\n  >;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\nimport { GithubActionsApi } from './GithubActionsApi';\nimport { Octokit, RestEndpointMethodTypes } from '@octokit/rest';\nimport { ConfigApi, OAuthApi } from '@backstage/core-plugin-api';\n\nexport class GithubActionsClient implements GithubActionsApi {\n  private readonly configApi: ConfigApi;\n  private readonly githubAuthApi: OAuthApi;\n\n  constructor(options: { configApi: ConfigApi; githubAuthApi: OAuthApi }) {\n    this.configApi = options.configApi;\n    this.githubAuthApi = options.githubAuthApi;\n  }\n\n  private async getOctokit(hostname?: string): Promise<Octokit> {\n    // TODO: Get access token for the specified hostname\n    const token = await this.githubAuthApi.getAccessToken(['repo']);\n    const configs = readGitHubIntegrationConfigs(\n      this.configApi.getOptionalConfigArray('integrations.github') ?? [],\n    );\n    const githubIntegrationConfig = configs.find(\n      v => v.host === hostname ?? 'github.com',\n    );\n    const baseUrl = githubIntegrationConfig?.apiBaseUrl;\n    return new Octokit({ auth: token, baseUrl });\n  }\n\n  async reRunWorkflow({\n    hostname,\n    owner,\n    repo,\n    runId,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }): Promise<any> {\n    const octokit = await this.getOctokit(hostname);\n    return octokit.actions.reRunWorkflow({\n      owner,\n      repo,\n      run_id: runId,\n    });\n  }\n  async listWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    pageSize = 100,\n    page = 0,\n    branch,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    pageSize?: number;\n    page?: number;\n    branch?: string;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['listWorkflowRuns']['response']['data']\n  > {\n    const octokit = await this.getOctokit(hostname);\n    const workflowRuns = await octokit.actions.listWorkflowRunsForRepo({\n      owner,\n      repo,\n      per_page: pageSize,\n      page,\n      ...(branch ? { branch } : {}),\n    });\n    return workflowRuns.data;\n  }\n  async getWorkflow({\n    hostname,\n    owner,\n    repo,\n    id,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['getWorkflow']['response']['data']\n  > {\n    const octokit = await this.getOctokit(hostname);\n    const workflow = await octokit.actions.getWorkflow({\n      owner,\n      repo,\n      workflow_id: id,\n    });\n    return workflow.data;\n  }\n  async getWorkflowRun({\n    hostname,\n    owner,\n    repo,\n    id,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['getWorkflowRun']['response']['data']\n  > {\n    const octokit = await this.getOctokit(hostname);\n    const run = await octokit.actions.getWorkflowRun({\n      owner,\n      repo,\n      run_id: id,\n    });\n    return run.data;\n  }\n  async listJobsForWorkflowRun({\n    hostname,\n    owner,\n    repo,\n    id,\n    pageSize = 100,\n    page = 0,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    id: number;\n    pageSize?: number;\n    page?: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['listJobsForWorkflowRun']['response']['data']\n  > {\n    const octokit = await this.getOctokit(hostname);\n    const jobs = await octokit.actions.listJobsForWorkflowRun({\n      owner,\n      repo,\n      run_id: id,\n      per_page: pageSize,\n      page,\n    });\n    return jobs.data;\n  }\n  async downloadJobLogsForWorkflowRun({\n    hostname,\n    owner,\n    repo,\n    runId,\n  }: {\n    hostname?: string;\n    owner: string;\n    repo: string;\n    runId: number;\n  }): Promise<\n    RestEndpointMethodTypes['actions']['downloadJobLogsForWorkflowRun']['response']['data']\n  > {\n    const octokit = await this.getOctokit(hostname);\n    const workflow = await octokit.actions.downloadJobLogsForWorkflowRun({\n      owner,\n      repo,\n      job_id: runId,\n    });\n    return workflow.data;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type Step = {\n  name: string;\n  status: string;\n  conclusion?: string;\n  number: number; // starts from 1\n  started_at: string;\n  completed_at: string;\n};\n\nexport type Job = {\n  html_url: string;\n  status: string;\n  conclusion: string;\n  started_at: string;\n  completed_at: string;\n  id: number;\n  name: string;\n  steps: Step[];\n};\n\nexport type Jobs = {\n  total_count: number;\n  jobs: Job[];\n};\n\nexport enum BuildStatus {\n  'success',\n  'failure',\n  'pending',\n  'running',\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createRouteRef, createSubRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'github-actions',\n});\n\nexport const buildRouteRef = createSubRouteRef({\n  id: 'github-actions/build',\n  path: '/:id',\n  parent: rootRouteRef,\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { githubActionsApiRef, GithubActionsClient } from './api';\nimport { rootRouteRef } from './routes';\nimport {\n  configApiRef,\n  createPlugin,\n  createApiFactory,\n  githubAuthApiRef,\n  createRoutableExtension,\n  createComponentExtension,\n} from '@backstage/core-plugin-api';\n\nexport const githubActionsPlugin = createPlugin({\n  id: 'github-actions',\n  apis: [\n    createApiFactory({\n      api: githubActionsApiRef,\n      deps: { configApi: configApiRef, githubAuthApi: githubAuthApiRef },\n      factory: ({ configApi, githubAuthApi }) =>\n        new GithubActionsClient({ configApi, githubAuthApi }),\n    }),\n  ],\n  routes: {\n    entityContent: rootRouteRef,\n  },\n});\n\nexport const EntityGithubActionsContent = githubActionsPlugin.provide(\n  createRoutableExtension({\n    name: 'EntityGithubActionsContent',\n    component: () => import('./components/Router').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\nexport const EntityLatestGithubActionRunCard = githubActionsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityLatestGithubActionRunCard',\n    component: {\n      lazy: () =>\n        import('./components/Cards').then(m => m.LatestWorkflowRunCard),\n    },\n  }),\n);\n\nexport const EntityLatestGithubActionsForBranchCard =\n  githubActionsPlugin.provide(\n    createComponentExtension({\n      name: 'EntityLatestGithubActionsForBranchCard',\n      component: {\n        lazy: () =>\n          import('./components/Cards').then(\n            m => m.LatestWorkflowsForBranchCard,\n          ),\n      },\n    }),\n  );\n\nexport const EntityRecentGithubActionsRunsCard = githubActionsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityRecentGithubActionsRunsCard',\n    component: {\n      lazy: () =>\n        import('./components/Cards').then(m => m.RecentWorkflowRunsCard),\n    },\n  }),\n);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\n\nexport const GITHUB_ACTIONS_ANNOTATION = 'github.com/project-slug';\n\nexport const getProjectNameFromEntity = (entity: Entity) =>\n  entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? '';\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  StatusPending,\n  StatusRunning,\n  StatusOK,\n  StatusWarning,\n  StatusAborted,\n  StatusError,\n} from '@backstage/core-components';\n\nexport const WorkflowRunStatus = ({\n  status,\n  conclusion,\n}: {\n  status: string | undefined;\n  conclusion: string | undefined;\n}) => {\n  if (status === undefined) return null;\n  switch (status.toLocaleLowerCase('en-US')) {\n    case 'queued':\n      return (\n        <>\n          <StatusPending /> Queued\n        </>\n      );\n    case 'in_progress':\n      return (\n        <>\n          <StatusRunning /> In progress\n        </>\n      );\n    case 'completed':\n      switch (conclusion?.toLocaleLowerCase('en-US')) {\n        case 'skipped' || 'canceled':\n          return (\n            <>\n              <StatusAborted /> Aborted\n            </>\n          );\n        case 'timed_out':\n          return (\n            <>\n              <StatusWarning /> Timed out\n            </>\n          );\n        case 'failure':\n          return (\n            <>\n              <StatusError /> Error\n            </>\n          );\n        default:\n          return (\n            <>\n              <StatusOK /> Completed\n            </>\n          );\n      }\n    default:\n      return (\n        <>\n          <StatusPending /> Pending\n        </>\n      );\n  }\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport useAsync from 'react-use/lib/useAsync';\nimport { githubActionsApiRef } from '../../api';\nimport { buildRouteRef } from '../../routes';\nimport { useApi, useRouteRefParams } from '@backstage/core-plugin-api';\n\nexport const useWorkflowRunJobs = ({\n  hostname,\n  owner,\n  repo,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n}) => {\n  const api = useApi(githubActionsApiRef);\n  const { id } = useRouteRefParams(buildRouteRef);\n  const jobs = useAsync(async () => {\n    return repo && owner\n      ? api.listJobsForWorkflowRun({\n          hostname,\n          owner,\n          repo,\n          id: parseInt(id, 10),\n        })\n      : Promise.reject(new Error('No repo/owner provided'));\n  }, [repo, owner, id]);\n  return jobs;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport useAsync from 'react-use/lib/useAsync';\nimport { githubActionsApiRef } from '../../api';\nimport { buildRouteRef } from '../../routes';\nimport { useApi, useRouteRefParams } from '@backstage/core-plugin-api';\n\nexport const useWorkflowRunsDetails = ({\n  hostname,\n  owner,\n  repo,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n}) => {\n  const api = useApi(githubActionsApiRef);\n  const { id } = useRouteRefParams(buildRouteRef);\n  const details = useAsync(async () => {\n    return repo && owner\n      ? api.getWorkflowRun({\n          hostname,\n          owner,\n          repo,\n          id: parseInt(id, 10),\n        })\n      : Promise.reject(new Error('No repo/owner provided'));\n  }, [repo, owner, id]);\n  return details;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport useAsync from 'react-use/lib/useAsync';\nimport { githubActionsApiRef } from '../../api';\nimport { useApi } from '@backstage/core-plugin-api';\n\nexport const useDownloadWorkflowRunLogs = ({\n  hostname,\n  owner,\n  repo,\n  id,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n  id: number;\n}) => {\n  const api = useApi(githubActionsApiRef);\n  const details = useAsync(async () => {\n    return repo && owner\n      ? api.downloadJobLogsForWorkflowRun({\n          hostname,\n          owner,\n          repo,\n          runId: id,\n        })\n      : Promise.reject('No repo/owner provided');\n  }, [repo, owner, id]);\n  return details;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { LogViewer } from '@backstage/core-components';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\nimport {\n  Accordion,\n  AccordionSummary,\n  CircularProgress,\n  Fade,\n  makeStyles,\n  Modal,\n  Theme,\n  Tooltip,\n  Typography,\n  Zoom,\n} from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport React from 'react';\nimport { getProjectNameFromEntity } from '../getProjectNameFromEntity';\nimport { useDownloadWorkflowRunLogs } from './useDownloadWorkflowRunLogs';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  button: {\n    order: -1,\n    marginRight: 0,\n    marginLeft: '-20px',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '85%',\n    height: '85%',\n    justifyContent: 'center',\n    margin: 'auto',\n  },\n  normalLogContainer: {\n    height: '75vh',\n    width: '100%',\n  },\n  modalLogContainer: {\n    height: '100%',\n    width: '100%',\n  },\n  log: {\n    background: theme.palette.background.default,\n  },\n}));\n\n/**\n * A component for Run Logs visualization.\n */\nexport const WorkflowRunLogs = ({\n  entity,\n  runId,\n  inProgress,\n}: {\n  entity: Entity;\n  runId: number;\n  inProgress: boolean;\n}) => {\n  const config = useApi(configApiRef);\n  const classes = useStyles();\n  const projectName = getProjectNameFromEntity(entity);\n\n  // TODO: Get github hostname from metadata annotation\n  const hostname = readGitHubIntegrationConfigs(\n    config.getOptionalConfigArray('integrations.github') ?? [],\n  )[0].host;\n  const [owner, repo] = (projectName && projectName.split('/')) || [];\n  const jobLogs = useDownloadWorkflowRunLogs({\n    hostname,\n    owner,\n    repo,\n    id: runId,\n  });\n  const logText = jobLogs.value ? String(jobLogs.value) : undefined;\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} disabled={inProgress}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={`panel-${name}-content`}\n        id={`panel-${name}-header`}\n        IconButtonProps={{\n          className: classes.button,\n        }}\n      >\n        <Typography variant=\"button\">\n          {jobLogs.loading ? <CircularProgress /> : 'Job Log'}\n        </Typography>\n        <Tooltip title=\"Open Log\" TransitionComponent={Zoom} arrow>\n          <DescriptionIcon\n            onClick={event => {\n              event.stopPropagation();\n              handleOpen();\n            }}\n            style={{ marginLeft: 'auto' }}\n          />\n        </Tooltip>\n        <Modal\n          className={classes.modal}\n          onClick={event => event.stopPropagation()}\n          open={open}\n          onClose={handleClose}\n        >\n          <Fade in={open}>\n            <div className={classes.modalLogContainer}>\n              <LogViewer\n                text={logText ?? 'No Values Found'}\n                classes={{ root: classes.log }}\n              />\n            </div>\n          </Fade>\n        </Modal>\n      </AccordionSummary>\n      {logText && (\n        <div className={classes.normalLogContainer}>\n          <LogViewer text={logText} classes={{ root: classes.log }} />\n        </div>\n      )}\n    </Accordion>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  CircularProgress,\n  LinearProgress,\n  Link as MaterialLink,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport { DateTime } from 'luxon';\nimport React from 'react';\nimport { Job, Jobs, Step } from '../../api';\nimport { getProjectNameFromEntity } from '../getProjectNameFromEntity';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport { useWorkflowRunJobs } from './useWorkflowRunJobs';\nimport { useWorkflowRunsDetails } from './useWorkflowRunsDetails';\nimport { WorkflowRunLogs } from '../WorkflowRunLogs';\n\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Breadcrumbs, Link } from '@backstage/core-components';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n  root: {\n    maxWidth: 720,\n    margin: theme.spacing(2),\n  },\n  title: {\n    padding: theme.spacing(1, 0, 2, 0),\n  },\n  table: {\n    padding: theme.spacing(1),\n  },\n  accordionDetails: {\n    padding: 0,\n  },\n  button: {\n    order: -1,\n    marginRight: 0,\n    marginLeft: '-20px',\n  },\n  externalLinkIcon: {\n    fontSize: 'inherit',\n    verticalAlign: 'bottom',\n  },\n}));\n\nconst getElapsedTime = (start: string, end: string) => {\n  const startDate = DateTime.fromISO(start);\n  const endDate = end ? DateTime.fromISO(end) : DateTime.now();\n  const diff = endDate.diff(startDate);\n  const timeElapsed = diff.toFormat(`m 'minutes' s 'seconds'`);\n  return timeElapsed;\n};\n\nconst StepView = ({ step }: { step: Step }) => {\n  return (\n    <TableRow>\n      <TableCell>\n        <ListItemText\n          primary={step.name}\n          secondary={getElapsedTime(step.started_at, step.completed_at)}\n        />\n      </TableCell>\n      <TableCell>\n        <WorkflowRunStatus\n          status={step.status.toLocaleUpperCase('en-US')}\n          conclusion={step.conclusion?.toLocaleUpperCase('en-US')}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst JobListItem = ({\n  job,\n  className,\n  entity,\n}: {\n  job: Job;\n  className: string;\n  entity: Entity;\n}) => {\n  const classes = useStyles();\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} className={className}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={`panel-${name}-content`}\n        id={`panel-${name}-header`}\n        IconButtonProps={{\n          className: classes.button,\n        }}\n      >\n        <Typography variant=\"button\">\n          {job.name} ({getElapsedTime(job.started_at, job.completed_at)})\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.accordionDetails}>\n        <TableContainer>\n          <Table>\n            {job.steps.map(step => (\n              <StepView key={step.number} step={step} />\n            ))}\n          </Table>\n        </TableContainer>\n      </AccordionDetails>\n      {job.status === 'queued' || job.status === 'in_progress' ? (\n        <WorkflowRunLogs runId={job.id} inProgress entity={entity} />\n      ) : (\n        <WorkflowRunLogs runId={job.id} inProgress={false} entity={entity} />\n      )}\n    </Accordion>\n  );\n};\n\nconst JobsList = ({ jobs, entity }: { jobs?: Jobs; entity: Entity }) => {\n  const classes = useStyles();\n  return (\n    <Box>\n      {jobs &&\n        jobs.total_count > 0 &&\n        jobs.jobs.map(job => (\n          <JobListItem\n            key={job.id}\n            job={job}\n            className={\n              job.status !== 'success' ? classes.failed : classes.success\n            }\n            entity={entity}\n          />\n        ))}\n    </Box>\n  );\n};\n\nexport const WorkflowRunDetails = ({ entity }: { entity: Entity }) => {\n  const config = useApi(configApiRef);\n  const projectName = getProjectNameFromEntity(entity);\n\n  // TODO: Get github hostname from metadata annotation\n  const hostname = readGitHubIntegrationConfigs(\n    config.getOptionalConfigArray('integrations.github') ?? [],\n  )[0].host;\n  const [owner, repo] = (projectName && projectName.split('/')) || [];\n  const details = useWorkflowRunsDetails({ hostname, owner, repo });\n  const jobs = useWorkflowRunJobs({ hostname, owner, repo });\n\n  const classes = useStyles();\n\n  if (details.error && details.error.message) {\n    return (\n      <Typography variant=\"h6\" color=\"error\">\n        Failed to load build, {details.error.message}\n      </Typography>\n    );\n  } else if (details.loading) {\n    return <LinearProgress />;\n  }\n  return (\n    <div className={classes.root}>\n      <Box mb={3}>\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          <Link to=\"..\">Workflow runs</Link>\n          <Typography>Workflow run details</Typography>\n        </Breadcrumbs>\n      </Box>\n      <TableContainer component={Paper} className={classes.table}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Branch</Typography>\n              </TableCell>\n              <TableCell>{details.value?.head_branch}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Message</Typography>\n              </TableCell>\n              <TableCell>{details.value?.head_commit?.message}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Commit ID</Typography>\n              </TableCell>\n              <TableCell>{details.value?.head_commit?.id}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Workflow</Typography>\n              </TableCell>\n              <TableCell>{details.value?.name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Status</Typography>\n              </TableCell>\n              <TableCell>\n                <WorkflowRunStatus\n                  status={details.value?.status || undefined}\n                  conclusion={details.value?.conclusion || undefined}\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Author</Typography>\n              </TableCell>\n              <TableCell>{`${details.value?.head_commit?.author?.name} (${details.value?.head_commit?.author?.email})`}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Links</Typography>\n              </TableCell>\n              <TableCell>\n                {details.value?.html_url && (\n                  <MaterialLink target=\"_blank\" href={details.value.html_url}>\n                    Workflow runs on GitHub{' '}\n                    <ExternalLinkIcon className={classes.externalLinkIcon} />\n                  </MaterialLink>\n                )}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell colSpan={2}>\n                <Typography noWrap>Jobs</Typography>\n                {jobs.loading ? (\n                  <CircularProgress />\n                ) : (\n                  <JobsList jobs={jobs.value} entity={entity} />\n                )}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useState } from 'react';\nimport useAsyncRetry from 'react-use/lib/useAsyncRetry';\nimport { githubActionsApiRef } from '../api/GithubActionsApi';\nimport { useApi, errorApiRef } from '@backstage/core-plugin-api';\n\nexport type WorkflowRun = {\n  workflowName: string;\n  id: string;\n  message: string;\n  url?: string;\n  githubUrl?: string;\n  source: {\n    branchName: string;\n    commit: {\n      hash: string;\n      url?: string;\n    };\n  };\n  status: string;\n  conclusion: string;\n  onReRunClick: () => void;\n};\n\nexport function useWorkflowRuns({\n  hostname,\n  owner,\n  repo,\n  branch,\n  initialPageSize = 5,\n}: {\n  hostname?: string;\n  owner: string;\n  repo: string;\n  branch?: string;\n  initialPageSize?: number;\n}) {\n  const api = useApi(githubActionsApiRef);\n\n  const errorApi = useApi(errorApiRef);\n\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(initialPageSize);\n\n  const {\n    loading,\n    value: runs,\n    retry,\n    error,\n  } = useAsyncRetry<WorkflowRun[]>(async () => {\n    // GitHub API pagination count starts from 1\n    const workflowRunsData = await api.listWorkflowRuns({\n      hostname,\n      owner,\n      repo,\n      pageSize,\n      page: page + 1,\n      branch,\n    });\n    setTotal(workflowRunsData.total_count);\n    // Transformation here\n    return workflowRunsData.workflow_runs.map(run => ({\n      workflowName: run.name,\n      message: run.head_commit.message,\n      id: `${run.id}`,\n      onReRunClick: async () => {\n        try {\n          await api.reRunWorkflow({\n            hostname,\n            owner,\n            repo,\n            runId: run.id,\n          });\n        } catch (e) {\n          errorApi.post(e);\n        }\n      },\n      source: {\n        branchName: run.head_branch,\n        commit: {\n          hash: run.head_commit.id,\n          url: run.head_repository?.branches_url?.replace(\n            '{/branch}',\n            run.head_branch,\n          ),\n        },\n      },\n      status: run.status,\n      conclusion: run.conclusion,\n      url: run.url,\n      githubUrl: run.html_url,\n    }));\n  }, [page, pageSize, repo, owner]);\n\n  return [\n    {\n      page,\n      pageSize,\n      loading,\n      runs,\n      projectName: `${owner}/${repo}`,\n      total,\n      error,\n    },\n    {\n      runs,\n      setPage,\n      setPageSize,\n      retry,\n    },\n  ] as const;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport {\n  Link,\n  Typography,\n  Box,\n  IconButton,\n  Tooltip,\n  Button,\n} from '@material-ui/core';\nimport RetryIcon from '@material-ui/icons/Replay';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useWorkflowRuns, WorkflowRun } from '../useWorkflowRuns';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport { buildRouteRef } from '../../routes';\nimport { getProjectNameFromEntity } from '../getProjectNameFromEntity';\nimport { Entity } from '@backstage/catalog-model';\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\n\nimport { EmptyState, Table, TableColumn } from '@backstage/core-components';\nimport { configApiRef, useApi, useRouteRef } from '@backstage/core-plugin-api';\n\nconst generatedColumns: TableColumn[] = [\n  {\n    title: 'ID',\n    field: 'id',\n    type: 'numeric',\n    width: '150px',\n  },\n  {\n    title: 'Message',\n    field: 'message',\n    highlight: true,\n    render: (row: Partial<WorkflowRun>) => {\n      const LinkWrapper = () => {\n        const routeLink = useRouteRef(buildRouteRef);\n        return (\n          <Link component={RouterLink} to={routeLink({ id: row.id! })}>\n            {row.message}\n          </Link>\n        );\n      };\n\n      return <LinkWrapper />;\n    },\n  },\n  {\n    title: 'Source',\n    render: (row: Partial<WorkflowRun>) => (\n      <Typography variant=\"body2\" noWrap>\n        <p>{row.source?.branchName}</p>\n        <p>{row.source?.commit.hash}</p>\n      </Typography>\n    ),\n  },\n  {\n    title: 'Workflow',\n    field: 'workflowName',\n  },\n  {\n    title: 'Status',\n    width: '150px',\n\n    render: (row: Partial<WorkflowRun>) => (\n      <Box display=\"flex\" alignItems=\"center\">\n        <WorkflowRunStatus status={row.status} conclusion={row.conclusion} />\n      </Box>\n    ),\n  },\n  {\n    title: 'Actions',\n    render: (row: Partial<WorkflowRun>) => (\n      <Tooltip title=\"Rerun workflow\">\n        <IconButton onClick={row.onReRunClick}>\n          <RetryIcon />\n        </IconButton>\n      </Tooltip>\n    ),\n    width: '10%',\n  },\n];\n\ntype Props = {\n  loading: boolean;\n  retry: () => void;\n  runs?: WorkflowRun[];\n  projectName: string;\n  page: number;\n  onChangePage: (page: number) => void;\n  total: number;\n  pageSize: number;\n  onChangePageSize: (pageSize: number) => void;\n};\n\nexport const WorkflowRunsTableView = ({\n  projectName,\n  loading,\n  pageSize,\n  page,\n  retry,\n  runs,\n  onChangePage,\n  onChangePageSize,\n  total,\n}: Props) => {\n  return (\n    <Table\n      isLoading={loading}\n      options={{ paging: true, pageSize, padding: 'dense' }}\n      totalCount={total}\n      page={page}\n      actions={[\n        {\n          icon: () => <SyncIcon />,\n          tooltip: 'Reload workflow runs',\n          isFreeAction: true,\n          onClick: () => retry(),\n        },\n      ]}\n      data={runs ?? []}\n      onPageChange={onChangePage}\n      onRowsPerPageChange={onChangePageSize}\n      style={{ width: '100%' }}\n      title={\n        <Box display=\"flex\" alignItems=\"center\">\n          <GitHubIcon />\n          <Box mr={1} />\n          <Typography variant=\"h6\">{projectName}</Typography>\n        </Box>\n      }\n      columns={generatedColumns}\n    />\n  );\n};\n\nexport const WorkflowRunsTable = ({\n  entity,\n  branch,\n}: {\n  entity: Entity;\n  branch?: string;\n}) => {\n  const config = useApi(configApiRef);\n  const projectName = getProjectNameFromEntity(entity);\n  // TODO: Get github hostname from metadata annotation\n  const hostname = readGitHubIntegrationConfigs(\n    config.getOptionalConfigArray('integrations.github') ?? [],\n  )[0].host;\n  const [owner, repo] = (projectName ?? '/').split('/');\n  const [{ runs, ...tableProps }, { retry, setPage, setPageSize }] =\n    useWorkflowRuns({\n      hostname,\n      owner,\n      repo,\n      branch,\n    });\n\n  const githubHost = hostname || 'github.com';\n  const hasNoRuns = !tableProps.loading && !runs;\n\n  return hasNoRuns ? (\n    <EmptyState\n      missing=\"data\"\n      title=\"No Workflow Data\"\n      description=\"This component has GitHub Actions enabled, but no data was found. Have you created any Workflows? Click the button below to create a new Workflow.\"\n      action={\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          href={`https://${githubHost}/${projectName}/actions/new`}\n        >\n          Create new Workflow\n        </Button>\n      }\n    />\n  ) : (\n    <WorkflowRunsTableView\n      {...tableProps}\n      runs={runs}\n      loading={tableProps.loading}\n      retry={retry}\n      onChangePageSize={setPageSize}\n      onChangePage={setPage}\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { Entity } from '@backstage/catalog-model';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { Routes, Route } from 'react-router';\nimport { buildRouteRef } from '../routes';\nimport { WorkflowRunDetails } from './WorkflowRunDetails';\nimport { WorkflowRunsTable } from './WorkflowRunsTable';\nimport { GITHUB_ACTIONS_ANNOTATION } from './getProjectNameFromEntity';\nimport { MissingAnnotationEmptyState } from '@backstage/core-components';\n\nexport const isGithubActionsAvailable = (entity: Entity) =>\n  Boolean(entity.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION]);\n\nexport const Router = () => {\n  const { entity } = useEntity();\n\n  if (!isGithubActionsAvailable(entity)) {\n    return (\n      <MissingAnnotationEmptyState annotation={GITHUB_ACTIONS_ANNOTATION} />\n    );\n  }\n  return (\n    <Routes>\n      <Route path=\"/\" element={<WorkflowRunsTable entity={entity} />} />\n      <Route\n        path={`${buildRouteRef.path}`}\n        element={<WorkflowRunDetails entity={entity} />}\n      />\n      )\n    </Routes>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  LinearProgress,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport React, { useEffect } from 'react';\nimport { GITHUB_ACTIONS_ANNOTATION } from '../getProjectNameFromEntity';\nimport { useWorkflowRuns, WorkflowRun } from '../useWorkflowRuns';\nimport { WorkflowRunsTable } from '../WorkflowRunsTable';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\n\nimport { configApiRef, errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport {\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  StructuredMetadataTable,\n} from '@backstage/core-components';\n\nconst useStyles = makeStyles<Theme>({\n  externalLinkIcon: {\n    fontSize: 'inherit',\n    verticalAlign: 'bottom',\n  },\n});\n\nconst WidgetContent = ({\n  error,\n  loading,\n  lastRun,\n  branch,\n}: {\n  error?: Error;\n  loading?: boolean;\n  lastRun: WorkflowRun;\n  branch: string;\n}) => {\n  const classes = useStyles();\n  if (error) return <Typography>Couldn't fetch latest {branch} run</Typography>;\n  if (loading) return <LinearProgress />;\n  return (\n    <StructuredMetadataTable\n      metadata={{\n        status: (\n          <>\n            <WorkflowRunStatus\n              status={lastRun.status}\n              conclusion={lastRun.conclusion}\n            />\n          </>\n        ),\n        message: lastRun.message,\n        url: (\n          <Link to={lastRun.githubUrl ?? ''}>\n            See more on GitHub{' '}\n            <ExternalLinkIcon className={classes.externalLinkIcon} />\n          </Link>\n        ),\n      }}\n    />\n  );\n};\n\nexport const LatestWorkflowRunCard = ({\n  branch = 'master',\n  // Display the card full height suitable for\n  variant,\n}: Props) => {\n  const { entity } = useEntity();\n  const config = useApi(configApiRef);\n  const errorApi = useApi(errorApiRef);\n  // TODO: Get github hostname from metadata annotation\n  const hostname = readGitHubIntegrationConfigs(\n    config.getOptionalConfigArray('integrations.github') ?? [],\n  )[0].host;\n  const [owner, repo] = (\n    entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? '/'\n  ).split('/');\n  const [{ runs, loading, error }] = useWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    branch,\n  });\n  const lastRun = runs?.[0] ?? ({} as WorkflowRun);\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  return (\n    <InfoCard title={`Last ${branch} build`} variant={variant}>\n      <WidgetContent\n        error={error}\n        loading={loading}\n        branch={branch}\n        lastRun={lastRun}\n      />\n    </InfoCard>\n  );\n};\n\ntype Props = {\n  branch: string;\n  variant?: InfoCardVariants;\n};\n\nexport const LatestWorkflowsForBranchCard = ({\n  branch = 'master',\n  variant,\n}: Props) => {\n  const { entity } = useEntity();\n\n  return (\n    <InfoCard title={`Last ${branch} build`} variant={variant}>\n      <WorkflowRunsTable branch={branch} entity={entity} />\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { readGitHubIntegrationConfigs } from '@backstage/integration';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport React, { useEffect } from 'react';\nimport { generatePath, Link as RouterLink } from 'react-router-dom';\nimport { GITHUB_ACTIONS_ANNOTATION } from '../getProjectNameFromEntity';\nimport { useWorkflowRuns } from '../useWorkflowRuns';\nimport { WorkflowRunStatus } from '../WorkflowRunStatus';\nimport { Typography } from '@material-ui/core';\n\nimport { configApiRef, errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport {\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  Table,\n} from '@backstage/core-components';\n\nconst firstLine = (message: string): string => message.split('\\n')[0];\n\nexport type Props = {\n  branch?: string;\n  dense?: boolean;\n  limit?: number;\n  variant?: InfoCardVariants;\n};\n\nexport const RecentWorkflowRunsCard = ({\n  branch,\n  dense = false,\n  limit = 5,\n  variant,\n}: Props) => {\n  const { entity } = useEntity();\n  const config = useApi(configApiRef);\n  const errorApi = useApi(errorApiRef);\n  // TODO: Get github hostname from metadata annotation\n  const hostname = readGitHubIntegrationConfigs(\n    config.getOptionalConfigArray('integrations.github') ?? [],\n  )[0].host;\n  const [owner, repo] = (\n    entity?.metadata.annotations?.[GITHUB_ACTIONS_ANNOTATION] ?? '/'\n  ).split('/');\n  const [{ runs = [], loading, error }] = useWorkflowRuns({\n    hostname,\n    owner,\n    repo,\n    branch,\n    initialPageSize: limit,\n  });\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  const githubHost = hostname || 'github.com';\n\n  return (\n    <InfoCard\n      title=\"Recent Workflow Runs\"\n      subheader={branch ? `Branch: ${branch}` : 'All Branches'}\n      noPadding\n      variant={variant}\n    >\n      {!runs.length ? (\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            This component has GitHub Actions enabled, but no workflows were\n            found.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to={`https://${githubHost}/${owner}/${repo}/actions/new`}>\n              Create a new workflow\n            </Link>\n          </Typography>\n        </div>\n      ) : (\n        <Table\n          isLoading={loading}\n          options={{\n            search: false,\n            paging: false,\n            padding: dense ? 'dense' : 'default',\n            toolbar: false,\n          }}\n          columns={[\n            {\n              title: 'Commit Message',\n              field: 'message',\n              render: data => (\n                <Link\n                  component={RouterLink}\n                  to={generatePath('./ci-cd/:id', { id: data.id! })}\n                >\n                  {firstLine(data.message)}\n                </Link>\n              ),\n            },\n            { title: 'Branch', field: 'source.branchName' },\n            { title: 'Status', field: 'status', render: WorkflowRunStatus },\n          ]}\n          data={runs}\n        />\n      )}\n    </InfoCard>\n  );\n};\n"],"names":["useStyles","MaterialLink","Link","RouterLink","Table"],"mappings":";;;;;;;;;;;;;;;;;;;AAmBO,MAAM,sBAAsB,YAA+B,CAAA;AAAA,EAChE,EAAI,EAAA,8BAAA;AAAA,CAAA;;ACCuD,MAAA,mBAAA,CAAA;AAAA,EAI3D,YAAY,OAA4D,EAAA;AACtE,IAAA,IAAA,CAAK,YAAY,OAAQ,CAAA,SAAA,CAAA;AACzB,IAAA,IAAA,CAAK,gBAAgB,OAAQ,CAAA,aAAA,CAAA;AAAA,GAAA;AAAA,EAAA,MAGjB,WAAW,QAAqC,EAAA;AA9BhE,IAAA,IAAA,EAAA,CAAA;AAgCI,IAAA,MAAM,KAAQ,GAAA,MAAM,IAAK,CAAA,aAAA,CAAc,eAAe,CAAC,MAAA,CAAA,CAAA,CAAA;AACvD,IAAA,MAAM,UAAU,4BACd,CAAA,CAAA,EAAA,GAAA,IAAA,CAAK,SAAU,CAAA,sBAAA,CAAuB,2BAAtC,IAAgE,GAAA,EAAA,GAAA,EAAA,CAAA,CAAA;AAElE,IAAA,MAAM,uBAA0B,GAAA,OAAA,CAAQ,IACtC,CAAA,CAAA,CAAA,KAAK,EAAE,IAAS,KAAA,QAAA,CAAA,CAAA;AAElB,IAAA,MAAM,UAAU,uBAAyB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,uBAAA,CAAA,UAAA,CAAA;AACzC,IAAA,OAAO,IAAI,OAAA,CAAQ,EAAE,IAAA,EAAM,KAAO,EAAA,OAAA,EAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAAA,MAG9B,aAAc,CAAA;AAAA,IAClB,QAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,KAAA;AAAA,GAMe,EAAA;AACf,IAAM,MAAA,OAAA,GAAU,MAAM,IAAA,CAAK,UAAW,CAAA,QAAA,CAAA,CAAA;AACtC,IAAO,OAAA,OAAA,CAAQ,QAAQ,aAAc,CAAA;AAAA,MACnC,KAAA;AAAA,MACA,IAAA;AAAA,MACA,MAAQ,EAAA,KAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAAA,MAGN,gBAAiB,CAAA;AAAA,IACrB,QAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,QAAW,GAAA,GAAA;AAAA,IACX,IAAO,GAAA,CAAA;AAAA,IACP,MAAA;AAAA,GAUA,EAAA;AACA,IAAM,MAAA,OAAA,GAAU,MAAM,IAAA,CAAK,UAAW,CAAA,QAAA,CAAA,CAAA;AACtC,IAAA,MAAM,YAAe,GAAA,MAAM,OAAQ,CAAA,OAAA,CAAQ,uBAAwB,CAAA;AAAA,MACjE,KAAA;AAAA,MACA,IAAA;AAAA,MACA,QAAU,EAAA,QAAA;AAAA,MACV,IAAA;AAAA,MACI,GAAA,MAAA,GAAS,EAAE,MAAW,EAAA,GAAA,EAAA;AAAA,KAAA,CAAA,CAAA;AAE5B,IAAA,OAAO,YAAa,CAAA,IAAA,CAAA;AAAA,GAAA;AAAA,EAAA,MAEhB,WAAY,CAAA;AAAA,IAChB,QAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,EAAA;AAAA,GAQA,EAAA;AACA,IAAM,MAAA,OAAA,GAAU,MAAM,IAAA,CAAK,UAAW,CAAA,QAAA,CAAA,CAAA;AACtC,IAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,OAAA,CAAQ,WAAY,CAAA;AAAA,MACjD,KAAA;AAAA,MACA,IAAA;AAAA,MACA,WAAa,EAAA,EAAA;AAAA,KAAA,CAAA,CAAA;AAEf,IAAA,OAAO,QAAS,CAAA,IAAA,CAAA;AAAA,GAAA;AAAA,EAAA,MAEZ,cAAe,CAAA;AAAA,IACnB,QAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,EAAA;AAAA,GAQA,EAAA;AACA,IAAM,MAAA,OAAA,GAAU,MAAM,IAAA,CAAK,UAAW,CAAA,QAAA,CAAA,CAAA;AACtC,IAAA,MAAM,GAAM,GAAA,MAAM,OAAQ,CAAA,OAAA,CAAQ,cAAe,CAAA;AAAA,MAC/C,KAAA;AAAA,MACA,IAAA;AAAA,MACA,MAAQ,EAAA,EAAA;AAAA,KAAA,CAAA,CAAA;AAEV,IAAA,OAAO,GAAI,CAAA,IAAA,CAAA;AAAA,GAAA;AAAA,EAAA,MAEP,sBAAuB,CAAA;AAAA,IAC3B,QAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,EAAA;AAAA,IACA,QAAW,GAAA,GAAA;AAAA,IACX,IAAO,GAAA,CAAA;AAAA,GAUP,EAAA;AACA,IAAM,MAAA,OAAA,GAAU,MAAM,IAAA,CAAK,UAAW,CAAA,QAAA,CAAA,CAAA;AACtC,IAAA,MAAM,IAAO,GAAA,MAAM,OAAQ,CAAA,OAAA,CAAQ,sBAAuB,CAAA;AAAA,MACxD,KAAA;AAAA,MACA,IAAA;AAAA,MACA,MAAQ,EAAA,EAAA;AAAA,MACR,QAAU,EAAA,QAAA;AAAA,MACV,IAAA;AAAA,KAAA,CAAA,CAAA;AAEF,IAAA,OAAO,IAAK,CAAA,IAAA,CAAA;AAAA,GAAA;AAAA,EAAA,MAER,6BAA8B,CAAA;AAAA,IAClC,QAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,KAAA;AAAA,GAQA,EAAA;AACA,IAAM,MAAA,OAAA,GAAU,MAAM,IAAA,CAAK,UAAW,CAAA,QAAA,CAAA,CAAA;AACtC,IAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,OAAA,CAAQ,6BAA8B,CAAA;AAAA,MACnE,KAAA;AAAA,MACA,IAAA;AAAA,MACA,MAAQ,EAAA,KAAA;AAAA,KAAA,CAAA,CAAA;AAEV,IAAA,OAAO,QAAS,CAAA,IAAA,CAAA;AAAA,GAAA;AAAA;;ACvIR,IAAA,WAAA,qBAAA,YAAL,KAAA;AACL,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AACA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AACA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AACA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AAJU,EAAA,OAAA,YAAA,CAAA;AAAA,CAAA,EAAA,WAAA,IAAA,EAAA;;ACvBL,MAAM,eAAe,cAAe,CAAA;AAAA,EACzC,EAAI,EAAA,gBAAA;AAAA,CAAA,CAAA,CAAA;AAGC,MAAM,gBAAgB,iBAAkB,CAAA;AAAA,EAC7C,EAAI,EAAA,sBAAA;AAAA,EACJ,IAAM,EAAA,MAAA;AAAA,EACN,MAAQ,EAAA,YAAA;AAAA,CAAA,CAAA;;ACEH,MAAM,sBAAsB,YAAa,CAAA;AAAA,EAC9C,EAAI,EAAA,gBAAA;AAAA,EACJ,IAAM,EAAA;AAAA,IACJ,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,mBAAA;AAAA,MACL,IAAM,EAAA,EAAE,SAAW,EAAA,YAAA,EAAc,aAAe,EAAA,gBAAA,EAAA;AAAA,MAChD,OAAA,EAAS,CAAC,EAAE,SAAA,EAAW,oBACrB,IAAI,mBAAA,CAAoB,EAAE,SAAW,EAAA,aAAA,EAAA,CAAA;AAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAG3C,MAAQ,EAAA;AAAA,IACN,aAAe,EAAA,YAAA;AAAA,GAAA;AAAA,CAAA,EAAA;AAIN,MAAA,0BAAA,GAA6B,mBAAoB,CAAA,OAAA,CAC5D,uBAAwB,CAAA;AAAA,EACtB,IAAM,EAAA,4BAAA;AAAA,EACN,WAAW,MAAM,wDAA8B,CAAA,IAAA,CAAK,OAAK,CAAE,CAAA,MAAA,CAAA;AAAA,EAC3D,UAAY,EAAA,YAAA;AAAA,CAAA,CAAA,EAAA;AAIH,MAAA,+BAAA,GAAkC,mBAAoB,CAAA,OAAA,CACjE,wBAAyB,CAAA;AAAA,EACvB,IAAM,EAAA,iCAAA;AAAA,EACN,SAAW,EAAA;AAAA,IACT,MAAM,MACJ,OAAO,6BAAsB,CAAA,CAAA,IAAA,CAAK,OAAK,CAAE,CAAA,qBAAA,CAAA;AAAA,GAAA;AAAA,CAAA,CAAA,EAAA;AAKpC,MAAA,sCAAA,GACX,mBAAoB,CAAA,OAAA,CAClB,wBAAyB,CAAA;AAAA,EACvB,IAAM,EAAA,wCAAA;AAAA,EACN,SAAW,EAAA;AAAA,IACT,MAAM,MACJ,OAAO,6BAAsB,CAAA,CAAA,IAAA,CAC3B,OAAK,CAAE,CAAA,4BAAA,CAAA;AAAA,GAAA;AAAA,CAAA,CAAA,EAAA;AAMN,MAAA,iCAAA,GAAoC,mBAAoB,CAAA,OAAA,CACnE,wBAAyB,CAAA;AAAA,EACvB,IAAM,EAAA,mCAAA;AAAA,EACN,SAAW,EAAA;AAAA,IACT,MAAM,MACJ,OAAO,6BAAsB,CAAA,CAAA,IAAA,CAAK,OAAK,CAAE,CAAA,sBAAA,CAAA;AAAA,GAAA;AAAA,CAAA,CAAA;;AC7D1C,MAAM,yBAA4B,GAAA,0BAAA;AAE5B,MAAA,wBAAA,GAA2B,CAAC,MAAgB,KAAA;AAnBzD,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAoBE,EAAA,OAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAQ,QAAS,CAAA,WAAA,KAAjB,IAA+B,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,yBAAA,CAAA,KAA/B,IAA6D,GAAA,EAAA,GAAA,EAAA,CAAA;AAAA,CAAA;;ACMxD,MAAM,oBAAoB,CAAC;AAAA,EAChC,MAAA;AAAA,EACA,UAAA;AAAA,CAII,KAAA;AACJ,EAAA,IAAI,MAAW,KAAA,KAAA,CAAA;AAAW,IAAO,OAAA,IAAA,CAAA;AACjC,EAAA,QAAQ,OAAO,iBAAkB,CAAA,OAAA,CAAA;AAAA,IAC1B,KAAA,QAAA;AACH,MACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,aAAA,EAAD,IAAiB,CAAA,EAAA,SAAA,CAAA,CAAA;AAAA,IAGlB,KAAA,aAAA;AACH,MACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,aAAA,EAAD,IAAiB,CAAA,EAAA,cAAA,CAAA,CAAA;AAAA,IAGlB,KAAA,WAAA;AACH,MAAA,QAAQ,yCAAY,iBAAkB,CAAA,OAAA,CAAA;AAAA,QAC/B,KAAA,SAAA;AACH,UACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,aAAA,EAAD,IAAiB,CAAA,EAAA,UAAA,CAAA,CAAA;AAAA,QAGlB,KAAA,WAAA;AACH,UACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,aAAA,EAAD,IAAiB,CAAA,EAAA,YAAA,CAAA,CAAA;AAAA,QAGlB,KAAA,SAAA;AACH,UACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,WAAA,EAAD,IAAe,CAAA,EAAA,QAAA,CAAA,CAAA;AAAA,QAAA;AAInB,UACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,QAAA,EAAD,IAAY,CAAA,EAAA,YAAA,CAAA,CAAA;AAAA,OAAA;AAAA,IAAA;AAKpB,MACE,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,aAAA,EAAD,IAAiB,CAAA,EAAA,UAAA,CAAA,CAAA;AAAA,GAAA;AAAA,CAAA;;ACzDpB,MAAM,qBAAqB,CAAC;AAAA,EACjC,QAAA;AAAA,EACA,KAAA;AAAA,EACA,IAAA;AAAA,CAKI,KAAA;AACJ,EAAA,MAAM,MAAM,MAAO,CAAA,mBAAA,CAAA,CAAA;AACnB,EAAM,MAAA,EAAE,OAAO,iBAAkB,CAAA,aAAA,CAAA,CAAA;AACjC,EAAM,MAAA,IAAA,GAAO,SAAS,YAAY;AAChC,IAAO,OAAA,IAAA,IAAQ,KACX,GAAA,GAAA,CAAI,sBAAuB,CAAA;AAAA,MACzB,QAAA;AAAA,MACA,KAAA;AAAA,MACA,IAAA;AAAA,MACA,EAAA,EAAI,SAAS,EAAI,EAAA,EAAA,CAAA;AAAA,KAEnB,CAAA,GAAA,OAAA,CAAQ,MAAO,CAAA,IAAI,KAAM,CAAA,wBAAA,CAAA,CAAA,CAAA;AAAA,GAC5B,EAAA,CAAC,MAAM,KAAO,EAAA,EAAA,CAAA,CAAA,CAAA;AACjB,EAAO,OAAA,IAAA,CAAA;AAAA,CAAA;;ACrBF,MAAM,yBAAyB,CAAC;AAAA,EACrC,QAAA;AAAA,EACA,KAAA;AAAA,EACA,IAAA;AAAA,CAKI,KAAA;AACJ,EAAA,MAAM,MAAM,MAAO,CAAA,mBAAA,CAAA,CAAA;AACnB,EAAM,MAAA,EAAE,OAAO,iBAAkB,CAAA,aAAA,CAAA,CAAA;AACjC,EAAM,MAAA,OAAA,GAAU,SAAS,YAAY;AACnC,IAAO,OAAA,IAAA,IAAQ,KACX,GAAA,GAAA,CAAI,cAAe,CAAA;AAAA,MACjB,QAAA;AAAA,MACA,KAAA;AAAA,MACA,IAAA;AAAA,MACA,EAAA,EAAI,SAAS,EAAI,EAAA,EAAA,CAAA;AAAA,KAEnB,CAAA,GAAA,OAAA,CAAQ,MAAO,CAAA,IAAI,KAAM,CAAA,wBAAA,CAAA,CAAA,CAAA;AAAA,GAC5B,EAAA,CAAC,MAAM,KAAO,EAAA,EAAA,CAAA,CAAA,CAAA;AACjB,EAAO,OAAA,OAAA,CAAA;AAAA,CAAA;;ACrBF,MAAM,6BAA6B,CAAC;AAAA,EACzC,QAAA;AAAA,EACA,KAAA;AAAA,EACA,IAAA;AAAA,EACA,EAAA;AAAA,CAMI,KAAA;AACJ,EAAA,MAAM,MAAM,MAAO,CAAA,mBAAA,CAAA,CAAA;AACnB,EAAM,MAAA,OAAA,GAAU,SAAS,YAAY;AACnC,IAAO,OAAA,IAAA,IAAQ,KACX,GAAA,GAAA,CAAI,6BAA8B,CAAA;AAAA,MAChC,QAAA;AAAA,MACA,KAAA;AAAA,MACA,IAAA;AAAA,MACA,KAAO,EAAA,EAAA;AAAA,KAAA,CAAA,GAET,QAAQ,MAAO,CAAA,wBAAA,CAAA,CAAA;AAAA,GAClB,EAAA,CAAC,MAAM,KAAO,EAAA,EAAA,CAAA,CAAA,CAAA;AACjB,EAAO,OAAA,OAAA,CAAA;AAAA,CAAA;;ACJT,MAAMA,WAAA,GAAY,WAAkB,CAAU,KAAA,MAAA;AAAA,EAC5C,MAAQ,EAAA;AAAA,IACN,KAAO,EAAA,CAAA,CAAA;AAAA,IACP,WAAa,EAAA,CAAA;AAAA,IACb,UAAY,EAAA,OAAA;AAAA,GAAA;AAAA,EAEd,KAAO,EAAA;AAAA,IACL,OAAS,EAAA,MAAA;AAAA,IACT,UAAY,EAAA,QAAA;AAAA,IACZ,KAAO,EAAA,KAAA;AAAA,IACP,MAAQ,EAAA,KAAA;AAAA,IACR,cAAgB,EAAA,QAAA;AAAA,IAChB,MAAQ,EAAA,MAAA;AAAA,GAAA;AAAA,EAEV,kBAAoB,EAAA;AAAA,IAClB,MAAQ,EAAA,MAAA;AAAA,IACR,KAAO,EAAA,MAAA;AAAA,GAAA;AAAA,EAET,iBAAmB,EAAA;AAAA,IACjB,MAAQ,EAAA,MAAA;AAAA,IACR,KAAO,EAAA,MAAA;AAAA,GAAA;AAAA,EAET,GAAK,EAAA;AAAA,IACH,UAAA,EAAY,KAAM,CAAA,OAAA,CAAQ,UAAW,CAAA,OAAA;AAAA,GAAA;AAAA,CAAA,CAAA,CAAA,CAAA;AAOlC,MAAM,kBAAkB,CAAC;AAAA,EAC9B,MAAA;AAAA,EACA,KAAA;AAAA,EACA,UAAA;AAAA,CAKI,KAAA;AA5EN,EAAA,IAAA,EAAA,CAAA;AA6EE,EAAA,MAAM,SAAS,MAAO,CAAA,YAAA,CAAA,CAAA;AACtB,EAAA,MAAM,OAAU,GAAAA,WAAA,EAAA,CAAA;AAChB,EAAA,MAAM,cAAc,wBAAyB,CAAA,MAAA,CAAA,CAAA;AAG7C,EAAA,MAAM,WAAW,4BACf,CAAA,CAAA,EAAA,GAAA,MAAA,CAAO,uBAAuB,qBAA9B,CAAA,KAAA,IAAA,GAAA,EAAA,GAAwD,IACxD,CAAG,CAAA,CAAA,IAAA,CAAA;AACL,EAAA,MAAM,CAAC,KAAO,EAAA,IAAA,CAAA,GAAS,WAAe,IAAA,WAAA,CAAY,MAAM,GAAS,CAAA,IAAA,EAAA,CAAA;AACjE,EAAA,MAAM,UAAU,0BAA2B,CAAA;AAAA,IACzC,QAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,EAAI,EAAA,KAAA;AAAA,GAAA,CAAA,CAAA;AAEN,EAAA,MAAM,OAAU,GAAA,OAAA,CAAQ,KAAQ,GAAA,MAAA,CAAO,QAAQ,KAAS,CAAA,GAAA,KAAA,CAAA,CAAA;AACxD,EAAA,MAAM,CAAC,IAAA,EAAM,OAAW,CAAA,GAAA,KAAA,CAAM,QAAS,CAAA,KAAA,CAAA,CAAA;AAEvC,EAAA,MAAM,aAAa,MAAM;AACvB,IAAQ,OAAA,CAAA,IAAA,CAAA,CAAA;AAAA,GAAA,CAAA;AAGV,EAAA,MAAM,cAAc,MAAM;AACxB,IAAQ,OAAA,CAAA,KAAA,CAAA,CAAA;AAAA,GAAA,CAAA;AAGV,EAAA,2CACG,SAAD,EAAA;AAAA,IAAW,eAAA,EAAiB,EAAE,aAAe,EAAA,IAAA,EAAA;AAAA,IAAQ,QAAU,EAAA,UAAA;AAAA,GAAA,sCAC5D,gBAAD,EAAA;AAAA,IACE,UAAA,sCAAa,cAAD,EAAA,IAAA,CAAA;AAAA,IACZ,iBAAe,CAAS,MAAA,EAAA,IAAA,CAAA,QAAA,CAAA;AAAA,IACxB,IAAI,CAAS,MAAA,EAAA,IAAA,CAAA,OAAA,CAAA;AAAA,IACb,eAAiB,EAAA;AAAA,MACf,WAAW,OAAQ,CAAA,MAAA;AAAA,KAAA;AAAA,GAAA,sCAGpB,UAAD,EAAA;AAAA,IAAY,OAAQ,EAAA,QAAA;AAAA,GAAA,EACjB,QAAQ,OAAU,mBAAA,KAAA,CAAA,aAAA,CAAC,kBAAD,IAAuB,CAAA,GAAA,SAAA,CAAA,sCAE3C,OAAD,EAAA;AAAA,IAAS,KAAM,EAAA,UAAA;AAAA,IAAW,mBAAqB,EAAA,IAAA;AAAA,IAAM,KAAK,EAAA,IAAA;AAAA,GAAA,sCACvD,eAAD,EAAA;AAAA,IACE,SAAS,CAAS,KAAA,KAAA;AAChB,MAAM,KAAA,CAAA,eAAA,EAAA,CAAA;AACN,MAAA,UAAA,EAAA,CAAA;AAAA,KAAA;AAAA,IAEF,KAAA,EAAO,EAAE,UAAY,EAAA,MAAA,EAAA;AAAA,GAAA,CAAA,CAAA,sCAGxB,KAAD,EAAA;AAAA,IACE,WAAW,OAAQ,CAAA,KAAA;AAAA,IACnB,OAAA,EAAS,WAAS,KAAM,CAAA,eAAA,EAAA;AAAA,IACxB,IAAA;AAAA,IACA,OAAS,EAAA,WAAA;AAAA,GAAA,sCAER,IAAD,EAAA;AAAA,IAAM,EAAI,EAAA,IAAA;AAAA,GAAA,sCACP,KAAD,EAAA;AAAA,IAAK,WAAW,OAAQ,CAAA,iBAAA;AAAA,GAAA,sCACrB,SAAD,EAAA;AAAA,IACE,MAAM,OAAW,IAAA,IAAA,GAAA,OAAA,GAAA,iBAAA;AAAA,IACjB,OAAA,EAAS,EAAE,IAAA,EAAM,OAAQ,CAAA,GAAA,EAAA;AAAA,GAMlC,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,OAAA,wCACE,KAAD,EAAA;AAAA,IAAK,WAAW,OAAQ,CAAA,kBAAA;AAAA,GAAA,sCACrB,SAAD,EAAA;AAAA,IAAW,IAAM,EAAA,OAAA;AAAA,IAAS,OAAA,EAAS,EAAE,IAAA,EAAM,OAAQ,CAAA,GAAA,EAAA;AAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA;;AC7F7D,MAAMA,WAAA,GAAY,WAAkB,CAAU,KAAA,MAAA;AAAA,EAC5C,IAAM,EAAA;AAAA,IACJ,QAAU,EAAA,GAAA;AAAA,IACV,MAAA,EAAQ,MAAM,OAAQ,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAExB,KAAO,EAAA;AAAA,IACL,OAAS,EAAA,KAAA,CAAM,OAAQ,CAAA,CAAA,EAAG,GAAG,CAAG,EAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAElC,KAAO,EAAA;AAAA,IACL,OAAA,EAAS,MAAM,OAAQ,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAEzB,gBAAkB,EAAA;AAAA,IAChB,OAAS,EAAA,CAAA;AAAA,GAAA;AAAA,EAEX,MAAQ,EAAA;AAAA,IACN,KAAO,EAAA,CAAA,CAAA;AAAA,IACP,WAAa,EAAA,CAAA;AAAA,IACb,UAAY,EAAA,OAAA;AAAA,GAAA;AAAA,EAEd,gBAAkB,EAAA;AAAA,IAChB,QAAU,EAAA,SAAA;AAAA,IACV,aAAe,EAAA,QAAA;AAAA,GAAA;AAAA,CAAA,CAAA,CAAA,CAAA;AAInB,MAAM,cAAA,GAAiB,CAAC,KAAA,EAAe,GAAgB,KAAA;AACrD,EAAM,MAAA,SAAA,GAAY,SAAS,OAAQ,CAAA,KAAA,CAAA,CAAA;AACnC,EAAA,MAAM,OAAU,GAAA,GAAA,GAAM,QAAS,CAAA,OAAA,CAAQ,OAAO,QAAS,CAAA,GAAA,EAAA,CAAA;AACvD,EAAM,MAAA,IAAA,GAAO,QAAQ,IAAK,CAAA,SAAA,CAAA,CAAA;AAC1B,EAAM,MAAA,WAAA,GAAc,KAAK,QAAS,CAAA,CAAA,uBAAA,CAAA,CAAA,CAAA;AAClC,EAAO,OAAA,WAAA,CAAA;AAAA,CAAA,CAAA;AAGT,MAAM,QAAA,GAAW,CAAC,EAAE,IAA2B,EAAA,KAAA;AAnF/C,EAAA,IAAA,EAAA,CAAA;AAoFE,EAAA,2CACG,QAAD,EAAA,IAAA,sCACG,SAAD,EAAA,IAAA,sCACG,YAAD,EAAA;AAAA,IACE,SAAS,IAAK,CAAA,IAAA;AAAA,IACd,SAAW,EAAA,cAAA,CAAe,IAAK,CAAA,UAAA,EAAY,IAAK,CAAA,YAAA,CAAA;AAAA,GAAA,CAAA,CAAA,kBAGnD,KAAA,CAAA,aAAA,CAAA,SAAA,EAAD,IACE,kBAAA,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;AAAA,IACE,MAAA,EAAQ,IAAK,CAAA,MAAA,CAAO,iBAAkB,CAAA,OAAA,CAAA;AAAA,IACtC,UAAY,EAAA,CAAA,EAAA,GAAA,IAAA,CAAK,UAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAiB,iBAAkB,CAAA,OAAA,CAAA;AAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA;AAOzD,MAAM,cAAc,CAAC;AAAA,EACnB,GAAA;AAAA,EACA,SAAA;AAAA,EACA,MAAA;AAAA,CAKI,KAAA;AACJ,EAAA,MAAM,OAAU,GAAAA,WAAA,EAAA,CAAA;AAChB,EAAA,2CACG,SAAD,EAAA;AAAA,IAAW,eAAA,EAAiB,EAAE,aAAe,EAAA,IAAA,EAAA;AAAA,IAAQ,SAAA;AAAA,GAAA,sCAClD,gBAAD,EAAA;AAAA,IACE,UAAA,sCAAa,cAAD,EAAA,IAAA,CAAA;AAAA,IACZ,iBAAe,CAAS,MAAA,EAAA,IAAA,CAAA,QAAA,CAAA;AAAA,IACxB,IAAI,CAAS,MAAA,EAAA,IAAA,CAAA,OAAA,CAAA;AAAA,IACb,eAAiB,EAAA;AAAA,MACf,WAAW,OAAQ,CAAA,MAAA;AAAA,KAAA;AAAA,GAAA,sCAGpB,UAAD,EAAA;AAAA,IAAY,OAAQ,EAAA,QAAA;AAAA,GACjB,EAAA,GAAA,CAAI,IAAK,EAAA,IAAA,EAAG,cAAe,CAAA,GAAA,CAAI,YAAY,GAAI,CAAA,YAAA,CAAA,EAAc,GAGlE,CAAA,CAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA;AAAA,IAAkB,WAAW,OAAQ,CAAA,gBAAA;AAAA,GACnC,kBAAA,KAAA,CAAA,aAAA,CAAC,cAAD,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAD,IACG,EAAA,GAAA,CAAI,KAAM,CAAA,GAAA,CAAI,CACb,IAAA,qBAAA,KAAA,CAAA,aAAA,CAAC,QAAD,EAAA;AAAA,IAAU,KAAK,IAAK,CAAA,MAAA;AAAA,IAAQ,IAAA;AAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAKnC,IAAI,MAAW,KAAA,QAAA,IAAY,IAAI,MAAW,KAAA,aAAA,uCACxC,eAAD,EAAA;AAAA,IAAiB,OAAO,GAAI,CAAA,EAAA;AAAA,IAAI,UAAU,EAAA,IAAA;AAAA,IAAC,MAAA;AAAA,GAAA,CAAA,uCAE1C,eAAD,EAAA;AAAA,IAAiB,OAAO,GAAI,CAAA,EAAA;AAAA,IAAI,UAAY,EAAA,KAAA;AAAA,IAAO,MAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA;AAM3D,MAAM,QAAW,GAAA,CAAC,EAAE,IAAA,EAAM,MAA8C,EAAA,KAAA;AACtE,EAAA,MAAM,OAAU,GAAAA,WAAA,EAAA,CAAA;AAChB,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,GAAA,EAAD,IACG,EAAA,IAAA,IACC,IAAK,CAAA,WAAA,GAAc,CACnB,IAAA,IAAA,CAAK,IAAK,CAAA,GAAA,CAAI,CACZ,GAAA,qBAAA,KAAA,CAAA,aAAA,CAAC,WAAD,EAAA;AAAA,IACE,KAAK,GAAI,CAAA,EAAA;AAAA,IACT,GAAA;AAAA,IACA,WACE,GAAI,CAAA,MAAA,KAAW,SAAY,GAAA,OAAA,CAAQ,SAAS,OAAQ,CAAA,OAAA;AAAA,IAEtD,MAAA;AAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA,CAAA;AAOC,MAAA,kBAAA,GAAqB,CAAC,EAAE,MAAiC,EAAA,KAAA;AApKtE,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAqKE,EAAA,MAAM,SAAS,MAAO,CAAA,YAAA,CAAA,CAAA;AACtB,EAAA,MAAM,cAAc,wBAAyB,CAAA,MAAA,CAAA,CAAA;AAG7C,EAAA,MAAM,WAAW,4BACf,CAAA,CAAA,EAAA,GAAA,MAAA,CAAO,uBAAuB,qBAA9B,CAAA,KAAA,IAAA,GAAA,EAAA,GAAwD,IACxD,CAAG,CAAA,CAAA,IAAA,CAAA;AACL,EAAA,MAAM,CAAC,KAAO,EAAA,IAAA,CAAA,GAAS,WAAe,IAAA,WAAA,CAAY,MAAM,GAAS,CAAA,IAAA,EAAA,CAAA;AACjE,EAAA,MAAM,OAAU,GAAA,sBAAA,CAAuB,EAAE,QAAA,EAAU,KAAO,EAAA,IAAA,EAAA,CAAA,CAAA;AAC1D,EAAA,MAAM,IAAO,GAAA,kBAAA,CAAmB,EAAE,QAAA,EAAU,KAAO,EAAA,IAAA,EAAA,CAAA,CAAA;AAEnD,EAAA,MAAM,OAAU,GAAAA,WAAA,EAAA,CAAA;AAEhB,EAAA,IAAI,OAAQ,CAAA,KAAA,IAAS,OAAQ,CAAA,KAAA,CAAM,OAAS,EAAA;AAC1C,IAAA,2CACG,UAAD,EAAA;AAAA,MAAY,OAAQ,EAAA,IAAA;AAAA,MAAK,KAAM,EAAA,OAAA;AAAA,KAAQ,EAAA,wBAAA,EACd,QAAQ,KAAM,CAAA,OAAA,CAAA,CAAA;AAAA,GAAA,MAAA,IAGhC,QAAQ,OAAS,EAAA;AAC1B,IAAA,2CAAQ,cAAD,EAAA,IAAA,CAAA,CAAA;AAAA,GAAA;AAET,EAAA,2CACG,KAAD,EAAA;AAAA,IAAK,WAAW,OAAQ,CAAA,IAAA;AAAA,GAAA,sCACrB,GAAD,EAAA;AAAA,IAAK,EAAI,EAAA,CAAA;AAAA,GAAA,sCACN,WAAD,EAAA;AAAA,IAAa,YAAW,EAAA,YAAA;AAAA,GAAA,sCACrB,IAAD,EAAA;AAAA,IAAM,EAAG,EAAA,IAAA;AAAA,GAAA,EAAK,kCACb,KAAA,CAAA,aAAA,CAAA,UAAA,EAAD,IAAY,EAAA,sBAAA,CAAA,CAAA,CAAA,sCAGf,cAAD,EAAA;AAAA,IAAgB,SAAW,EAAA,KAAA;AAAA,IAAO,WAAW,OAAQ,CAAA,KAAA;AAAA,GAAA,kBAClD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAD,IACE,kBAAA,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,QAAA,EAAD,IACE,kBAAA,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,IAAA,sCACG,UAAD,EAAA;AAAA,IAAY,MAAM,EAAA,IAAA;AAAA,GAAA,EAAC,QAErB,CAAA,CAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,IAAA,EAAY,cAAQ,KAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,WAE7B,CAAA,CAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAD,IACE,kBAAA,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,IAAA,sCACG,UAAD,EAAA;AAAA,IAAY,MAAM,EAAA,IAAA;AAAA,GAAA,EAAC,6BAEpB,KAAA,CAAA,aAAA,CAAA,SAAA,EAAD,IAAY,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,UAAR,IAAe,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAA,KAAf,IAA4B,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAA,CAAA,CAAA,sCAEzC,QAAD,EAAA,IAAA,sCACG,SAAD,EAAA,IAAA,sCACG,UAAD,EAAA;AAAA,IAAY,MAAM,EAAA,IAAA;AAAA,GAAA,EAAC,+BAEpB,KAAA,CAAA,aAAA,CAAA,SAAA,EAAD,IAAY,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,UAAR,IAAe,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAA,KAAf,IAA4B,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,CAAA,CAAA,sCAEzC,QAAD,EAAA,IAAA,sCACG,SAAD,EAAA,IAAA,sCACG,UAAD,EAAA;AAAA,IAAY,MAAM,EAAA,IAAA;AAAA,GAAA,EAAC,UAErB,CAAA,CAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,IAAA,EAAY,cAAQ,KAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,IAE7B,CAAA,CAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAD,IACE,kBAAA,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,IAAA,sCACG,UAAD,EAAA;AAAA,IAAY,MAAM,EAAA,IAAA;AAAA,GAAA,EAAC,QAErB,CAAA,CAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,IAAA,sCACG,iBAAD,EAAA;AAAA,IACE,MAAQ,EAAA,CAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,KAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,MAAU,KAAA,KAAA,CAAA;AAAA,IACjC,UAAY,EAAA,CAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,KAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,UAAc,KAAA,KAAA,CAAA;AAAA,GAAA,CAAA,CAAA,CAAA,sCAI9C,QAAD,EAAA,IAAA,sCACG,SAAD,EAAA,IAAA,sCACG,UAAD,EAAA;AAAA,IAAY,MAAM,EAAA,IAAA;AAAA,GAAA,EAAC,QAErB,CAAA,CAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA,IAAA,EAAY,CAAG,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,KAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,WAAf,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAA4B,MAA5B,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAoC,IAAS,CAAA,EAAA,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,KAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,WAAf,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAA4B,MAA5B,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAoC,KAElG,CAAA,CAAA,CAAA,CAAA,CAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,QAAD,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,SAAA,EAAD,IACE,kBAAA,KAAA,CAAA,aAAA,CAAC,UAAD,EAAA;AAAA,IAAY,MAAM,EAAA,IAAA;AAAA,GAAC,EAAA,OAAA,CAAA,CAAA,sCAEpB,SAAD,EAAA,IAAA,EACG,eAAQ,KAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,QACd,qBAAA,KAAA,CAAA,aAAA,CAACC,MAAD,EAAA;AAAA,IAAc,MAAO,EAAA,QAAA;AAAA,IAAS,IAAA,EAAM,QAAQ,KAAM,CAAA,QAAA;AAAA,GAAU,EAAA,yBAAA,EAClC,GACxB,kBAAA,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA;AAAA,IAAkB,WAAW,OAAQ,CAAA,gBAAA;AAAA,GAAA,CAAA,CAAA,CAAA,CAAA,kBAK5C,KAAA,CAAA,aAAA,CAAA,QAAA,EAAD,IACE,kBAAA,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA;AAAA,IAAW,OAAS,EAAA,CAAA;AAAA,GAAA,sCACjB,UAAD,EAAA;AAAA,IAAY,MAAM,EAAA,IAAA;AAAA,GAAA,EAAC,SAClB,IAAK,CAAA,OAAA,uCACH,gBAAD,EAAA,IAAA,CAAA,uCAEC,QAAD,EAAA;AAAA,IAAU,MAAM,IAAK,CAAA,KAAA;AAAA,IAAO,MAAA;AAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA;;AC5Nd,SAAA,eAAA,CAAA;AAAA,EAC9B,QAAA;AAAA,EACA,KAAA;AAAA,EACA,IAAA;AAAA,EACA,MAAA;AAAA,EACA,eAAkB,GAAA,CAAA;AAAA,CAOjB,EAAA;AACD,EAAA,MAAM,MAAM,MAAO,CAAA,mBAAA,CAAA,CAAA;AAEnB,EAAA,MAAM,WAAW,MAAO,CAAA,WAAA,CAAA,CAAA;AAExB,EAAM,MAAA,CAAC,KAAO,EAAA,QAAA,CAAA,GAAY,QAAS,CAAA,CAAA,CAAA,CAAA;AACnC,EAAM,MAAA,CAAC,IAAM,EAAA,OAAA,CAAA,GAAW,QAAS,CAAA,CAAA,CAAA,CAAA;AACjC,EAAM,MAAA,CAAC,QAAU,EAAA,WAAA,CAAA,GAAe,QAAS,CAAA,eAAA,CAAA,CAAA;AAEzC,EAAM,MAAA;AAAA,IACJ,OAAA;AAAA,IACA,KAAO,EAAA,IAAA;AAAA,IACP,KAAA;AAAA,IACA,KAAA;AAAA,GAAA,GACE,cAA6B,YAAY;AAE3C,IAAM,MAAA,gBAAA,GAAmB,MAAM,GAAA,CAAI,gBAAiB,CAAA;AAAA,MAClD,QAAA;AAAA,MACA,KAAA;AAAA,MACA,IAAA;AAAA,MACA,QAAA;AAAA,MACA,MAAM,IAAO,GAAA,CAAA;AAAA,MACb,MAAA;AAAA,KAAA,CAAA,CAAA;AAEF,IAAA,QAAA,CAAS,gBAAiB,CAAA,WAAA,CAAA,CAAA;AAE1B,IAAO,OAAA,gBAAA,CAAiB,aAAc,CAAA,GAAA,CAAI,CAAI,GAAA,KAAA;AA5ElD,MAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AA4EsD,MAAA,OAAA;AAAA,QAChD,cAAc,GAAI,CAAA,IAAA;AAAA,QAClB,OAAA,EAAS,IAAI,WAAY,CAAA,OAAA;AAAA,QACzB,EAAA,EAAI,GAAG,GAAI,CAAA,EAAA,CAAA,CAAA;AAAA,QACX,cAAc,YAAY;AACxB,UAAI,IAAA;AACF,YAAA,MAAM,IAAI,aAAc,CAAA;AAAA,cACtB,QAAA;AAAA,cACA,KAAA;AAAA,cACA,IAAA;AAAA,cACA,OAAO,GAAI,CAAA,EAAA;AAAA,aAAA,CAAA,CAAA;AAAA,WAAA,CAAA,OAEN,CAAP,EAAA;AACA,YAAA,QAAA,CAAS,IAAK,CAAA,CAAA,CAAA,CAAA;AAAA,WAAA;AAAA,SAAA;AAAA,QAGlB,MAAQ,EAAA;AAAA,UACN,YAAY,GAAI,CAAA,WAAA;AAAA,UAChB,MAAQ,EAAA;AAAA,YACN,IAAA,EAAM,IAAI,WAAY,CAAA,EAAA;AAAA,YACtB,GAAA,EAAK,gBAAI,eAAJ,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAqB,iBAArB,IAAmC,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAA,CACtC,aACA,GAAI,CAAA,WAAA,CAAA;AAAA,WAAA;AAAA,SAAA;AAAA,QAIV,QAAQ,GAAI,CAAA,MAAA;AAAA,QACZ,YAAY,GAAI,CAAA,UAAA;AAAA,QAChB,KAAK,GAAI,CAAA,GAAA;AAAA,QACT,WAAW,GAAI,CAAA,QAAA;AAAA,OAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAEhB,EAAA,CAAC,IAAM,EAAA,QAAA,EAAU,IAAM,EAAA,KAAA,CAAA,CAAA,CAAA;AAE1B,EAAO,OAAA;AAAA,IACL;AAAA,MACE,IAAA;AAAA,MACA,QAAA;AAAA,MACA,OAAA;AAAA,MACA,IAAA;AAAA,MACA,WAAA,EAAa,GAAG,KAAS,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AAAA,MACzB,KAAA;AAAA,MACA,KAAA;AAAA,KAAA;AAAA,IAEF;AAAA,MACE,IAAA;AAAA,MACA,OAAA;AAAA,MACA,WAAA;AAAA,MACA,KAAA;AAAA,KAAA;AAAA,GAAA,CAAA;AAAA;;ACrFN,MAAM,gBAAkC,GAAA;AAAA,EACtC;AAAA,IACE,KAAO,EAAA,IAAA;AAAA,IACP,KAAO,EAAA,IAAA;AAAA,IACP,IAAM,EAAA,SAAA;AAAA,IACN,KAAO,EAAA,OAAA;AAAA,GAAA;AAAA,EAET;AAAA,IACE,KAAO,EAAA,SAAA;AAAA,IACP,KAAO,EAAA,SAAA;AAAA,IACP,SAAW,EAAA,IAAA;AAAA,IACX,MAAA,EAAQ,CAAC,GAA8B,KAAA;AACrC,MAAA,MAAM,cAAc,MAAM;AACxB,QAAA,MAAM,YAAY,WAAY,CAAA,aAAA,CAAA,CAAA;AAC9B,QAAA,2CACGC,MAAD,EAAA;AAAA,UAAM,SAAW,EAAAC,MAAA;AAAA,UAAY,EAAI,EAAA,SAAA,CAAU,EAAE,EAAA,EAAI,GAAI,CAAA,EAAA,EAAA,CAAA;AAAA,SAAA,EAClD,GAAI,CAAA,OAAA,CAAA,CAAA;AAAA,OAAA,CAAA;AAKX,MAAA,2CAAQ,WAAD,EAAA,IAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAAA;AAAA,EAGX;AAAA,IACE,KAAO,EAAA,QAAA;AAAA,IACP,MAAA,EAAQ,CAAC,GAA2B,KAAA;AAhExC,MAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAiEM,MAAA,uBAAA,KAAA,CAAA,aAAA,CAAC,UAAD,EAAA;AAAA,QAAY,OAAQ,EAAA,OAAA;AAAA,QAAQ,MAAM,EAAA,IAAA;AAAA,OAAA,kBAC/B,KAAA,CAAA,aAAA,CAAA,GAAA,EAAD,IAAI,EAAA,CAAA,EAAA,GAAA,GAAA,CAAI,MAAJ,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAY,UAChB,CAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA,IAAA,EAAI,CAAI,EAAA,GAAA,GAAA,CAAA,MAAA,KAAJ,mBAAY,MAAO,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAAA;AAAA,EAI7B;AAAA,IACE,KAAO,EAAA,UAAA;AAAA,IACP,KAAO,EAAA,cAAA;AAAA,GAAA;AAAA,EAET;AAAA,IACE,KAAO,EAAA,QAAA;AAAA,IACP,KAAO,EAAA,OAAA;AAAA,IAEP,MAAQ,EAAA,CAAC,GACP,qBAAA,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA;AAAA,MAAK,OAAQ,EAAA,MAAA;AAAA,MAAO,UAAW,EAAA,QAAA;AAAA,KAAA,sCAC5B,iBAAD,EAAA;AAAA,MAAmB,QAAQ,GAAI,CAAA,MAAA;AAAA,MAAQ,YAAY,GAAI,CAAA,UAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAI7D;AAAA,IACE,KAAO,EAAA,SAAA;AAAA,IACP,MAAQ,EAAA,CAAC,GACP,qBAAA,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA;AAAA,MAAS,KAAM,EAAA,gBAAA;AAAA,KAAA,sCACZ,UAAD,EAAA;AAAA,MAAY,SAAS,GAAI,CAAA,YAAA;AAAA,KAAA,sCACtB,SAAD,EAAA,IAAA,CAAA,CAAA,CAAA;AAAA,IAIN,KAAO,EAAA,KAAA;AAAA,GAAA;AAAA,CAAA,CAAA;AAgBJ,MAAM,wBAAwB,CAAC;AAAA,EACpC,WAAA;AAAA,EACA,OAAA;AAAA,EACA,QAAA;AAAA,EACA,IAAA;AAAA,EACA,KAAA;AAAA,EACA,IAAA;AAAA,EACA,YAAA;AAAA,EACA,gBAAA;AAAA,EACA,KAAA;AAAA,CACW,KAAA;AACX,EAAA,2CACGC,OAAD,EAAA;AAAA,IACE,SAAW,EAAA,OAAA;AAAA,IACX,OAAS,EAAA,EAAE,MAAQ,EAAA,IAAA,EAAM,UAAU,OAAS,EAAA,OAAA,EAAA;AAAA,IAC5C,UAAY,EAAA,KAAA;AAAA,IACZ,IAAA;AAAA,IACA,OAAS,EAAA;AAAA,MACP;AAAA,QACE,IAAA,EAAM,sBAAM,KAAA,CAAA,aAAA,CAAC,QAAD,EAAA,IAAA,CAAA;AAAA,QACZ,OAAS,EAAA,sBAAA;AAAA,QACT,YAAc,EAAA,IAAA;AAAA,QACd,SAAS,MAAM,KAAA,EAAA;AAAA,OAAA;AAAA,KAAA;AAAA,IAGnB,MAAM,IAAQ,IAAA,IAAA,GAAA,IAAA,GAAA,EAAA;AAAA,IACd,YAAc,EAAA,YAAA;AAAA,IACd,mBAAqB,EAAA,gBAAA;AAAA,IACrB,KAAA,EAAO,EAAE,KAAO,EAAA,MAAA,EAAA;AAAA,IAChB,KAAA,sCACG,GAAD,EAAA;AAAA,MAAK,OAAQ,EAAA,MAAA;AAAA,MAAO,UAAW,EAAA,QAAA;AAAA,KAAA,kBAC5B,KAAA,CAAA,aAAA,CAAA,UAAA,EAAD,IACA,CAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,GAAD,EAAA;AAAA,MAAK,EAAI,EAAA,CAAA;AAAA,KAAA,CAAA,sCACR,UAAD,EAAA;AAAA,MAAY,OAAQ,EAAA,IAAA;AAAA,KAAM,EAAA,WAAA,CAAA,CAAA;AAAA,IAG9B,OAAS,EAAA,gBAAA;AAAA,GAAA,CAAA,CAAA;AAAA,CAAA,CAAA;AAKR,MAAM,oBAAoB,CAAC;AAAA,EAChC,MAAA;AAAA,EACA,MAAA;AAAA,CAII,KAAA;AA7JN,EAAA,IAAA,EAAA,CAAA;AA8JE,EAAA,MAAM,SAAS,MAAO,CAAA,YAAA,CAAA,CAAA;AACtB,EAAA,MAAM,cAAc,wBAAyB,CAAA,MAAA,CAAA,CAAA;AAE7C,EAAA,MAAM,WAAW,4BACf,CAAA,CAAA,EAAA,GAAA,MAAA,CAAO,uBAAuB,qBAA9B,CAAA,KAAA,IAAA,GAAA,EAAA,GAAwD,IACxD,CAAG,CAAA,CAAA,IAAA,CAAA;AACL,EAAA,MAAM,CAAC,KAAA,EAAO,IAAS,CAAA,GAAA,CAAA,WAAA,IAAA,IAAA,GAAA,WAAA,GAAe,KAAK,KAAM,CAAA,GAAA,CAAA,CAAA;AACjD,EAAM,MAAA,CAAC,EAAE,IAAS,EAAA,GAAA,UAAA,EAAA,EAAc,EAAE,KAAO,EAAA,OAAA,EAAS,iBAChD,eAAgB,CAAA;AAAA,IACd,QAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,MAAA;AAAA,GAAA,CAAA,CAAA;AAGJ,EAAA,MAAM,aAAa,QAAY,IAAA,YAAA,CAAA;AAC/B,EAAA,MAAM,SAAY,GAAA,CAAC,UAAW,CAAA,OAAA,IAAW,CAAC,IAAA,CAAA;AAE1C,EAAO,OAAA,SAAA,uCACJ,UAAD,EAAA;AAAA,IACE,OAAQ,EAAA,MAAA;AAAA,IACR,KAAM,EAAA,kBAAA;AAAA,IACN,WAAY,EAAA,oJAAA;AAAA,IACZ,MAAA,sCACG,MAAD,EAAA;AAAA,MACE,OAAQ,EAAA,WAAA;AAAA,MACR,KAAM,EAAA,SAAA;AAAA,MACN,IAAA,EAAM,WAAW,UAAc,CAAA,CAAA,EAAA,WAAA,CAAA,YAAA,CAAA;AAAA,KAChC,EAAA,qBAAA,CAAA;AAAA,GAAA,CAAA,uCAMJ,qBAAD,EAAA;AAAA,IACM,GAAA,UAAA;AAAA,IACJ,IAAA;AAAA,IACA,SAAS,UAAW,CAAA,OAAA;AAAA,IACpB,KAAA;AAAA,IACA,gBAAkB,EAAA,WAAA;AAAA,IAClB,YAAc,EAAA,OAAA;AAAA,GAAA,CAAA,CAAA;AAAA,CAAA;;AC7KP,MAAA,wBAAA,GAA2B,CAAC,MAAgB,KAAA;AAzBzD,EAAA,IAAA,EAAA,CAAA;AA0BE,EAAQ,OAAA,OAAA,CAAA,CAAA,EAAA,GAAA,MAAA,CAAO,QAAS,CAAA,WAAA,KAAhB,IAA8B,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,yBAAA,CAAA,CAAA,CAAA;AAAA,EAAA;AAEjC,MAAM,SAAS,MAAM;AAC1B,EAAA,MAAM,EAAE,MAAW,EAAA,GAAA,SAAA,EAAA,CAAA;AAEnB,EAAI,IAAA,CAAC,yBAAyB,MAAS,CAAA,EAAA;AACrC,IAAA,2CACG,2BAAD,EAAA;AAAA,MAA6B,UAAY,EAAA,yBAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA;AAG7C,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,MAAA,EAAD,IACE,kBAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA;AAAA,IAAO,IAAK,EAAA,GAAA;AAAA,IAAI,OAAA,sCAAU,iBAAD,EAAA;AAAA,MAAmB,MAAA;AAAA,KAAA,CAAA;AAAA,GAAA,CAAA,sCAC3C,KAAD,EAAA;AAAA,IACE,IAAA,EAAM,GAAG,aAAc,CAAA,IAAA,CAAA,CAAA;AAAA,IACvB,OAAA,sCAAU,kBAAD,EAAA;AAAA,MAAoB,MAAA;AAAA,KAAA,CAAA;AAAA,GAC7B,CAAA,EAAA,GAAA,CAAA,CAAA;AAAA;;;;;;;;ACJR,MAAM,YAAY,UAAkB,CAAA;AAAA,EAClC,gBAAkB,EAAA;AAAA,IAChB,QAAU,EAAA,SAAA;AAAA,IACV,aAAe,EAAA,QAAA;AAAA,GAAA;AAAA,CAAA,CAAA,CAAA;AAInB,MAAM,gBAAgB,CAAC;AAAA,EACrB,KAAA;AAAA,EACA,OAAA;AAAA,EACA,OAAA;AAAA,EACA,MAAA;AAAA,CAMI,KAAA;AAvDN,EAAA,IAAA,EAAA,CAAA;AAwDE,EAAA,MAAM,OAAU,GAAA,SAAA,EAAA,CAAA;AAChB,EAAI,IAAA,KAAA;AAAO,IAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,UAAA,EAAD,IAAY,EAAA,wBAAA,EAAuB,MAAO,EAAA,MAAA,CAAA,CAAA;AAC5D,EAAI,IAAA,OAAA;AAAS,IAAA,2CAAQ,cAAD,EAAA,IAAA,CAAA,CAAA;AACpB,EAAA,2CACG,uBAAD,EAAA;AAAA,IACE,QAAU,EAAA;AAAA,MACR,MAAA,kBAEI,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;AAAA,QACE,QAAQ,OAAQ,CAAA,MAAA;AAAA,QAChB,YAAY,OAAQ,CAAA,UAAA;AAAA,OAAA,CAAA,CAAA;AAAA,MAI1B,SAAS,OAAQ,CAAA,OAAA;AAAA,MACjB,GAAA,sCACG,IAAD,EAAA;AAAA,QAAM,EAAA,EAAI,CAAQ,EAAA,GAAA,OAAA,CAAA,SAAA,KAAR,IAAqB,GAAA,EAAA,GAAA,EAAA;AAAA,OAAI,EAAA,oBAAA,EACd,GACnB,kBAAA,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAA;AAAA,QAAkB,WAAW,OAAQ,CAAA,gBAAA;AAAA,OAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAAA,CAAA,CAAA;AAAA,CAAA,CAAA;AAQ1C,MAAM,wBAAwB,CAAC;AAAA,EACpC,MAAS,GAAA,QAAA;AAAA,EAET,OAAA;AAAA,CACW,KAAA;AAtFb,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAuFE,EAAA,MAAM,EAAE,MAAW,EAAA,GAAA,SAAA,EAAA,CAAA;AACnB,EAAA,MAAM,SAAS,MAAO,CAAA,YAAA,CAAA,CAAA;AACtB,EAAA,MAAM,WAAW,MAAO,CAAA,WAAA,CAAA,CAAA;AAExB,EAAA,MAAM,WAAW,4BACf,CAAA,CAAA,EAAA,GAAA,MAAA,CAAO,uBAAuB,qBAA9B,CAAA,KAAA,IAAA,GAAA,EAAA,GAAwD,IACxD,CAAG,CAAA,CAAA,IAAA,CAAA;AACL,EAAM,MAAA,CAAC,KAAO,EAAA,IAAA,CAAA,GACZ,CAAQ,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAA,QAAA,CAAS,gBAAjB,IAA+B,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,yBAAA,CAAA,KAA/B,IAA6D,GAAA,EAAA,GAAA,GAAA,EAC7D,KAAM,CAAA,GAAA,CAAA,CAAA;AACR,EAAA,MAAM,CAAC,EAAE,IAAM,EAAA,OAAA,EAAS,WAAW,eAAgB,CAAA;AAAA,IACjD,QAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,MAAA;AAAA,GAAA,CAAA,CAAA;AAEF,EAAM,MAAA,OAAA,GAAU,CAAO,EAAA,GAAA,IAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAA,CAAA,CAAA,KAAP,IAAc,GAAA,EAAA,GAAA,EAAA,CAAA;AAC9B,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,KAAO,EAAA;AACT,MAAA,QAAA,CAAS,IAAK,CAAA,KAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAAA,EAEf,CAAC,KAAO,EAAA,QAAA,CAAA,CAAA,CAAA;AAEX,EAAA,2CACG,QAAD,EAAA;AAAA,IAAU,OAAO,CAAQ,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAA,IAAgB,OAAA;AAAA,GAAA,sCACtC,aAAD,EAAA;AAAA,IACE,KAAA;AAAA,IACA,OAAA;AAAA,IACA,MAAA;AAAA,IACA,OAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AAAA,EAAA;AAWD,MAAM,+BAA+B,CAAC;AAAA,EAC3C,MAAS,GAAA,QAAA;AAAA,EACT,OAAA;AAAA,CACW,KAAA;AACX,EAAA,MAAM,EAAE,MAAW,EAAA,GAAA,SAAA,EAAA,CAAA;AAEnB,EAAA,2CACG,QAAD,EAAA;AAAA,IAAU,OAAO,CAAQ,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAA,IAAgB,OAAA;AAAA,GAAA,sCACtC,iBAAD,EAAA;AAAA,IAAmB,MAAA;AAAA,IAAgB,MAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AAAA;;ACvGzC,MAAM,SAAY,GAAA,CAAC,OAA4B,KAAA,OAAA,CAAQ,MAAM,IAAM,CAAA,CAAA,CAAA,CAAA,CAAA;AAS5D,MAAM,yBAAyB,CAAC;AAAA,EACrC,MAAA;AAAA,EACA,KAAQ,GAAA,KAAA;AAAA,EACR,KAAQ,GAAA,CAAA;AAAA,EACR,OAAA;AAAA,CACW,KAAA;AA9Cb,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AA+CE,EAAA,MAAM,EAAE,MAAW,EAAA,GAAA,SAAA,EAAA,CAAA;AACnB,EAAA,MAAM,SAAS,MAAO,CAAA,YAAA,CAAA,CAAA;AACtB,EAAA,MAAM,WAAW,MAAO,CAAA,WAAA,CAAA,CAAA;AAExB,EAAA,MAAM,WAAW,4BACf,CAAA,CAAA,EAAA,GAAA,MAAA,CAAO,uBAAuB,qBAA9B,CAAA,KAAA,IAAA,GAAA,EAAA,GAAwD,IACxD,CAAG,CAAA,CAAA,IAAA,CAAA;AACL,EAAM,MAAA,CAAC,KAAO,EAAA,IAAA,CAAA,GACZ,CAAQ,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAA,QAAA,CAAS,gBAAjB,IAA+B,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,yBAAA,CAAA,KAA/B,IAA6D,GAAA,EAAA,GAAA,GAAA,EAC7D,KAAM,CAAA,GAAA,CAAA,CAAA;AACR,EAAA,MAAM,CAAC,EAAE,IAAA,GAAO,EAAI,EAAA,OAAA,EAAS,WAAW,eAAgB,CAAA;AAAA,IACtD,QAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,MAAA;AAAA,IACA,eAAiB,EAAA,KAAA;AAAA,GAAA,CAAA,CAAA;AAEnB,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,KAAO,EAAA;AACT,MAAA,QAAA,CAAS,IAAK,CAAA,KAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAAA,EAEf,CAAC,KAAO,EAAA,QAAA,CAAA,CAAA,CAAA;AAEX,EAAA,MAAM,aAAa,QAAY,IAAA,YAAA,CAAA;AAE/B,EAAA,2CACG,QAAD,EAAA;AAAA,IACE,KAAM,EAAA,sBAAA;AAAA,IACN,SAAA,EAAW,MAAS,GAAA,CAAA,QAAA,EAAW,MAAW,CAAA,CAAA,GAAA,cAAA;AAAA,IAC1C,SAAS,EAAA,IAAA;AAAA,IACT,OAAA;AAAA,GAAA,EAEC,CAAC,IAAA,CAAK,MACL,mBAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAA;AAAA,IAAK,KAAA,EAAO,EAAE,SAAW,EAAA,QAAA,EAAA;AAAA,GAAA,sCACtB,UAAD,EAAA;AAAA,IAAY,OAAQ,EAAA,OAAA;AAAA,GAAQ,EAAA,yEAAA,CAAA,sCAI3B,UAAD,EAAA;AAAA,IAAY,OAAQ,EAAA,OAAA;AAAA,GAAA,sCACjB,IAAD,EAAA;AAAA,IAAM,EAAA,EAAI,CAAW,QAAA,EAAA,UAAA,CAAA,CAAA,EAAc,KAAS,CAAA,CAAA,EAAA,IAAA,CAAA,YAAA,CAAA;AAAA,GAAoB,EAAA,uBAAA,CAAA,CAAA,CAAA,uCAMnEA,OAAD,EAAA;AAAA,IACE,SAAW,EAAA,OAAA;AAAA,IACX,OAAS,EAAA;AAAA,MACP,MAAQ,EAAA,KAAA;AAAA,MACR,MAAQ,EAAA,KAAA;AAAA,MACR,OAAA,EAAS,QAAQ,OAAU,GAAA,SAAA;AAAA,MAC3B,OAAS,EAAA,KAAA;AAAA,KAAA;AAAA,IAEX,OAAS,EAAA;AAAA,MACP;AAAA,QACE,KAAO,EAAA,gBAAA;AAAA,QACP,KAAO,EAAA,SAAA;AAAA,QACP,MAAA,EAAQ,CACN,IAAA,qBAAA,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;AAAA,UACE,SAAW,EAAAD,MAAA;AAAA,UACX,EAAI,EAAA,YAAA,CAAa,aAAe,EAAA,EAAE,IAAI,IAAK,CAAA,EAAA,EAAA,CAAA;AAAA,SAAA,EAE1C,UAAU,IAAK,CAAA,OAAA,CAAA,CAAA;AAAA,OAAA;AAAA,MAItB,EAAE,KAAO,EAAA,QAAA,EAAU,KAAO,EAAA,mBAAA,EAAA;AAAA,MAC1B,EAAE,KAAA,EAAO,QAAU,EAAA,KAAA,EAAO,UAAU,MAAQ,EAAA,iBAAA,EAAA;AAAA,KAAA;AAAA,IAE9C,IAAM,EAAA,IAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AAAA;;;;"}