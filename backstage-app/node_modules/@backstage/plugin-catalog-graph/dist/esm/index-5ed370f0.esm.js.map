{"version":3,"file":"index-5ed370f0.esm.js","sources":["../../src/components/CatalogGraphPage/DirectionFilter.tsx","../../src/components/CatalogGraphPage/MaxDepthFilter.tsx","../../src/components/CatalogGraphPage/SelectedKindsFilter.tsx","../../src/components/CatalogGraphPage/SelectedRelationsFilter.tsx","../../src/components/CatalogGraphPage/SwitchFilter.tsx","../../src/components/CatalogGraphPage/useCatalogGraphPage.ts","../../src/components/CatalogGraphPage/CatalogGraphPage.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Select } from '@backstage/core-components';\nimport { Box } from '@material-ui/core';\nimport React, { useCallback } from 'react';\nimport { Direction } from '../EntityRelationsGraph';\n\nconst DIRECTION_DISPLAY_NAMES = {\n  [Direction.LEFT_RIGHT]: 'Left to right',\n  [Direction.RIGHT_LEFT]: 'Right to left',\n  [Direction.TOP_BOTTOM]: 'Top to bottom',\n  [Direction.BOTTOM_TOP]: 'Bottom to top',\n};\n\nexport type Props = {\n  value: Direction;\n  onChange: (value: Direction) => void;\n};\n\nexport const DirectionFilter = ({ value, onChange }: Props) => {\n  const handleChange = useCallback(v => onChange(v as Direction), [onChange]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <Select\n        label=\"Direction\"\n        selected={value}\n        items={Object.values(Direction).map(v => ({\n          label: DIRECTION_DISPLAY_NAMES[v],\n          value: v,\n        }))}\n        onChange={handleChange}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Box,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  OutlinedInput,\n  Typography,\n} from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport React, { useCallback } from 'react';\n\nexport type Props = {\n  value: number;\n  onChange: (value: number) => void;\n};\n\nconst useStyles = makeStyles({\n  formControl: {\n    width: '100%',\n    maxWidth: 300,\n  },\n});\n\nexport const MaxDepthFilter = ({ value, onChange }: Props) => {\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const v = Number(event.target.value);\n      onChange(v <= 0 ? Number.POSITIVE_INFINITY : v);\n    },\n    [onChange],\n  );\n\n  const reset = useCallback(() => {\n    onChange(Number.POSITIVE_INFINITY);\n  }, [onChange]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <Typography variant=\"button\">Max Depth</Typography>\n        <OutlinedInput\n          type=\"number\"\n          placeholder=\"âˆž Infinite\"\n          value={isFinite(value) ? value : ''}\n          onChange={handleChange}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"clear max depth\"\n                onClick={reset}\n                edge=\"end\"\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          }\n          inputProps={{\n            'aria-label': 'maxp',\n          }}\n          labelWidth={0}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nconst useStyles = makeStyles({\n  formControl: {\n    maxWidth: 300,\n  },\n});\n\nexport type Props = {\n  value: string[] | undefined;\n  onChange: (value: string[] | undefined) => void;\n};\n\nexport const SelectedKindsFilter = ({ value, onChange }: Props) => {\n  const classes = useStyles();\n  const alertApi = useApi(alertApiRef);\n  const catalogApi = useApi(catalogApiRef);\n\n  const { error, value: kinds } = useAsync(async () => {\n    return await catalogApi\n      .getEntityFacets({ facets: ['kind'] })\n      .then(response => response.facets.kind?.map(f => f.value).sort() || []);\n  });\n\n  useEffect(() => {\n    if (error) {\n      alertApi.post({\n        message: `Failed to load entity kinds`,\n        severity: 'error',\n      });\n    }\n  }, [error, alertApi]);\n\n  const normalizedKinds = useMemo(\n    () => (kinds ? kinds.map(k => k.toLocaleLowerCase('en-US')) : kinds),\n    [kinds],\n  );\n\n  const handleChange = useCallback(\n    (_: unknown, v: string[]) => {\n      onChange(\n        normalizedKinds && normalizedKinds.every(r => v.includes(r))\n          ? undefined\n          : v,\n      );\n    },\n    [normalizedKinds, onChange],\n  );\n\n  const handleEmpty = useCallback(() => {\n    onChange(value?.length ? value : undefined);\n  }, [value, onChange]);\n\n  if (!kinds?.length || !normalizedKinds?.length || error) {\n    return <></>;\n  }\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\">Kinds</Typography>\n      <Autocomplete\n        className={classes.formControl}\n        multiple\n        limitTags={4}\n        disableCloseOnSelect\n        aria-label=\"Kinds\"\n        options={normalizedKinds}\n        value={value ?? normalizedKinds}\n        getOptionLabel={k => kinds[normalizedKinds.indexOf(k)] ?? k}\n        onChange={handleChange}\n        onBlur={handleEmpty}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                checked={selected}\n              />\n            }\n            label={kinds[normalizedKinds.indexOf(option)] ?? option}\n          />\n        )}\n        size=\"small\"\n        popupIcon={<ExpandMoreIcon data-testid=\"selected-kinds-expand\" />}\n        renderInput={params => <TextField {...params} variant=\"outlined\" />}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport React, { useCallback, useMemo } from 'react';\nimport { RelationPairs } from '../EntityRelationsGraph';\n\nconst useStyles = makeStyles({\n  formControl: {\n    maxWidth: 300,\n  },\n});\n\nexport type Props = {\n  relationPairs: RelationPairs;\n  value: string[] | undefined;\n  onChange: (value: string[] | undefined) => void;\n};\n\nexport const SelectedRelationsFilter = ({\n  relationPairs,\n  value,\n  onChange,\n}: Props) => {\n  const classes = useStyles();\n  const relations = useMemo(() => relationPairs.flat(), [relationPairs]);\n\n  const handleChange = useCallback(\n    (_: unknown, v: string[]) => {\n      onChange(relations.every(r => v.includes(r)) ? undefined : v);\n    },\n    [relations, onChange],\n  );\n\n  const handleEmpty = useCallback(() => {\n    onChange(value?.length ? value : undefined);\n  }, [value, onChange]);\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\">Relations</Typography>\n      <Autocomplete\n        className={classes.formControl}\n        multiple\n        limitTags={4}\n        disableCloseOnSelect\n        aria-label=\"Relations\"\n        options={relations}\n        value={value ?? relations}\n        onChange={handleChange}\n        onBlur={handleEmpty}\n        renderOption={(option, { selected }) => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                checked={selected}\n              />\n            }\n            label={option}\n          />\n        )}\n        size=\"small\"\n        popupIcon={<ExpandMoreIcon data-testid=\"selected-relations-expand\" />}\n        renderInput={params => <TextField {...params} variant=\"outlined\" />}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Box, FormControlLabel, makeStyles, Switch } from '@material-ui/core';\nimport React, { useCallback } from 'react';\n\nexport type Props = {\n  label: string;\n  value: boolean;\n  onChange: (value: boolean) => void;\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 300,\n  },\n});\n\nexport const SwitchFilter = ({ label, value, onChange }: Props) => {\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(event.target.checked);\n    },\n    [onChange],\n  );\n\n  return (\n    <Box pb={1} pt={1}>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={value}\n            onChange={handleChange}\n            name={label}\n            color=\"primary\"\n          />\n        }\n        label={label}\n        className={classes.root}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  CompoundEntityRef,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport qs from 'qs';\nimport {\n  Dispatch,\n  DispatchWithoutAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useLocation } from 'react-router';\nimport usePrevious from 'react-use/lib/usePrevious';\nimport { Direction } from '../EntityRelationsGraph';\n\nexport type CatalogGraphPageValue = {\n  rootEntityNames: CompoundEntityRef[];\n  setRootEntityNames: Dispatch<React.SetStateAction<CompoundEntityRef[]>>;\n  maxDepth: number;\n  setMaxDepth: Dispatch<React.SetStateAction<number>>;\n  selectedRelations: string[] | undefined;\n  setSelectedRelations: Dispatch<React.SetStateAction<string[] | undefined>>;\n  selectedKinds: string[] | undefined;\n  setSelectedKinds: Dispatch<React.SetStateAction<string[] | undefined>>;\n  unidirectional: boolean;\n  setUnidirectional: Dispatch<React.SetStateAction<boolean>>;\n  mergeRelations: boolean;\n  setMergeRelations: Dispatch<React.SetStateAction<boolean>>;\n  direction: Direction;\n  setDirection: Dispatch<React.SetStateAction<Direction>>;\n  showFilters: boolean;\n  toggleShowFilters: DispatchWithoutAction;\n};\n\nexport function useCatalogGraphPage({\n  initialState = {},\n}: {\n  initialState?: {\n    selectedRelations?: string[] | undefined;\n    selectedKinds?: string[] | undefined;\n    rootEntityRefs?: string[];\n    maxDepth?: number;\n    unidirectional?: boolean;\n    mergeRelations?: boolean;\n    direction?: Direction;\n    showFilters?: boolean;\n  };\n}): CatalogGraphPageValue {\n  const location = useLocation();\n  const query = useMemo(\n    () =>\n      (qs.parse(location.search, { arrayLimit: 0, ignoreQueryPrefix: true }) ||\n        {}) as {\n        selectedRelations?: string[] | string;\n        selectedKinds?: string[] | string;\n        rootEntityRefs?: string[] | string;\n        maxDepth?: string[] | string;\n        unidirectional?: string[] | string;\n        mergeRelations?: string[] | string;\n        direction?: string[] | Direction;\n        showFilters?: string[] | string;\n      },\n    [location.search],\n  );\n\n  // Initial state\n  const [rootEntityNames, setRootEntityNames] = useState<CompoundEntityRef[]>(\n    () =>\n      (Array.isArray(query.rootEntityRefs)\n        ? query.rootEntityRefs\n        : initialState?.rootEntityRefs ?? []\n      ).map(r => parseEntityRef(r)),\n  );\n  const [maxDepth, setMaxDepth] = useState<number>(() =>\n    typeof query.maxDepth === 'string'\n      ? parseMaxDepth(query.maxDepth)\n      : initialState?.maxDepth ?? Number.POSITIVE_INFINITY,\n  );\n  const [selectedRelations, setSelectedRelations] = useState<\n    string[] | undefined\n  >(() =>\n    Array.isArray(query.selectedRelations)\n      ? query.selectedRelations\n      : initialState?.selectedRelations,\n  );\n  const [selectedKinds, setSelectedKinds] = useState<string[] | undefined>(() =>\n    (Array.isArray(query.selectedKinds)\n      ? query.selectedKinds\n      : initialState?.selectedKinds\n    )?.map(k => k.toLocaleLowerCase('en-US')),\n  );\n  const [unidirectional, setUnidirectional] = useState<boolean>(() =>\n    typeof query.unidirectional === 'string'\n      ? query.unidirectional === 'true'\n      : initialState?.unidirectional ?? true,\n  );\n  const [mergeRelations, setMergeRelations] = useState<boolean>(() =>\n    typeof query.mergeRelations === 'string'\n      ? query.mergeRelations === 'true'\n      : initialState?.mergeRelations ?? true,\n  );\n  const [direction, setDirection] = useState<Direction>(() =>\n    typeof query.direction === 'string'\n      ? query.direction\n      : initialState?.direction ?? Direction.LEFT_RIGHT,\n  );\n  const [showFilters, setShowFilters] = useState<boolean>(() =>\n    typeof query.showFilters === 'string'\n      ? query.showFilters === 'true'\n      : initialState?.showFilters ?? true,\n  );\n  const toggleShowFilters = useCallback(\n    () => setShowFilters(s => !s),\n    [setShowFilters],\n  );\n\n  // Update from query parameters\n  const prevQueryParams = usePrevious(location.search);\n  useEffect(() => {\n    // Only respond to changes to url query params\n    if (location.search === prevQueryParams) {\n      return;\n    }\n\n    if (Array.isArray(query.rootEntityRefs)) {\n      setRootEntityNames(query.rootEntityRefs.map(r => parseEntityRef(r)));\n    }\n\n    if (typeof query.maxDepth === 'string') {\n      setMaxDepth(parseMaxDepth(query.maxDepth));\n    }\n\n    if (Array.isArray(query.selectedKinds)) {\n      setSelectedKinds(query.selectedKinds);\n    }\n\n    if (Array.isArray(query.selectedRelations)) {\n      setSelectedRelations(query.selectedRelations);\n    }\n\n    if (typeof query.unidirectional === 'string') {\n      setUnidirectional(query.unidirectional === 'true');\n    }\n\n    if (typeof query.mergeRelations === 'string') {\n      setMergeRelations(query.mergeRelations === 'true');\n    }\n\n    if (typeof query.direction === 'string') {\n      setDirection(query.direction);\n    }\n\n    if (typeof query.showFilters === 'string') {\n      setShowFilters(query.showFilters === 'true');\n    }\n  }, [\n    prevQueryParams,\n    location.search,\n    query,\n    setRootEntityNames,\n    setMaxDepth,\n    setSelectedKinds,\n    setSelectedRelations,\n    setUnidirectional,\n    setMergeRelations,\n    setDirection,\n    setShowFilters,\n  ]);\n\n  // Update query parameters\n  const previousRootEntityRefs = usePrevious(\n    rootEntityNames.map(e => stringifyEntityRef(e)),\n  );\n\n  useEffect(() => {\n    const rootEntityRefs = rootEntityNames.map(e => stringifyEntityRef(e));\n    const newParams = qs.stringify(\n      {\n        rootEntityRefs,\n        maxDepth: isFinite(maxDepth) ? maxDepth : 'âˆž',\n        selectedKinds,\n        selectedRelations,\n        unidirectional,\n        mergeRelations,\n        direction,\n        showFilters,\n      },\n      { arrayFormat: 'brackets', addQueryPrefix: true },\n    );\n    const newUrl = `${window.location.pathname}${newParams}`;\n\n    // We directly manipulate window history here in order to not re-render\n    // infinitely (state => location => state => etc). The intention of this\n    // code is just to ensure the right query/filters are loaded when a user\n    // clicks the \"back\" button after clicking a result.\n    // Only push a new history entry if we switched to another entity, but not\n    // if we just changed a viewer setting.\n    if (\n      !previousRootEntityRefs ||\n      (rootEntityRefs.length === previousRootEntityRefs.length &&\n        rootEntityRefs.every((v, i) => v === previousRootEntityRefs[i]))\n    ) {\n      window.history.replaceState(null, document.title, newUrl);\n    } else {\n      window.history.pushState(null, document.title, newUrl);\n    }\n  }, [\n    rootEntityNames,\n    maxDepth,\n    selectedKinds,\n    selectedRelations,\n    unidirectional,\n    mergeRelations,\n    direction,\n    showFilters,\n    previousRootEntityRefs,\n  ]);\n\n  return {\n    rootEntityNames,\n    setRootEntityNames,\n    maxDepth,\n    setMaxDepth,\n    selectedRelations,\n    setSelectedRelations,\n    selectedKinds,\n    setSelectedKinds,\n    unidirectional,\n    setUnidirectional,\n    mergeRelations,\n    setMergeRelations,\n    direction,\n    setDirection,\n    showFilters,\n    toggleShowFilters,\n  };\n}\n\nfunction parseMaxDepth(value: string): number {\n  return value === 'âˆž' ? Number.POSITIVE_INFINITY : Number(value);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  Page,\n  SupportButton,\n} from '@backstage/core-components';\nimport { useAnalytics, useRouteRef } from '@backstage/core-plugin-api';\nimport {\n  entityRouteRef,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport { Grid, makeStyles, Paper, Typography } from '@material-ui/core';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport ZoomOutMap from '@material-ui/icons/ZoomOutMap';\nimport { ToggleButton } from '@material-ui/lab';\nimport React, { MouseEvent, useCallback } from 'react';\nimport { useNavigate } from 'react-router';\nimport {\n  ALL_RELATION_PAIRS,\n  Direction,\n  EntityNode,\n  EntityRelationsGraph,\n  RelationPairs,\n} from '../EntityRelationsGraph';\nimport { DirectionFilter } from './DirectionFilter';\nimport { MaxDepthFilter } from './MaxDepthFilter';\nimport { SelectedKindsFilter } from './SelectedKindsFilter';\nimport { SelectedRelationsFilter } from './SelectedRelationsFilter';\nimport { SwitchFilter } from './SwitchFilter';\nimport { useCatalogGraphPage } from './useCatalogGraphPage';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    minHeight: 0,\n  },\n  container: {\n    height: '100%',\n    maxHeight: '100%',\n    minHeight: 0,\n  },\n  fullHeight: {\n    maxHeight: '100%',\n    display: 'flex',\n    minHeight: 0,\n  },\n  graphWrapper: {\n    position: 'relative',\n    flex: 1,\n    minHeight: 0,\n    display: 'flex',\n  },\n  graph: {\n    flex: 1,\n    minHeight: 0,\n  },\n  legend: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    padding: theme.spacing(1),\n    '& .icon': {\n      verticalAlign: 'bottom',\n    },\n  },\n  filters: {\n    display: 'grid',\n    gridGap: theme.spacing(1),\n    gridAutoRows: 'auto',\n    [theme.breakpoints.up('lg')]: {\n      display: 'block',\n    },\n    [theme.breakpoints.only('md')]: {\n      gridTemplateColumns: 'repeat(3, 1fr)',\n    },\n    [theme.breakpoints.only('sm')]: {\n      gridTemplateColumns: 'repeat(2, 1fr)',\n    },\n    [theme.breakpoints.down('xs')]: {\n      gridTemplateColumns: 'repeat(1, 1fr)',\n    },\n  },\n}));\n\nexport const CatalogGraphPage = ({\n  relationPairs = ALL_RELATION_PAIRS,\n  initialState,\n}: {\n  relationPairs?: RelationPairs;\n  initialState?: {\n    selectedRelations?: string[];\n    selectedKinds?: string[];\n    rootEntityRefs?: string[];\n    maxDepth?: number;\n    unidirectional?: boolean;\n    mergeRelations?: boolean;\n    direction?: Direction;\n    showFilters?: boolean;\n  };\n}) => {\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n  const {\n    maxDepth,\n    setMaxDepth,\n    selectedKinds,\n    setSelectedKinds,\n    selectedRelations,\n    setSelectedRelations,\n    unidirectional,\n    setUnidirectional,\n    mergeRelations,\n    setMergeRelations,\n    direction,\n    setDirection,\n    rootEntityNames,\n    setRootEntityNames,\n    showFilters,\n    toggleShowFilters,\n  } = useCatalogGraphPage({ initialState });\n  const analytics = useAnalytics();\n  const onNodeClick = useCallback(\n    (node: EntityNode, event: MouseEvent<unknown>) => {\n      const nodeEntityName = parseEntityRef(node.id);\n\n      if (event.shiftKey) {\n        const path = catalogEntityRoute({\n          kind: nodeEntityName.kind.toLocaleLowerCase('en-US'),\n          namespace: nodeEntityName.namespace.toLocaleLowerCase('en-US'),\n          name: nodeEntityName.name,\n        });\n\n        analytics.captureEvent(\n          'click',\n          node.title ?? humanizeEntityRef(nodeEntityName),\n          { attributes: { to: path } },\n        );\n        navigate(path);\n      } else {\n        analytics.captureEvent(\n          'click',\n          node.title ?? humanizeEntityRef(nodeEntityName),\n        );\n        setRootEntityNames([nodeEntityName]);\n      }\n    },\n    [catalogEntityRoute, navigate, setRootEntityNames, analytics],\n  );\n\n  return (\n    <Page themeId=\"home\">\n      <Header\n        title=\"Catalog Graph\"\n        subtitle={rootEntityNames.map(e => humanizeEntityRef(e)).join(', ')}\n      />\n      <Content stretch className={classes.content}>\n        <ContentHeader\n          titleComponent={\n            <ToggleButton\n              value=\"show filters\"\n              selected={showFilters}\n              onChange={() => toggleShowFilters()}\n            >\n              <FilterListIcon /> Filters\n            </ToggleButton>\n          }\n        >\n          <SupportButton>\n            Start tracking your component in by adding it to the software\n            catalog.\n          </SupportButton>\n        </ContentHeader>\n        <Grid container alignItems=\"stretch\" className={classes.container}>\n          {showFilters && (\n            <Grid item xs={12} lg={2} className={classes.filters}>\n              <MaxDepthFilter value={maxDepth} onChange={setMaxDepth} />\n              <SelectedKindsFilter\n                value={selectedKinds}\n                onChange={setSelectedKinds}\n              />\n              <SelectedRelationsFilter\n                value={selectedRelations}\n                onChange={setSelectedRelations}\n                relationPairs={relationPairs}\n              />\n              <DirectionFilter value={direction} onChange={setDirection} />\n              <SwitchFilter\n                value={unidirectional}\n                onChange={setUnidirectional}\n                label=\"Simplified\"\n              />\n              <SwitchFilter\n                value={mergeRelations}\n                onChange={setMergeRelations}\n                label=\"Merge Relations\"\n              />\n            </Grid>\n          )}\n          <Grid item xs className={classes.fullHeight}>\n            <Paper className={classes.graphWrapper}>\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                display=\"block\"\n                className={classes.legend}\n              >\n                <ZoomOutMap className=\"icon\" /> Use pinch &amp; zoom to move\n                around the diagram. Click to change active node, shift click to\n                navigate to entity.\n              </Typography>\n              <EntityRelationsGraph\n                rootEntityNames={rootEntityNames}\n                maxDepth={maxDepth}\n                kinds={\n                  selectedKinds && selectedKinds.length > 0\n                    ? selectedKinds\n                    : undefined\n                }\n                relations={\n                  selectedRelations && selectedRelations.length > 0\n                    ? selectedRelations\n                    : undefined\n                }\n                mergeRelations={mergeRelations}\n                unidirectional={unidirectional}\n                onNodeClick={onNodeClick}\n                direction={direction}\n                relationPairs={relationPairs}\n                className={classes.graph}\n                zoom=\"enabled\"\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Content>\n    </Page>\n  );\n};\n"],"names":["useStyles"],"mappings":"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"}