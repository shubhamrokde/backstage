{"version":3,"file":"index.esm.js","sources":["../src/components/EntityRelationsGraph/CustomLabel.tsx","../src/components/EntityRelationsGraph/EntityKindIcon.tsx","../src/components/EntityRelationsGraph/CustomNode.tsx","../src/components/EntityRelationsGraph/relations.ts","../src/components/EntityRelationsGraph/types.ts","../src/components/EntityRelationsGraph/useEntityStore.ts","../src/components/EntityRelationsGraph/useEntityRelationGraph.ts","../src/components/EntityRelationsGraph/useEntityRelationNodesAndEdges.ts","../src/components/EntityRelationsGraph/EntityRelationsGraph.tsx","../src/routes.ts","../src/plugin.ts","../src/extensions.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DependencyGraphTypes } from '@backstage/core-components';\nimport { BackstageTheme } from '@backstage/theme';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport React from 'react';\nimport { EntityEdgeData } from './types';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme: BackstageTheme) => ({\n  text: {\n    fill: theme.palette.textContrast,\n  },\n  secondary: {\n    fill: theme.palette.textSubtle,\n  },\n}));\n\nexport function CustomLabel({\n  edge: { relations },\n}: DependencyGraphTypes.RenderLabelProps<EntityEdgeData>) {\n  const classes = useStyles();\n  return (\n    <text className={classes.text} textAnchor=\"middle\">\n      {relations.map((r, i) => (\n        <tspan key={r} className={classNames(i > 0 && classes.secondary)}>\n          {i > 0 && <tspan> / </tspan>}\n          {r}\n        </tspan>\n      ))}\n    </text>\n  );\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useApp } from '@backstage/core-plugin-api';\nimport WorkIcon from '@material-ui/icons/Work';\nimport React from 'react';\n\nexport function EntityKindIcon({\n  kind,\n  ...props\n}: {\n  kind: string;\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n  className?: string;\n}) {\n  const app = useApp();\n  const Icon =\n    app.getSystemIcon(`kind:${kind.toLocaleLowerCase('en-US')}`) ?? WorkIcon;\n  return <Icon {...props} />;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DependencyGraphTypes } from '@backstage/core-components';\nimport { humanizeEntityRef } from '@backstage/plugin-catalog-react';\nimport { BackstageTheme } from '@backstage/theme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport { EntityKindIcon } from './EntityKindIcon';\nimport { EntityNodeData } from './types';\n\nconst useStyles = makeStyles((theme: BackstageTheme) => ({\n  node: {\n    fill: theme.palette.grey[300],\n    stroke: theme.palette.grey[300],\n\n    '&.primary': {\n      fill: theme.palette.primary.light,\n      stroke: theme.palette.primary.light,\n    },\n    '&.secondary': {\n      fill: theme.palette.secondary.light,\n      stroke: theme.palette.secondary.light,\n    },\n  },\n  text: {\n    fill: theme.palette.getContrastText(theme.palette.grey[300]),\n\n    '&.primary': {\n      fill: theme.palette.primary.contrastText,\n    },\n    '&.secondary': {\n      fill: theme.palette.secondary.contrastText,\n    },\n    '&.focused': {\n      fontWeight: 'bold',\n    },\n  },\n  clickable: {\n    cursor: 'pointer',\n  },\n}));\n\nexport function CustomNode({\n  node: {\n    id,\n    kind,\n    namespace,\n    name,\n    color = 'default',\n    focused,\n    title,\n    onClick,\n  },\n}: DependencyGraphTypes.RenderNodeProps<EntityNodeData>) {\n  const classes = useStyles();\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const idRef = useRef<SVGTextElement | null>(null);\n\n  useLayoutEffect(() => {\n    // set the width to the length of the ID\n    if (idRef.current) {\n      let { height: renderedHeight, width: renderedWidth } =\n        idRef.current.getBBox();\n      renderedHeight = Math.round(renderedHeight);\n      renderedWidth = Math.round(renderedWidth);\n\n      if (renderedHeight !== height || renderedWidth !== width) {\n        setWidth(renderedWidth);\n        setHeight(renderedHeight);\n      }\n    }\n  }, [width, height]);\n\n  const padding = 10;\n  const iconSize = height;\n  const paddedIconWidth = kind ? iconSize + padding : 0;\n  const paddedWidth = paddedIconWidth + width + padding * 2;\n  const paddedHeight = height + padding * 2;\n\n  const displayTitle =\n    title ??\n    (kind && name && namespace\n      ? humanizeEntityRef({ kind, name, namespace })\n      : id);\n\n  return (\n    <g onClick={onClick} className={classNames(onClick && classes.clickable)}>\n      <rect\n        className={classNames(\n          classes.node,\n          color === 'primary' && 'primary',\n          color === 'secondary' && 'secondary',\n        )}\n        width={paddedWidth}\n        height={paddedHeight}\n        rx={10}\n      />\n      {kind && (\n        <EntityKindIcon\n          kind={kind}\n          y={padding}\n          x={padding}\n          width={iconSize}\n          height={iconSize}\n          className={classNames(\n            classes.text,\n            focused && 'focused',\n            color === 'primary' && 'primary',\n            color === 'secondary' && 'secondary',\n          )}\n        />\n      )}\n      <text\n        ref={idRef}\n        className={classNames(\n          classes.text,\n          focused && 'focused',\n          color === 'primary' && 'primary',\n          color === 'secondary' && 'secondary',\n        )}\n        y={paddedHeight / 2}\n        x={paddedIconWidth + (width + padding * 2) / 2}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"middle\"\n      >\n        {displayTitle}\n      </text>\n    </g>\n  );\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  RELATION_API_CONSUMED_BY,\n  RELATION_API_PROVIDED_BY,\n  RELATION_CHILD_OF,\n  RELATION_CONSUMES_API,\n  RELATION_DEPENDENCY_OF,\n  RELATION_DEPENDS_ON,\n  RELATION_HAS_MEMBER,\n  RELATION_HAS_PART,\n  RELATION_MEMBER_OF,\n  RELATION_OWNED_BY,\n  RELATION_OWNER_OF,\n  RELATION_PARENT_OF,\n  RELATION_PART_OF,\n  RELATION_PROVIDES_API,\n} from '@backstage/catalog-model';\n\n/**\n * A pair of two relations that describe the opposite of each other. The first\n * relation is considered as the primary relation.\n *\n * @public\n */\nexport type RelationPairs = [string, string][];\n\n// TODO: This file only contains the pairs for the built-in relations.\n//  How to implement this when custom relations are used? Right now you can pass\n//  the relations everywhere.\n//  Another option is to move this into @backstage/catalog-model\n\n/**\n * A list of pairs of entity relations, used to define which relations are\n * merged together and which the primary relation is.\n *\n * @public\n */\nexport const ALL_RELATION_PAIRS: RelationPairs = [\n  [RELATION_OWNER_OF, RELATION_OWNED_BY],\n  [RELATION_CONSUMES_API, RELATION_API_CONSUMED_BY],\n  [RELATION_API_PROVIDED_BY, RELATION_PROVIDES_API],\n  [RELATION_HAS_PART, RELATION_PART_OF],\n  [RELATION_PARENT_OF, RELATION_CHILD_OF],\n  [RELATION_HAS_MEMBER, RELATION_MEMBER_OF],\n  [RELATION_DEPENDS_ON, RELATION_DEPENDENCY_OF],\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DependencyGraphTypes } from '@backstage/core-components';\nimport { MouseEventHandler } from 'react';\n\n/**\n * Additional Data for entities.\n *\n * @public\n */\nexport type EntityEdgeData = {\n  /**\n   * Up to two relations that are connecting an entity.\n   */\n  relations: string[];\n  /**\n   * Whether the entity is visible or not.\n   */\n  // Not used, but has to be non empty to draw a label at all!\n  label: 'visible';\n};\n\n/**\n * Edge between two entities.\n *\n * @public\n */\nexport type EntityEdge = DependencyGraphTypes.DependencyEdge<EntityEdgeData>;\n\n/**\n * Additional data for Entity Node\n *\n * @public\n */\nexport type EntityNodeData = {\n  /**\n   * Name of the entity.\n   */\n  name: string;\n  /**\n   * Optional kind of the entity.\n   */\n  kind?: string;\n  /**\n   * Optional title of the entity.\n   */\n  title?: string;\n  /**\n   * Namespace of the entity.\n   */\n  namespace: string;\n  /**\n   * Whether the entity is focused, optional, defaults to false. Focused\n   * entities are highlighted in the graph.\n   */\n  focused?: boolean;\n  /**\n   * Optional color of the entity, defaults to 'default'.\n   */\n  color?: 'primary' | 'secondary' | 'default';\n  /**\n   * Optional click handler.\n   */\n  onClick?: MouseEventHandler<unknown>;\n};\n\n/**\n * Node representing an entity.\n *\n * @public\n */\nexport type EntityNode = DependencyGraphTypes.DependencyNode<EntityNodeData>;\n\n/**\n * Render direction of the graph.\n *\n * @public\n */\nexport enum Direction {\n  /**\n   * Top to bottom.\n   */\n  TOP_BOTTOM = 'TB',\n  /**\n   * Bottom to top.\n   */\n  BOTTOM_TOP = 'BT',\n  /**\n   * Left to right.\n   */\n  LEFT_RIGHT = 'LR',\n  /**\n   * Right to left.\n   */\n  RIGHT_LEFT = 'RL',\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport limiterFactory from 'p-limit';\nimport { Dispatch, useCallback, useRef, useState } from 'react';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\n\n// TODO: This is a good use case for a graphql API, once it is available in the\n// future.\n\nconst limiter = limiterFactory(10);\n\n/**\n * Ensures that a set of requested entities is loaded.\n */\nexport function useEntityStore(): {\n  entities: { [ref: string]: Entity };\n  loading: boolean;\n  error?: Error;\n  requestEntities: Dispatch<string[]>;\n} {\n  const catalogClient = useApi(catalogApiRef);\n  const state = useRef({\n    requestedEntities: new Set<string>(),\n    outstandingEntities: new Map<string, Promise<Entity | undefined>>(),\n    cachedEntities: new Map<string, Entity>(),\n  });\n  const [entities, setEntities] = useState<{\n    [ref: string]: Entity;\n  }>({});\n\n  const updateEntities = useCallback(() => {\n    const { cachedEntities, requestedEntities } = state.current;\n    const filteredEntities: { [ref: string]: Entity } = {};\n    requestedEntities.forEach(entityRef => {\n      const entity = cachedEntities.get(entityRef);\n\n      if (entity) {\n        filteredEntities[entityRef] = entity;\n      }\n    });\n    setEntities(filteredEntities);\n  }, [state, setEntities]);\n\n  const [asyncState, fetch] = useAsyncFn(async () => {\n    const { requestedEntities, outstandingEntities, cachedEntities } =\n      state.current;\n\n    await Promise.all(\n      Array.from(requestedEntities).map(entityRef =>\n        limiter(async () => {\n          if (cachedEntities.has(entityRef)) {\n            return;\n          }\n\n          if (outstandingEntities.has(entityRef)) {\n            await outstandingEntities.get(entityRef);\n            return;\n          }\n\n          const promise = catalogClient.getEntityByRef(entityRef);\n\n          outstandingEntities.set(entityRef, promise);\n\n          try {\n            const entity = await promise;\n\n            if (entity) {\n              cachedEntities.set(entityRef, entity);\n              updateEntities();\n            }\n          } finally {\n            outstandingEntities.delete(entityRef);\n          }\n        }),\n      ),\n    );\n  }, [state, updateEntities]);\n  const { loading, error } = asyncState;\n\n  const requestEntities = useCallback(\n    (entityRefs: string[]) => {\n      const n = new Set(entityRefs);\n      const { requestedEntities } = state.current;\n\n      if (\n        n.size !== requestedEntities.size ||\n        Array.from(n).some(e => !requestedEntities.has(e))\n      ) {\n        state.current.requestedEntities = n;\n        fetch();\n        updateEntities();\n      }\n    },\n    [state, fetch, updateEntities],\n  );\n\n  return {\n    entities,\n    loading,\n    error,\n    requestEntities,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { useEffect } from 'react';\nimport { useEntityStore } from './useEntityStore';\n\n/**\n * Discover the graph of entities connected by relations, starting from a set of\n * root entities. Filters are used to select which relations to includes.\n * Returns all discovered entities once they are loaded.\n */\nexport function useEntityRelationGraph({\n  rootEntityRefs,\n  filter: { maxDepth = Number.POSITIVE_INFINITY, relations, kinds } = {},\n}: {\n  rootEntityRefs: string[];\n  filter?: {\n    maxDepth?: number;\n    relations?: string[];\n    kinds?: string[];\n  };\n}): {\n  entities?: { [ref: string]: Entity };\n  loading: boolean;\n  error?: Error;\n} {\n  const { entities, loading, error, requestEntities } = useEntityStore();\n\n  useEffect(() => {\n    const expectedEntities = new Set([...rootEntityRefs]);\n    const processedEntityRefs = new Set<string>();\n\n    let nextDepthRefQueue = [...rootEntityRefs];\n    let depth = 0;\n\n    while (\n      nextDepthRefQueue.length > 0 &&\n      (!isFinite(maxDepth) || depth < maxDepth)\n    ) {\n      const entityRefQueue = nextDepthRefQueue;\n      nextDepthRefQueue = [];\n\n      while (entityRefQueue.length > 0) {\n        const entityRef = entityRefQueue.shift()!;\n        const entity = entities[entityRef];\n\n        processedEntityRefs.add(entityRef);\n\n        if (entity && entity.relations) {\n          for (const rel of entity.relations) {\n            if (\n              (!relations || relations.includes(rel.type)) &&\n              (!kinds ||\n                kinds.some(kind =>\n                  rel.targetRef.startsWith(\n                    `${kind.toLocaleLowerCase('en-US')}:`,\n                  ),\n                ))\n            ) {\n              if (!processedEntityRefs.has(rel.targetRef)) {\n                nextDepthRefQueue.push(rel.targetRef);\n                expectedEntities.add(rel.targetRef);\n              }\n            }\n          }\n        }\n      }\n\n      ++depth;\n    }\n\n    requestEntities([...expectedEntities]);\n  }, [entities, rootEntityRefs, maxDepth, relations, kinds, requestEntities]);\n\n  return {\n    entities,\n    loading,\n    error,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DEFAULT_NAMESPACE } from '@backstage/catalog-model';\nimport { MouseEvent, useState } from 'react';\nimport useDebounce from 'react-use/lib/useDebounce';\nimport { RelationPairs, ALL_RELATION_PAIRS } from './relations';\nimport { EntityEdge, EntityNode } from './types';\nimport { useEntityRelationGraph } from './useEntityRelationGraph';\n\n/**\n * Generate nodes and edges to render the entity graph.\n */\nexport function useEntityRelationNodesAndEdges({\n  rootEntityRefs,\n  maxDepth = Number.POSITIVE_INFINITY,\n  unidirectional = true,\n  mergeRelations = true,\n  kinds,\n  relations,\n  onNodeClick,\n  relationPairs = ALL_RELATION_PAIRS,\n}: {\n  rootEntityRefs: string[];\n  maxDepth?: number;\n  unidirectional?: boolean;\n  mergeRelations?: boolean;\n  kinds?: string[];\n  relations?: string[];\n  onNodeClick?: (value: EntityNode, event: MouseEvent<unknown>) => void;\n  relationPairs?: RelationPairs;\n}): {\n  loading: boolean;\n  nodes?: EntityNode[];\n  edges?: EntityEdge[];\n  error?: Error;\n} {\n  const [nodesAndEdges, setNodesAndEdges] = useState<{\n    nodes?: EntityNode[];\n    edges?: EntityEdge[];\n  }>({});\n  const { entities, loading, error } = useEntityRelationGraph({\n    rootEntityRefs,\n    filter: {\n      maxDepth,\n      kinds,\n      relations,\n    },\n  });\n\n  useDebounce(\n    () => {\n      if (!entities || Object.keys(entities).length === 0) {\n        setNodesAndEdges({});\n        return;\n      }\n\n      const nodes = Object.entries(entities).map(([entityRef, entity]) => {\n        const focused = rootEntityRefs.includes(entityRef);\n        const node: EntityNode = {\n          id: entityRef,\n          title: entity.metadata?.title ?? undefined,\n          kind: entity.kind,\n          name: entity.metadata.name,\n          namespace: entity.metadata.namespace ?? DEFAULT_NAMESPACE,\n          focused,\n          color: focused ? 'secondary' : 'primary',\n        };\n\n        if (onNodeClick) {\n          node.onClick = event => onNodeClick(node, event);\n        }\n\n        return node;\n      });\n\n      const edges: EntityEdge[] = [];\n      const visitedNodes = new Set<string>();\n      const nodeQueue = [...rootEntityRefs];\n\n      while (nodeQueue.length > 0) {\n        const entityRef = nodeQueue.pop()!;\n        const entity = entities[entityRef];\n        visitedNodes.add(entityRef);\n\n        if (entity) {\n          entity?.relations?.forEach(rel => {\n            // Check if the related entity should be displayed, if not, ignore\n            // the relation too\n            if (!entities[rel.targetRef]) {\n              return;\n            }\n\n            if (relations && !relations.includes(rel.type)) {\n              return;\n            }\n\n            if (\n              kinds &&\n              !kinds.some(kind =>\n                rel.targetRef.startsWith(`${kind.toLocaleLowerCase('en-US')}:`),\n              )\n            ) {\n              return;\n            }\n\n            if (!unidirectional || !visitedNodes.has(rel.targetRef)) {\n              if (mergeRelations) {\n                const pair = relationPairs.find(\n                  ([l, r]) => l === rel.type || r === rel.type,\n                ) ?? [rel.type];\n                const [left] = pair;\n\n                edges.push({\n                  from: left === rel.type ? entityRef : rel.targetRef,\n                  to: left === rel.type ? rel.targetRef : entityRef,\n                  relations: pair,\n                  label: 'visible',\n                });\n              } else {\n                edges.push({\n                  from: entityRef,\n                  to: rel.targetRef,\n                  relations: [rel.type],\n                  label: 'visible',\n                });\n              }\n            }\n\n            if (!visitedNodes.has(rel.targetRef)) {\n              nodeQueue.push(rel.targetRef);\n              visitedNodes.add(rel.targetRef);\n            }\n          });\n        }\n      }\n\n      setNodesAndEdges({ nodes, edges });\n    },\n    100,\n    [\n      entities,\n      rootEntityRefs,\n      kinds,\n      relations,\n      unidirectional,\n      mergeRelations,\n      onNodeClick,\n      relationPairs,\n    ],\n  );\n\n  return {\n    loading,\n    error,\n    ...nodesAndEdges,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  DependencyGraph,\n  DependencyGraphTypes,\n} from '@backstage/core-components';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { CircularProgress, makeStyles, useTheme } from '@material-ui/core';\nimport classNames from 'classnames';\nimport React, { MouseEvent, useEffect, useMemo } from 'react';\nimport { CustomLabel } from './CustomLabel';\nimport { CustomNode } from './CustomNode';\nimport { ALL_RELATION_PAIRS, RelationPairs } from './relations';\nimport { Direction, EntityNode } from './types';\nimport { useEntityRelationNodesAndEdges } from './useEntityRelationNodesAndEdges';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    marginLeft: '-20px',\n    marginTop: '-20px',\n  },\n  container: {\n    position: 'relative',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  graph: {\n    width: '100%',\n    flex: 1,\n    // Right now there is no good way to style edges between nodes, we have to\n    // fallback to these hacks:\n    '& path[marker-end]': {\n      transition: 'filter 0.1s ease-in-out',\n    },\n    '& path[marker-end]:hover': {\n      filter: `drop-shadow(2px 2px 4px ${theme.palette.primary.dark});`,\n    },\n    '& g[data-testid=label]': {\n      transition: 'transform 0s',\n    },\n  },\n}));\n\n/**\n * Core building block for custom entity relations diagrams.\n *\n * @public\n */\nexport const EntityRelationsGraph = ({\n  rootEntityNames,\n  maxDepth = Number.POSITIVE_INFINITY,\n  unidirectional = true,\n  mergeRelations = true,\n  kinds,\n  relations,\n  direction = Direction.LEFT_RIGHT,\n  onNodeClick,\n  relationPairs = ALL_RELATION_PAIRS,\n  className,\n  zoom = 'enabled',\n}: {\n  rootEntityNames: CompoundEntityRef | CompoundEntityRef[];\n  maxDepth?: number;\n  unidirectional?: boolean;\n  mergeRelations?: boolean;\n  kinds?: string[];\n  relations?: string[];\n  direction?: Direction;\n  onNodeClick?: (value: EntityNode, event: MouseEvent<unknown>) => void;\n  relationPairs?: RelationPairs;\n  className?: string;\n  zoom?: 'enabled' | 'disabled' | 'enable-on-click';\n}) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const rootEntityRefs = useMemo(\n    () =>\n      (Array.isArray(rootEntityNames)\n        ? rootEntityNames\n        : [rootEntityNames]\n      ).map(e => stringifyEntityRef(e)),\n    [rootEntityNames],\n  );\n  const errorApi = useApi(errorApiRef);\n  const { loading, error, nodes, edges } = useEntityRelationNodesAndEdges({\n    rootEntityRefs,\n    maxDepth,\n    unidirectional,\n    mergeRelations,\n    kinds,\n    relations,\n    onNodeClick,\n    relationPairs,\n  });\n\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [errorApi, error]);\n\n  return (\n    <div className={classNames(classes.container, className)}>\n      {loading && <CircularProgress className={classes.progress} />}\n      {nodes && edges && (\n        <DependencyGraph\n          nodes={nodes}\n          edges={edges}\n          renderNode={CustomNode}\n          renderLabel={CustomLabel}\n          direction={direction}\n          className={classes.graph}\n          paddingX={theme.spacing(4)}\n          paddingY={theme.spacing(4)}\n          labelPosition={DependencyGraphTypes.LabelPosition.RIGHT}\n          labelOffset={theme.spacing(1)}\n          zoom={zoom}\n        />\n      )}\n    </div>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createExternalRouteRef,\n  createRouteRef,\n} from '@backstage/core-plugin-api';\n\n/**\n * Route pointing to the standalone catalog graph page.\n *\n * @public\n */\nexport const catalogGraphRouteRef = createRouteRef({\n  id: 'catalog-graph',\n});\n\n/**\n * Route pointing to the entity page.\n * Used to navigate from the graph to an entity.\n *\n * @public\n * @deprecated This route is no longer used and can be removed\n */\nexport const catalogEntityRouteRef = createExternalRouteRef({\n  id: 'catalog-entity',\n  params: ['namespace', 'kind', 'name'],\n  optional: true,\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createPlugin } from '@backstage/core-plugin-api';\nimport { catalogEntityRouteRef, catalogGraphRouteRef } from './routes';\n\n/**\n * Catalog Graph Plugin instance.\n * @public\n */\nexport const catalogGraphPlugin = createPlugin({\n  id: 'catalog-graph',\n  routes: {\n    catalogGraph: catalogGraphRouteRef,\n  },\n  externalRoutes: {\n    catalogEntity: catalogEntityRouteRef,\n  },\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createComponentExtension,\n  createRoutableExtension,\n} from '@backstage/core-plugin-api';\nimport { catalogGraphPlugin } from './plugin';\nimport { catalogGraphRouteRef } from './routes';\n\n/**\n * A card that displays the directly related entities to the current entity.\n *\n * @public\n */\nexport const EntityCatalogGraphCard = catalogGraphPlugin.provide(\n  createComponentExtension({\n    name: 'EntityCatalogGraphCard',\n    component: {\n      lazy: () =>\n        import('./components/CatalogGraphCard').then(m => m.CatalogGraphCard),\n    },\n  }),\n);\n\n/**\n * A standalone page that can be added to your application providing a viewer\n * for your entities and their relations.\n *\n * @public\n */\nexport const CatalogGraphPage = catalogGraphPlugin.provide(\n  createRoutableExtension({\n    name: 'CatalogGraphPage',\n    component: () =>\n      import('./components/CatalogGraphPage').then(m => m.CatalogGraphPage),\n    mountPoint: catalogGraphRouteRef,\n  }),\n);\n"],"names":["useStyles","makeStyles"],"mappings":"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"}