{"version":3,"file":"index.cjs.js","sources":["../src/entity/constants.ts","../src/entity/policies/DefaultNamespaceEntityPolicy.ts","../src/validation/CommonValidatorFunctions.ts","../src/validation/ajv.ts","../src/validation/entityEnvelopeSchemaValidator.ts","../src/validation/entityKindSchemaValidator.ts","../src/validation/entitySchemaValidator.ts","../src/validation/KubernetesValidatorFunctions.ts","../src/validation/makeValidator.ts","../src/entity/policies/FieldFormatEntityPolicy.ts","../src/entity/policies/NoForeignRootFieldsEntityPolicy.ts","../src/entity/policies/SchemaValidEntityPolicy.ts","../src/entity/ref.ts","../src/EntityPolicies.ts","../src/kinds/util.ts","../src/kinds/ApiEntityV1alpha1.ts","../src/kinds/ComponentEntityV1alpha1.ts","../src/kinds/DomainEntityV1alpha1.ts","../src/kinds/GroupEntityV1alpha1.ts","../src/kinds/LocationEntityV1alpha1.ts","../src/kinds/relations.ts","../src/kinds/ResourceEntityV1alpha1.ts","../src/kinds/SystemEntityV1alpha1.ts","../src/kinds/UserEntityV1alpha1.ts","../src/location/annotation.ts","../src/location/helpers.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The namespace that entities without an explicit namespace fall into.\n *\n * @public\n */\nexport const DEFAULT_NAMESPACE = 'default';\n\n/**\n * Annotation for linking to entity page from catalog pages.\n *\n * @public\n */\nexport const ANNOTATION_VIEW_URL = 'backstage.io/view-url';\n\n/**\n * Annotation for linking to entity edit page from catalog pages.\n *\n * @public\n */\nexport const ANNOTATION_EDIT_URL = 'backstage.io/edit-url';\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport lodash from 'lodash';\nimport { EntityPolicy } from './types';\nimport { DEFAULT_NAMESPACE } from '../constants';\nimport { Entity } from '../Entity';\n\n/**\n * Sets a default namespace if none was set.\n *\n * @public\n */\nexport class DefaultNamespaceEntityPolicy implements EntityPolicy {\n  private readonly namespace: string;\n\n  constructor(namespace: string = DEFAULT_NAMESPACE) {\n    this.namespace = namespace;\n  }\n\n  async enforce(entity: Entity): Promise<Entity> {\n    if (entity.metadata.namespace) {\n      return entity;\n    }\n\n    return lodash.merge({ metadata: { namespace: this.namespace } }, entity);\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport lodash from 'lodash';\n\n/**\n * Contains various helper validation and normalization functions that can be\n * composed to form a Validator.\n *\n * @public\n */\nexport class CommonValidatorFunctions {\n  /**\n   * Checks that the value is on the form <suffix> or <prefix><separator><suffix>, and validates\n   * those parts separately.\n   *\n   * @param value - The value to check\n   * @param separator - The separator between parts\n   * @param isValidPrefix - Checks that the part before the separator is valid, if present\n   * @param isValidSuffix - Checks that the part after the separator (or the entire value if there is no separator) is valid\n   */\n  static isValidPrefixAndOrSuffix(\n    value: unknown,\n    separator: string,\n    isValidPrefix: (value: string) => boolean,\n    isValidSuffix: (value: string) => boolean,\n  ): boolean {\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    const parts = value.split(separator);\n    if (parts.length === 1) {\n      return isValidSuffix(parts[0]);\n    } else if (parts.length === 2) {\n      return isValidPrefix(parts[0]) && isValidSuffix(parts[1]);\n    }\n\n    return false;\n  }\n\n  /**\n   * Checks that the value can be safely transferred as JSON.\n   *\n   * @param value - The value to check\n   */\n  static isJsonSafe(value: unknown): boolean {\n    try {\n      return lodash.isEqual(value, JSON.parse(JSON.stringify(value)));\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Checks that the value is a valid DNS subdomain name.\n   *\n   * @param value - The value to check\n   * @see https://tools.ietf.org/html/rfc1123\n   */\n  static isValidDnsSubdomain(value: unknown): boolean {\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 253 &&\n      value.split('.').every(CommonValidatorFunctions.isValidDnsLabel)\n    );\n  }\n\n  /**\n   * Checks that the value is a valid DNS label.\n   *\n   * @param value - The value to check\n   * @see https://tools.ietf.org/html/rfc1123\n   */\n  static isValidDnsLabel(value: unknown): boolean {\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 63 &&\n      /^[a-z0-9]+(\\-[a-z0-9]+)*$/.test(value)\n    );\n  }\n\n  /**\n   * Checks that the value is a valid tag.\n   *\n   * @deprecated This will be removed in a future release\n   * @param value - The value to check\n   */\n  static isValidTag(value: unknown): boolean {\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 63 &&\n      /^[a-z0-9+#]+(\\-[a-z0-9+#]+)*$/.test(value)\n    );\n  }\n\n  /**\n   * Checks that the value is a valid string URL.\n   *\n   * @param value - The value to check\n   */\n  static isValidUrl(value: unknown): boolean {\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    try {\n      // eslint-disable-next-line no-new\n      new URL(value);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Checks that the value is a non empty string value.\n   *\n   * @deprecated use isNonEmptyString instead\n   * @param value - The value to check\n   */\n  static isValidString(value: unknown): boolean {\n    return typeof value === 'string' && value?.trim()?.length >= 1;\n  }\n\n  /**\n   * Checks that the value is a string value that's not empty.\n   *\n   * @param value - The value to check\n   */\n  static isNonEmptyString(value: unknown): value is string {\n    return typeof value === 'string' && value?.trim()?.length >= 1;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Ajv, { Schema, ValidateFunction } from 'ajv';\nimport entitySchema from '../schema/Entity.schema.json';\nimport entityEnvelopeSchema from '../schema/EntityEnvelope.schema.json';\nimport entityMetaSchema from '../schema/EntityMeta.schema.json';\nimport commonSchema from '../schema/shared/common.schema.json';\n\n// A local cache of compiled schemas, to avoid duplicate work.\n// The keys are JSON stringified versions of the schema\nconst compiledSchemaCache = new Map<string, ValidateFunction<unknown>>();\n\n// The core schemas that others can depend on\nconst refDependencyCandidates = [\n  entityEnvelopeSchema,\n  entitySchema,\n  entityMetaSchema,\n  commonSchema,\n];\n\nexport function throwAjvError(\n  errors: ValidateFunction<unknown>['errors'],\n): never {\n  if (!errors?.length) {\n    throw new TypeError('Unknown error');\n  }\n\n  const error = errors[0];\n  throw new TypeError(\n    `${error.dataPath || '<root>'} ${error.message}${\n      error.params\n        ? ` - ${Object.entries(error.params)\n            .map(([key, val]) => `${key}: ${val}`)\n            .join(', ')}`\n        : ''\n    }`,\n  );\n}\n\n// Compiles the given schema, and makes sure to also grab any core dependencies\n// that it depends on\nexport function compileAjvSchema(\n  schema: Schema,\n  options: { disableCache?: boolean } = {},\n): ValidateFunction<unknown> {\n  const disableCache = options?.disableCache ?? false;\n  const cacheKey = disableCache ? '' : JSON.stringify(schema);\n\n  if (!disableCache) {\n    const cached = compiledSchemaCache.get(cacheKey);\n    if (cached) {\n      return cached;\n    }\n  }\n\n  const extraSchemas = getExtraSchemas(schema);\n  const ajv = new Ajv({\n    allowUnionTypes: true,\n    allErrors: true,\n    validateSchema: true,\n  });\n  if (extraSchemas.length) {\n    ajv.addSchema(extraSchemas, undefined, undefined, true);\n  }\n  const compiled = ajv.compile(schema);\n\n  if (!disableCache) {\n    compiledSchemaCache.set(cacheKey, compiled);\n  }\n\n  return compiled;\n}\n\n// Find refs in the given schema and recursively in all known schemas it\n// targets, collecting that list of schemas as we go\nfunction getExtraSchemas(schema: Schema): Schema[] {\n  if (typeof schema !== 'object') {\n    return [];\n  }\n\n  const seen = new Set<string>();\n  if (schema.$id) {\n    seen.add(schema.$id);\n  }\n\n  const selected = new Array<Schema>();\n\n  const todo: Schema[] = [schema];\n  while (todo.length) {\n    const current = todo.pop()!;\n\n    for (const ref of getAllRefs(current)) {\n      if (!seen.has(ref)) {\n        seen.add(ref);\n\n        const match = refDependencyCandidates.find(c => c.$id === ref);\n        if (match) {\n          selected.push(match);\n          todo.push(match);\n        }\n      }\n    }\n  }\n\n  return selected;\n}\n\n// Naively step through the entire schema looking for \"$ref\": \"x\" pairs. The\n// resulting iterator may contain duplicates. Ignores fragments, i.e. for a ref\n// of \"a#b\", it will just yield \"a\".\nfunction* getAllRefs(schema: Schema): Iterable<string> {\n  const todo: any[] = [schema];\n  while (todo.length) {\n    const current = todo.pop()!;\n    if (typeof current === 'object' && current) {\n      for (const [key, value] of Object.entries(current)) {\n        if (key === '$ref' && typeof value === 'string') {\n          yield value.split('#')[0];\n        } else {\n          todo.push(value);\n        }\n      }\n    }\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Schema } from 'ajv';\nimport { EntityEnvelope } from '../entity/EntityEnvelope';\nimport entityEnvelopeSchema from '../schema/EntityEnvelope.schema.json';\nimport { compileAjvSchema, throwAjvError } from './ajv';\n\n/**\n * Creates a validation function that takes some arbitrary data, and either\n * returns that data cast to an {@link EntityEnvelope} (or the given subtype)\n * if it matches that schema, or throws a {@link globals#TypeError} describing the\n * errors.\n *\n * @remarks\n *\n * Note that this validator is only meant for applying the base schema checks;\n * it does not take custom policies or additional processor based validation\n * into account.\n *\n * By default, the plain `EntityEnvelope` schema is used. If you pass in your\n * own, it may contain `$ref` references to the following, which are resolved\n * automatically for you:\n *\n * - {@link EntityEnvelope}\n * - {@link Entity}\n * - {@link EntityMeta}\n * - `common#<id>`\n *\n * See also {@link https://github.com/backstage/backstage/tree/master/packages/catalog-model/src/schema}\n *\n * @public\n *\n */\nexport function entityEnvelopeSchemaValidator<\n  T extends EntityEnvelope = EntityEnvelope,\n>(schema?: unknown): (data: unknown) => T {\n  const validate = compileAjvSchema(\n    schema ? (schema as Schema) : entityEnvelopeSchema,\n  );\n\n  return data => {\n    const result = validate(data);\n    if (result === true) {\n      return data as T;\n    }\n\n    throw throwAjvError(validate.errors);\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Schema } from 'ajv';\nimport { Entity } from '../entity';\nimport { compileAjvSchema, throwAjvError } from './ajv';\n\n/**\n * Creates a validation function that takes some arbitrary data, and either\n * returns that data cast to a `T` if it matches that schema, or `false` if the\n * schema apiVersion/kind didn't apply to that data, or throws a\n * {@link globals#TypeError} describing actual errors.\n *\n * @remarks\n *\n * This validator is highly specialized, in that it has special treatment of\n * the `kind` and `apiVersion` root keys. This only works if your schema has\n * their rule set to `\"enum\"`:\n *\n * ```\n * \"apiVersion\": {\n *    \"enum\": [\"backstage.io/v1alpha1\", \"backstage.io/v1beta1\"]\n * },\n * \"kind\": {\n *   \"enum\": [\"Group\"]\n * },\n * ```\n *\n * In the above example, the created validator will return `false` if and only\n * if the kind and/or apiVersion mismatch.\n *\n * Note that this validator is only meant for applying the base schema checks;\n * it does not take custom policies or additional processor based validation\n * into account.\n *\n * The given schema may contain `$ref` references to the following, which are\n * resolved automatically for you:\n *\n * - {@link Entity}\n *\n * - {@link EntityEnvelope}\n *\n * - {@link EntityMeta}\n *\n * - `common#<id>`\n * @see {@link https://github.com/backstage/backstage/tree/master/packages/catalog-model/src/schema}\n *\n * @public\n */\nexport function entityKindSchemaValidator<T extends Entity>(\n  schema: unknown,\n): (data: unknown) => T | false {\n  const validate = compileAjvSchema(schema as Schema);\n\n  return data => {\n    const result = validate(data);\n    if (result === true) {\n      return data as T;\n    }\n\n    // Only in the case where kind and/or apiVersion have enum mismatches AND\n    // have NO other errors, we call it a soft error.\n    const softCandidates = validate.errors?.filter(e =>\n      ['/kind', '/apiVersion'].includes(e.dataPath),\n    );\n    if (\n      softCandidates?.length &&\n      softCandidates.every(e => e.keyword === 'enum')\n    ) {\n      return false;\n    }\n\n    throw throwAjvError(validate.errors);\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Schema } from 'ajv';\nimport { Entity } from '../entity/Entity';\nimport entitySchema from '../schema/Entity.schema.json';\nimport { compileAjvSchema, throwAjvError } from './ajv';\n\n/**\n * Creates a validation function that takes some arbitrary data, and either\n * returns that data cast to an {@link Entity} (or the given subtype) if it\n * matches that schema, or throws a {@link globals#TypeError} describing the errors.\n *\n * @remarks\n *\n * Note that this validator is only meant for applying the base schema checks;\n * it does not take custom policies or additional processor based validation\n * into account.\n *\n * By default, the plain {@link Entity} schema is used. If you pass in your own, it\n * may contain `$ref` references to the following, which are resolved\n * automatically for you:\n *\n * - {@link Entity}\n * - {@link EntityEnvelope}\n * - {@link EntityMeta}\n * - `common#<id>`\n *\n * @public\n * @see {@link https://github.com/backstage/backstage/tree/master/packages/catalog-model/src/schema}\n */\nexport function entitySchemaValidator<T extends Entity = Entity>(\n  schema?: unknown,\n): (data: unknown) => T {\n  const validate = compileAjvSchema(schema ? (schema as Schema) : entitySchema);\n\n  return data => {\n    const result = validate(data);\n    if (result === true) {\n      return data as T;\n    }\n\n    throw throwAjvError(validate.errors);\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonValidatorFunctions } from './CommonValidatorFunctions';\n\n/**\n * Contains validation functions that match the Kubernetes spec, usable to\n * build a catalog that is compatible with those rule sets.\n *\n * @public\n * @see https://kubernetes.io/docs/concepts/overview/working-with-objects/names/\n * @see https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set\n * @see https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set\n */\nexport class KubernetesValidatorFunctions {\n  static isValidApiVersion(value: unknown): boolean {\n    return CommonValidatorFunctions.isValidPrefixAndOrSuffix(\n      value,\n      '/',\n      CommonValidatorFunctions.isValidDnsSubdomain,\n      n => n.length >= 1 && n.length <= 63 && /^[a-z0-9A-Z]+$/.test(n),\n    );\n  }\n\n  static isValidKind(value: unknown): boolean {\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 63 &&\n      /^[a-zA-Z][a-z0-9A-Z]*$/.test(value)\n    );\n  }\n\n  static isValidObjectName(value: unknown): boolean {\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 63 &&\n      /^([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$/.test(value)\n    );\n  }\n\n  static isValidNamespace(value: unknown): boolean {\n    return CommonValidatorFunctions.isValidDnsLabel(value);\n  }\n\n  static isValidLabelKey(value: unknown): boolean {\n    return CommonValidatorFunctions.isValidPrefixAndOrSuffix(\n      value,\n      '/',\n      CommonValidatorFunctions.isValidDnsSubdomain,\n      KubernetesValidatorFunctions.isValidObjectName,\n    );\n  }\n\n  static isValidLabelValue(value: unknown): boolean {\n    return (\n      value === '' || KubernetesValidatorFunctions.isValidObjectName(value)\n    );\n  }\n\n  static isValidAnnotationKey(value: unknown): boolean {\n    return CommonValidatorFunctions.isValidPrefixAndOrSuffix(\n      value,\n      '/',\n      CommonValidatorFunctions.isValidDnsSubdomain,\n      KubernetesValidatorFunctions.isValidObjectName,\n    );\n  }\n\n  static isValidAnnotationValue(value: unknown): boolean {\n    return typeof value === 'string';\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { KubernetesValidatorFunctions } from './KubernetesValidatorFunctions';\nimport { Validators } from './types';\n\nconst defaultValidators: Validators = {\n  isValidApiVersion: KubernetesValidatorFunctions.isValidApiVersion,\n  isValidKind: KubernetesValidatorFunctions.isValidKind,\n  isValidEntityName: KubernetesValidatorFunctions.isValidObjectName,\n  isValidNamespace: KubernetesValidatorFunctions.isValidNamespace,\n  isValidLabelKey: KubernetesValidatorFunctions.isValidLabelKey,\n  isValidLabelValue: KubernetesValidatorFunctions.isValidLabelValue,\n  isValidAnnotationKey: KubernetesValidatorFunctions.isValidAnnotationKey,\n  isValidAnnotationValue: KubernetesValidatorFunctions.isValidAnnotationValue,\n  isValidTag: (value: unknown): boolean => {\n    // NOTE(freben): This one is a bit of an oddball and doesn't fit well anywhere to delegate to, so it's just inlined for now.\n    return (\n      typeof value === 'string' &&\n      value.length >= 1 &&\n      value.length <= 63 &&\n      /^[a-z0-9:+#]+(\\-[a-z0-9:+#]+)*$/.test(value)\n    );\n  },\n};\n\n/**\n * Creates a {@link Validators} object from `overrides`, with default values taken from {@link KubernetesValidatorFunctions}\n *\n * @public\n */\nexport function makeValidator(overrides: Partial<Validators> = {}): Validators {\n  return {\n    ...defaultValidators,\n    ...overrides,\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityPolicy } from './types';\nimport {\n  CommonValidatorFunctions,\n  KubernetesValidatorFunctions,\n  makeValidator,\n  Validators,\n} from '../../validation';\nimport { Entity } from '../Entity';\n\n/**\n * Ensures that the format of individual fields of the entity envelope\n * is valid.\n *\n * @remarks\n *\n * This does not take into account machine generated fields such as uid and etag.\n *\n * @public\n */\nexport class FieldFormatEntityPolicy implements EntityPolicy {\n  private readonly validators: Validators;\n\n  constructor(validators: Validators = makeValidator()) {\n    this.validators = validators;\n  }\n\n  async enforce(entity: Entity): Promise<Entity> {\n    function require(\n      field: string,\n      value: any,\n      validator: (value: any) => boolean,\n    ) {\n      if (value === undefined || value === null) {\n        throw new Error(`${field} must have a value`);\n      }\n\n      let isValid: boolean;\n      try {\n        isValid = validator(value);\n      } catch (e) {\n        throw new Error(`${field} could not be validated, ${e}`);\n      }\n\n      if (!isValid) {\n        let expectation;\n        switch (\n          validator.name as\n            | keyof typeof KubernetesValidatorFunctions\n            | keyof typeof CommonValidatorFunctions\n        ) {\n          case 'isValidLabelValue':\n          case 'isValidObjectName':\n            expectation =\n              'a string that is sequences of [a-zA-Z0-9] separated by any of [-_.], at most 63 characters in total';\n            break;\n          case 'isValidLabelKey':\n          case 'isValidApiVersion':\n          case 'isValidAnnotationKey':\n            expectation = 'a valid prefix and/or suffix';\n            break;\n          case 'isValidNamespace':\n          case 'isValidDnsLabel':\n            expectation =\n              'a string that is sequences of [a-z0-9] separated by [-], at most 63 characters in total';\n            break;\n          case 'isValidTag':\n            expectation =\n              'a string that is sequences of [a-z0-9+#] separated by [-], at most 63 characters in total';\n            break;\n          case 'isValidAnnotationValue':\n            expectation = 'a string';\n            break;\n          case 'isValidKind':\n            expectation =\n              'a string that is a sequence of [a-zA-Z][a-z0-9A-Z], at most 63 characters in total';\n            break;\n          case 'isValidUrl':\n            expectation = 'a string that is a valid url';\n            break;\n          case 'isValidString':\n          case 'isNonEmptyString':\n            expectation = 'a non empty string';\n            break;\n          default:\n            expectation = undefined;\n            break;\n        }\n\n        // ensure that if there are other/future validators, the error message defaults to a general \"is not valid, visit link\"\n        const message = expectation\n          ? ` expected ${expectation} but found \"${value}\".`\n          : '';\n\n        throw new Error(\n          `\"${field}\" is not valid;${message} To learn more about catalog file format, visit: https://github.com/backstage/backstage/blob/master/docs/architecture-decisions/adr002-default-catalog-file-format.md`,\n        );\n      }\n    }\n\n    function optional(\n      field: string,\n      value: any,\n      validator: (value: any) => boolean,\n    ) {\n      return value === undefined || require(field, value, validator);\n    }\n\n    require('apiVersion', entity.apiVersion, this.validators.isValidApiVersion);\n    require('kind', entity.kind, this.validators.isValidKind);\n\n    require('metadata.name', entity.metadata.name, this.validators\n      .isValidEntityName);\n    optional(\n      'metadata.namespace',\n      entity.metadata.namespace,\n      this.validators.isValidNamespace,\n    );\n\n    for (const [k, v] of Object.entries(entity.metadata.labels ?? [])) {\n      require(`labels.${k}`, k, this.validators.isValidLabelKey);\n      require(`labels.${k}`, v, this.validators.isValidLabelValue);\n    }\n\n    for (const [k, v] of Object.entries(entity.metadata.annotations ?? [])) {\n      require(`annotations.${k}`, k, this.validators.isValidAnnotationKey);\n      require(`annotations.${k}`, v, this.validators.isValidAnnotationValue);\n    }\n\n    const tags = entity.metadata.tags ?? [];\n\n    for (let i = 0; i < tags.length; ++i) {\n      require(`tags.${i}`, tags[i], this.validators.isValidTag);\n    }\n\n    const links = entity.metadata.links ?? [];\n\n    for (let i = 0; i < links.length; ++i) {\n      require(`links.${i}.url`, links[i]\n        ?.url, CommonValidatorFunctions.isValidUrl);\n      optional(\n        `links.${i}.title`,\n        links[i]?.title,\n        CommonValidatorFunctions.isNonEmptyString,\n      );\n      optional(\n        `links.${i}.icon`,\n        links[i]?.icon,\n        KubernetesValidatorFunctions.isValidObjectName,\n      );\n    }\n\n    return entity;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityPolicy } from './types';\nimport { Entity } from '../Entity';\n\nconst defaultKnownFields = ['apiVersion', 'kind', 'metadata', 'spec'];\n\n/**\n * Ensures that there are no foreign root fields in the entity.\n *\n * @public\n */\nexport class NoForeignRootFieldsEntityPolicy implements EntityPolicy {\n  private readonly knownFields: string[];\n\n  constructor(knownFields: string[] = defaultKnownFields) {\n    this.knownFields = knownFields;\n  }\n\n  async enforce(entity: Entity): Promise<Entity> {\n    for (const field of Object.keys(entity)) {\n      if (!this.knownFields.includes(field)) {\n        throw new Error(`Unknown field ${field}`);\n      }\n    }\n    return entity;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Ajv, { ValidateFunction } from 'ajv';\nimport entitySchema from '../../schema/Entity.schema.json';\nimport entityMetaSchema from '../../schema/EntityMeta.schema.json';\nimport commonSchema from '../../schema/shared/common.schema.json';\nimport { Entity } from '../Entity';\nimport { EntityPolicy } from './types';\n\n/**\n * Ensures that the entity spec is valid according to a schema.\n *\n * @remarks\n *\n * This should be the first policy in the list, to ensure that other downstream\n * policies can work with a structure that is at least valid in therms of the\n * typescript type.\n *\n * @public\n */\nexport class SchemaValidEntityPolicy implements EntityPolicy {\n  private validate: ValidateFunction<Entity> | undefined;\n\n  async enforce(entity: Entity): Promise<Entity> {\n    if (!this.validate) {\n      const ajv = new Ajv({ allowUnionTypes: true });\n      this.validate = ajv\n        .addSchema([commonSchema, entityMetaSchema], undefined, undefined, true)\n        .compile<Entity>(entitySchema);\n    }\n\n    const result = this.validate(entity);\n    if (result === true) {\n      return entity;\n    }\n\n    const [error] = this.validate.errors || [];\n    if (!error) {\n      throw new Error(`Malformed envelope, Unknown error`);\n    }\n\n    throw new Error(\n      `Malformed envelope, ${error.dataPath || '<root>'} ${error.message}`,\n    );\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_NAMESPACE } from './constants';\nimport { CompoundEntityRef } from '../types';\nimport { Entity } from './Entity';\n\nfunction parseRefString(ref: string): {\n  kind?: string;\n  namespace?: string;\n  name: string;\n} {\n  let colonI = ref.indexOf(':');\n  const slashI = ref.indexOf('/');\n\n  // If the / is ahead of the :, treat the rest as the name\n  if (slashI !== -1 && slashI < colonI) {\n    colonI = -1;\n  }\n\n  const kind = colonI === -1 ? undefined : ref.slice(0, colonI);\n  const namespace = slashI === -1 ? undefined : ref.slice(colonI + 1, slashI);\n  const name = ref.slice(Math.max(colonI + 1, slashI + 1));\n\n  if (kind === '' || namespace === '' || name === '') {\n    throw new TypeError(\n      `Entity reference \"${ref}\" was not on the form [<kind>:][<namespace>/]<name>`,\n    );\n  }\n\n  return { kind, namespace, name };\n}\n\n/**\n * Extracts the kind, namespace and name that form the compound entity ref\n * triplet of the given entity.\n *\n * @public\n * @param entity - An entity\n * @returns The compound entity ref\n */\nexport function getCompoundEntityRef(entity: Entity): CompoundEntityRef {\n  return {\n    kind: entity.kind,\n    namespace: entity.metadata.namespace || DEFAULT_NAMESPACE,\n    name: entity.metadata.name,\n  };\n}\n\n/**\n * Parses an entity reference, either on string or compound form, and returns\n * a structure with a name, and optional kind and namespace.\n *\n * @remarks\n *\n * The context object can contain default values for the kind and namespace,\n * that will be used if the input reference did not specify any.\n *\n * @public\n * @param ref - The reference to parse\n * @param context - The context of defaults that the parsing happens within\n * @returns The compound form of the reference\n */\nexport function parseEntityRef(\n  ref: string | { kind?: string; namespace?: string; name: string },\n  context?: {\n    /** The default kind, if none is given in the reference */\n    defaultKind?: string;\n    /** The default namespace, if none is given in the reference */\n    defaultNamespace?: string;\n  },\n): CompoundEntityRef {\n  if (!ref) {\n    throw new Error(`Entity reference must not be empty`);\n  }\n\n  const defaultKind = context?.defaultKind;\n  const defaultNamespace = context?.defaultNamespace || DEFAULT_NAMESPACE;\n\n  let kind: string | undefined;\n  let namespace: string | undefined;\n  let name: string | undefined;\n\n  if (typeof ref === 'string') {\n    const parsed = parseRefString(ref);\n    kind = parsed.kind ?? defaultKind;\n    namespace = parsed.namespace ?? defaultNamespace;\n    name = parsed.name;\n  } else {\n    kind = ref.kind ?? defaultKind;\n    namespace = ref.namespace ?? defaultNamespace;\n    name = ref.name;\n  }\n\n  if (!kind) {\n    const textual = JSON.stringify(ref);\n    throw new Error(\n      `Entity reference ${textual} had missing or empty kind (e.g. did not start with \"component:\" or similar)`,\n    );\n  } else if (!namespace) {\n    const textual = JSON.stringify(ref);\n    throw new Error(\n      `Entity reference ${textual} had missing or empty namespace`,\n    );\n  } else if (!name) {\n    const textual = JSON.stringify(ref);\n    throw new Error(`Entity reference ${textual} had missing or empty name`);\n  }\n\n  return { kind, namespace, name };\n}\n\n/**\n * Takes an entity or entity name/reference, and returns the string form of an\n * entity ref.\n *\n * @remarks\n *\n * This function creates a canonical and unique reference to the entity, converting\n * all parts of the name to lowercase and inserts the default namespace if needed.\n * It is typically not the best way to represent the entity reference to the user.\n *\n * @public\n * @param ref - The reference to serialize\n * @returns The same reference on either string or compound form\n */\nexport function stringifyEntityRef(\n  ref: Entity | { kind: string; namespace?: string; name: string },\n): string {\n  let kind;\n  let namespace;\n  let name;\n\n  if ('metadata' in ref) {\n    kind = ref.kind;\n    namespace = ref.metadata.namespace ?? DEFAULT_NAMESPACE;\n    name = ref.metadata.name;\n  } else {\n    kind = ref.kind;\n    namespace = ref.namespace ?? DEFAULT_NAMESPACE;\n    name = ref.name;\n  }\n\n  return `${kind.toLocaleLowerCase('en-US')}:${namespace.toLocaleLowerCase(\n    'en-US',\n  )}/${name.toLocaleLowerCase('en-US')}`;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, EntityPolicy } from './entity';\n\n// Helper that requires that all of a set of policies can be successfully\n// applied\nclass AllEntityPolicies implements EntityPolicy {\n  constructor(private readonly policies: EntityPolicy[]) {}\n\n  async enforce(entity: Entity): Promise<Entity> {\n    let result = entity;\n    for (const policy of this.policies) {\n      const output = await policy.enforce(result);\n      if (!output) {\n        throw new Error(\n          `Policy ${policy.constructor.name} did not return a result`,\n        );\n      }\n      result = output;\n    }\n    return result;\n  }\n}\n\n// Helper that requires that at least one of a set of policies can be\n// successfully applied\nclass AnyEntityPolicy implements EntityPolicy {\n  constructor(private readonly policies: EntityPolicy[]) {}\n\n  async enforce(entity: Entity): Promise<Entity> {\n    for (const policy of this.policies) {\n      const output = await policy.enforce(entity);\n      if (output) {\n        return output;\n      }\n    }\n    throw new Error(`The entity did not match any known policy`);\n  }\n}\n\n/**\n * Provides helpers for enforcing a set of {@link EntityPolicy} in an `and`/`or` expression.\n *\n * @public\n */\nexport const EntityPolicies = {\n  allOf(policies: EntityPolicy[]): EntityPolicy {\n    return new AllEntityPolicies(policies);\n  },\n  oneOf(policies: EntityPolicy[]): EntityPolicy {\n    return new AnyEntityPolicy(policies);\n  },\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { entityKindSchemaValidator } from '../validation';\nimport { KindValidator } from './types';\n\n// TODO(freben): Left here as a compatibility helper. It would be nicer to\n// just export the inner validator directly. However, all of the already\n// exported kind validators have the `KindValidator` signature which is\n// different. So let's postpone that change until a later time.\nexport function ajvCompiledJsonSchemaValidator(schema: unknown): KindValidator {\n  const validator = entityKindSchemaValidator(schema);\n  return {\n    async check(data) {\n      return validator(data) === data;\n    },\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/API.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage API kind Entity. APIs describe the interfaces for Components to communicate.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/features/software-catalog/system-model}\n *\n * @public\n */\nexport interface ApiEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'API';\n  spec: {\n    type: string;\n    lifecycle: string;\n    owner: string;\n    definition: string;\n    system?: string;\n  };\n}\n\n/**\n * {@link KindValidator} for {@link ApiEntityV1alpha1}.\n *\n * @public\n */\nexport const apiEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/Component.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog Component kind Entity. Represents a single, individual piece of software.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/features/software-catalog/system-model}\n *\n * @public\n */\nexport interface ComponentEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'Component';\n  spec: {\n    type: string;\n    lifecycle: string;\n    owner: string;\n    subcomponentOf?: string;\n    providesApis?: string[];\n    consumesApis?: string[];\n    dependsOn?: string[];\n    system?: string;\n  };\n}\n\n/**\n * {@link KindValidator} for {@link ComponentEntityV1alpha1}.\n *\n * @public\n */\nexport const componentEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/Domain.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage Domain kind Entity. Domains group Systems together.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/features/software-catalog/system-model}\n *\n * @public\n */\nexport interface DomainEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'Domain';\n  spec: {\n    owner: string;\n  };\n}\n\n/**\n * {@link KindValidator} for {@link DomainEntityV1alpha1}.\n *\n * @public\n */\nexport const domainEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/Group.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog Group kind Entity.\n *\n * @public\n */\nexport interface GroupEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'Group';\n  spec: {\n    type: string;\n    profile?: {\n      displayName?: string;\n      email?: string;\n      picture?: string;\n    };\n    parent?: string;\n    children: string[];\n    members?: string[];\n  };\n}\n\n/**\n * {@link KindValidator} for {@link GroupEntityV1alpha1}.\n * @public\n */\nexport const groupEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/Location.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog Location kind Entity.\n *\n * @public\n */\nexport interface LocationEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'Location';\n  spec: {\n    type?: string;\n    target?: string;\n    targets?: string[];\n    presence?: 'required' | 'optional';\n  };\n}\n\n/**\n * {@link KindValidator} for {@link LocationEntityV1alpha1}.\n *\n * @public\n */\nexport const locationEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\nNaming rules for relations in priority order:\n\n1. Use at most two words. One main verb and a specifier, e.g. \"ownerOf\"\n2. Reading out \"<source-kind> <type> <target-kind>\" should make sense in English.\n3. Maintain symmetry between pairs, e.g. \"ownedBy\" and \"ownerOf\" rather than \"owns\".\n*/\n\n/**\n * An ownership relation where the owner is usually an organizational\n * entity (user or group), and the other entity can be anything. Reversed\n * direction of {@link RELATION_OWNER_OF}.\n *\n * @public\n */\nexport const RELATION_OWNED_BY = 'ownedBy';\n\n/**\n * A relationship from an owner to the owned entity. Reversed direction of\n * {@link RELATION_OWNED_BY}.\n *\n * @public\n */\nexport const RELATION_OWNER_OF = 'ownerOf';\n\n/**\n * A relation with an API entity, typically from a component. Reversed direction of\n * {@link RELATION_API_CONSUMED_BY}.\n *\n * @public\n */\nexport const RELATION_CONSUMES_API = 'consumesApi';\n\n/**\n * A relation of an API being consumed, typically by a component. Reversed direction of\n * {@link RELATION_CONSUMES_API}.\n *\n * @public\n */\nexport const RELATION_API_CONSUMED_BY = 'apiConsumedBy';\n\n/**\n * A relation from an API provider entity (typically a component) to the API. Reversed direction of\n * {@link RELATION_API_PROVIDED_BY}.\n *\n * @public\n */\nexport const RELATION_PROVIDES_API = 'providesApi';\n\n/**\n * A relation from an API to its provider entity (typically a component). Reversed direction of\n * {@link RELATION_PROVIDES_API}.\n *\n * @public\n */\nexport const RELATION_API_PROVIDED_BY = 'apiProvidedBy';\n\n/**\n * A relation denoting a dependency on another entity. Reversed direction of\n * {@link RELATION_DEPENDENCY_OF}.\n *\n * @public\n */\nexport const RELATION_DEPENDS_ON = 'dependsOn';\n\n/**\n * A relation denoting a reverse dependency by another entity. Reversed direction of\n * {@link RELATION_DEPENDS_ON}.\n *\n * @public\n */\nexport const RELATION_DEPENDENCY_OF = 'dependencyOf';\n\n/**\n * A parent/child relation to build up a tree, used for example to describe\n * the organizational structure between groups. Reversed direction of\n * {@link RELATION_CHILD_OF}.\n *\n * @public\n */\nexport const RELATION_PARENT_OF = 'parentOf';\n\n/**\n * A relation from a child to a parent entity, used for example to describe\n * the organizational structure between groups. Reversed direction of\n * {@link RELATION_PARENT_OF}.\n *\n * @public\n */\nexport const RELATION_CHILD_OF = 'childOf';\n\n/**\n * A membership relation, typically for users in a group. Reversed direction of\n * {@link RELATION_HAS_MEMBER}.\n *\n * @public\n */\nexport const RELATION_MEMBER_OF = 'memberOf';\n\n/**\n * A relation from a group to its member, typcally a user in a group. Reversed direction of\n * {@link RELATION_MEMBER_OF}.\n *\n * @public\n */\nexport const RELATION_HAS_MEMBER = 'hasMember';\n\n/**\n * A part/whole relation, typically for components in a system and systems\n * in a domain. Reversed direction of {@link RELATION_HAS_PART}.\n *\n * @public\n */\nexport const RELATION_PART_OF = 'partOf';\n\n/**\n * A relation from a containing entity to a contained entity. Reversed direction of\n * {@link RELATION_PART_OF}.\n *\n * @public\n */\nexport const RELATION_HAS_PART = 'hasPart';\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/Resource.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog Resource kind Entity. Represents infrastructure required to operate Components.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/features/software-catalog/system-model}\n *\n * @public\n */\nexport interface ResourceEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'Resource';\n  spec: {\n    type: string;\n    owner: string;\n    dependsOn?: string[];\n    dependencyOf?: string[];\n    system?: string;\n  };\n}\n\n/**\n * {@link KindValidator} for {@link ResourceEntityV1alpha1}.\n *\n * @public\n */\nexport const resourceEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/System.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog System kind Entity. Systems group Comopnents, Resources and APIs together.\n *\n * @remarks\n *\n * See {@link https://backstage.io/docs/features/software-catalog/system-model}\n *\n * @public\n */\nexport interface SystemEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'System';\n  spec: {\n    owner: string;\n    domain?: string;\n  };\n}\n\n/**\n * {@link KindValidator} for {@link SystemEntityV1alpha1}.\n *\n * @public\n */\nexport const systemEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Entity } from '../entity/Entity';\nimport schema from '../schema/kinds/User.v1alpha1.schema.json';\nimport { ajvCompiledJsonSchemaValidator } from './util';\n\n/**\n * Backstage catalog User kind Entity.\n *\n * @public\n */\nexport interface UserEntityV1alpha1 extends Entity {\n  apiVersion: 'backstage.io/v1alpha1' | 'backstage.io/v1beta1';\n  kind: 'User';\n  spec: {\n    profile?: {\n      displayName?: string;\n      email?: string;\n      picture?: string;\n    };\n    memberOf?: string[];\n  };\n}\n\n/**\n * {@link KindValidator} for {@link UserEntityV1alpha1}.\n *\n * @public\n */\nexport const userEntityV1alpha1Validator =\n  ajvCompiledJsonSchemaValidator(schema);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Entity annotation containing the location from which the entity is sourced.\n *\n * @public\n */\nexport const ANNOTATION_LOCATION = 'backstage.io/managed-by-location';\n\n/**\n * Entity annotation containing the originally sourced location which ultimately\n * led to this entity being ingested.\n *\n * @public\n */\nexport const ANNOTATION_ORIGIN_LOCATION =\n  'backstage.io/managed-by-origin-location';\n\n/**\n * Entity annotation pointing to the source (e.g. source code repository root or\n * similar) for this entity.\n *\n * @public\n */\nexport const ANNOTATION_SOURCE_LOCATION = 'backstage.io/source-location';\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ANNOTATION_SOURCE_LOCATION } from '.';\nimport { Entity, stringifyEntityRef } from '../entity';\nimport { ANNOTATION_LOCATION } from './annotation';\n\n/**\n * Parses a string form location reference.\n *\n * @public\n * @param ref - A string-form location ref, e.g. `'url:https://host'`\n * @returns A location ref, e.g. `{ type: 'url', target: 'https://host' }`\n */\nexport function parseLocationRef(ref: string): {\n  type: string;\n  target: string;\n} {\n  if (typeof ref !== 'string') {\n    throw new TypeError(\n      `Unable to parse location ref '${ref}', unexpected argument ${typeof ref}`,\n    );\n  }\n\n  const splitIndex = ref.indexOf(':');\n  if (splitIndex < 0) {\n    throw new TypeError(\n      `Unable to parse location ref '${ref}', expected '<type>:<target>', e.g. 'url:https://host/path'`,\n    );\n  }\n\n  const type = ref.substring(0, splitIndex).trim();\n  const target = ref.substring(splitIndex + 1).trim();\n\n  if (!type || !target) {\n    throw new TypeError(\n      `Unable to parse location ref '${ref}', expected '<type>:<target>', e.g. 'url:https://host/path'`,\n    );\n  }\n\n  if (type === 'http' || type === 'https') {\n    throw new TypeError(\n      `Invalid location ref '${ref}', please prefix it with 'url:', e.g. 'url:${ref}'`,\n    );\n  }\n\n  return { type, target };\n}\n\n/**\n * Turns a location ref into its string form.\n *\n * @public\n * @param ref - A location ref, e.g. `{ type: 'url', target: 'https://host' }`\n * @returns A string-form location ref, e.g. `'url:https://host'`\n */\nexport function stringifyLocationRef(ref: {\n  type: string;\n  target: string;\n}): string {\n  const { type, target } = ref;\n\n  if (!type) {\n    throw new TypeError(`Unable to stringify location ref, empty type`);\n  } else if (!target) {\n    throw new TypeError(`Unable to stringify location ref, empty target`);\n  }\n\n  return `${type}:${target}`;\n}\n\n/**\n * Returns the source code location of the Entity, to the extent that one exists.\n *\n * @remarks\n *\n * If the returned location type is of type 'url', the target should be readable at least\n * using the UrlReader from `@backstage/backend-common`. If it is not of type 'url', the caller\n * needs to have explicit handling of each location type or signal that it is not supported.\n *\n * @public\n */\nexport function getEntitySourceLocation(entity: Entity): {\n  type: string;\n  target: string;\n} {\n  const locationRef =\n    entity.metadata?.annotations?.[ANNOTATION_SOURCE_LOCATION] ??\n    entity.metadata?.annotations?.[ANNOTATION_LOCATION];\n\n  if (!locationRef) {\n    throw new Error(\n      `Entity '${stringifyEntityRef(entity)}' is missing location`,\n    );\n  }\n\n  return parseLocationRef(locationRef);\n}\n"],"names":["lodash","Ajv","schema"],"mappings":"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"}