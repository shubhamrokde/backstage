{"version":3,"file":"index.esm.js","sources":["../src/routes.ts","../src/plugin.ts","../src/components/Cards/Group/MembersList/MembersListCard.tsx","../src/components/Cards/Group/GroupProfile/GroupProfileCard.tsx","../src/components/Cards/User/UserProfileCard/UserProfileCard.tsx","../src/components/Cards/OwnershipCard/OwnershipCard.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createExternalRouteRef } from '@backstage/core-plugin-api';\n\nexport const catalogIndexRouteRef = createExternalRouteRef({\n  id: 'catalog-index',\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createComponentExtension,\n  createPlugin,\n} from '@backstage/core-plugin-api';\nimport { catalogIndexRouteRef } from './routes';\n\nexport const orgPlugin = createPlugin({\n  id: 'org',\n  externalRoutes: {\n    catalogIndex: catalogIndexRouteRef,\n  },\n});\n\nexport const EntityGroupProfileCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityGroupProfileCard',\n    component: {\n      lazy: () => import('./components').then(m => m.GroupProfileCard),\n    },\n  }),\n);\nexport const EntityMembersListCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityMembersListCard',\n    component: {\n      lazy: () => import('./components').then(m => m.MembersListCard),\n    },\n  }),\n);\nexport const EntityOwnershipCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityOwnershipCard',\n    component: {\n      lazy: () => import('./components').then(m => m.OwnershipCard),\n    },\n  }),\n);\nexport const EntityUserProfileCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityUserProfileCard',\n    component: {\n      lazy: () => import('./components').then(m => m.UserProfileCard),\n    },\n  }),\n);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  DEFAULT_NAMESPACE,\n  GroupEntity,\n  UserEntity,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  catalogApiRef,\n  entityRouteParams,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport React from 'react';\nimport { generatePath } from 'react-router-dom';\nimport useAsync from 'react-use/lib/useAsync';\n\nimport {\n  Avatar,\n  InfoCard,\n  Progress,\n  ResponseErrorPanel,\n  Link,\n} from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      border: `1px solid ${theme.palette.divider}`,\n      boxShadow: theme.shadows[2],\n      borderRadius: '4px',\n      overflow: 'visible',\n      position: 'relative',\n      margin: theme.spacing(4, 1, 1),\n      flex: '1',\n      minWidth: '0px',\n    },\n  }),\n);\n\nconst MemberComponent = ({ member }: { member: UserEntity }) => {\n  const classes = useStyles();\n  const {\n    metadata: { name: metaName },\n    spec: { profile },\n  } = member;\n  const displayName = profile?.displayName ?? metaName;\n\n  return (\n    <Grid item container xs={12} sm={6} md={4} xl={2}>\n      <Box className={classes.card}>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          m={3}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Avatar\n            displayName={displayName}\n            picture={profile?.picture}\n            customStyles={{\n              position: 'absolute',\n              top: '-2rem',\n            }}\n          />\n          <Box pt={2} textAlign=\"center\">\n            <Typography variant=\"h5\">\n              <Link\n                to={generatePath(\n                  `/catalog/:namespace/user/${metaName}`,\n                  entityRouteParams(member),\n                )}\n              >\n                {displayName}\n              </Link>\n            </Typography>\n            {profile?.email && (\n              <Link to={`mailto:${profile.email}`}>{profile.email}</Link>\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Grid>\n  );\n};\n\nexport const MembersListCard = (_props: {\n  memberDisplayTitle?: string;\n  pageSize?: number;\n}) => {\n  const { entity: groupEntity } = useEntity<GroupEntity>();\n  let { memberDisplayTitle, pageSize } = _props;\n  const {\n    metadata: { name: groupName, namespace: grpNamespace },\n    spec: { profile },\n  } = groupEntity;\n  const catalogApi = useApi(catalogApiRef);\n\n  const displayName = profile?.displayName ?? groupName;\n\n  const groupNamespace = grpNamespace || DEFAULT_NAMESPACE;\n\n  const [page, setPage] = React.useState(1);\n  const pageChange = (_: React.ChangeEvent<unknown>, pageIndex: number) => {\n    setPage(pageIndex);\n  };\n  pageSize = pageSize ? pageSize : 50;\n  memberDisplayTitle = memberDisplayTitle ? memberDisplayTitle : 'Members';\n\n  const {\n    loading,\n    error,\n    value: members,\n  } = useAsync(async () => {\n    const membersList = await catalogApi.getEntities({\n      filter: {\n        kind: 'User',\n        'relations.memberof': [\n          stringifyEntityRef({\n            kind: 'group',\n            namespace: groupNamespace.toLocaleLowerCase('en-US'),\n            name: groupName.toLocaleLowerCase('en-US'),\n          }),\n        ],\n      },\n    });\n\n    return membersList.items as UserEntity[];\n  }, [catalogApi, groupEntity]);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  const nbPages = Math.ceil((members?.length || 0) / pageSize);\n  const paginationLabel = nbPages < 2 ? '' : `, page ${page} of ${nbPages}`;\n\n  const pagination = (\n    <Pagination\n      count={nbPages}\n      page={page}\n      onChange={pageChange}\n      showFirstButton\n      showLastButton\n    />\n  );\n\n  return (\n    <Grid item>\n      <InfoCard\n        title={`${memberDisplayTitle} (${\n          members?.length || 0\n        }${paginationLabel})`}\n        subheader={`of ${displayName}`}\n        {...(nbPages <= 1 ? {} : { actions: pagination })}\n      >\n        <Grid container spacing={3}>\n          {members && members.length > 0 ? (\n            members\n              .slice(pageSize * (page - 1), pageSize * page)\n              .map(member => (\n                <MemberComponent member={member} key={member.metadata.uid} />\n              ))\n          ) : (\n            <Box p={2}>\n              <Typography>\n                This group has no {memberDisplayTitle.toLocaleLowerCase()}.\n              </Typography>\n            </Box>\n          )}\n        </Grid>\n      </InfoCard>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GroupEntity,\n  RELATION_CHILD_OF,\n  RELATION_PARENT_OF,\n  ANNOTATION_LOCATION,\n  stringifyEntityRef,\n  ANNOTATION_EDIT_URL,\n} from '@backstage/catalog-model';\nimport {\n  catalogApiRef,\n  EntityRefLinks,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n} from '@material-ui/core';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { useCallback } from 'react';\nimport {\n  Avatar,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n} from '@backstage/core-components';\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\n\nconst CardTitle = ({ title }: { title: string }) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    <GroupIcon fontSize=\"inherit\" />\n    <Box ml={1}>{title}</Box>\n  </Box>\n);\n\nexport const GroupProfileCard = ({\n  variant,\n}: {\n  variant?: InfoCardVariants;\n}) => {\n  const catalogApi = useApi(catalogApiRef);\n  const alertApi = useApi(alertApiRef);\n  const { entity: group } = useEntity<GroupEntity>();\n\n  const refreshEntity = useCallback(async () => {\n    await catalogApi.refreshEntity(stringifyEntityRef(group));\n    alertApi.post({ message: 'Refresh scheduled', severity: 'info' });\n  }, [catalogApi, alertApi, group]);\n\n  if (!group) {\n    return <Alert severity=\"error\">Group not found</Alert>;\n  }\n\n  const {\n    metadata: { name, description, annotations },\n    spec: { profile },\n  } = group;\n\n  const childRelations = getEntityRelations(group, RELATION_PARENT_OF, {\n    kind: 'Group',\n  });\n  const parentRelations = getEntityRelations(group, RELATION_CHILD_OF, {\n    kind: 'group',\n  });\n\n  const entityLocation = annotations?.[ANNOTATION_LOCATION];\n  const allowRefresh =\n    entityLocation?.startsWith('url:') || entityLocation?.startsWith('file:');\n\n  const entityMetadataEditUrl =\n    group.metadata.annotations?.[ANNOTATION_EDIT_URL];\n\n  const displayName = profile?.displayName ?? name;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : '#';\n  const infoCardAction = entityMetadataEditUrl ? (\n    <IconButton\n      aria-label=\"Edit\"\n      title=\"Edit Metadata\"\n      component={Link}\n      to={entityMetadataEditUrl}\n    >\n      <EditIcon />\n    </IconButton>\n  ) : (\n    <IconButton aria-label=\"Edit\" disabled title=\"Edit Metadata\">\n      <EditIcon />\n    </IconButton>\n  );\n\n  return (\n    <InfoCard\n      title={<CardTitle title={displayName} />}\n      subheader={description}\n      variant={variant}\n      action={\n        <>\n          {allowRefresh && (\n            <IconButton\n              aria-label=\"Refresh\"\n              title=\"Schedule entity refresh\"\n              onClick={refreshEntity}\n            >\n              <CachedIcon />\n            </IconButton>\n          )}\n          {infoCardAction}\n        </>\n      }\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n        <Grid item md={10} xl={11}>\n          <List>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Email\">\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText>\n                  <Link to={emailHref}>{profile.email}</Link>\n                </ListItemText>\n              </ListItem>\n            )}\n\n            {parentRelations.length ? (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Parent Group\">\n                    <AccountTreeIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText>\n                  <EntityRefLinks\n                    entityRefs={parentRelations}\n                    defaultKind=\"Group\"\n                  />\n                </ListItemText>\n              </ListItem>\n            ) : null}\n\n            {childRelations.length ? (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Child Groups\">\n                    <GroupIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText>\n                  <EntityRefLinks\n                    entityRefs={childRelations}\n                    defaultKind=\"Group\"\n                  />\n                </ListItemText>\n              </ListItem>\n            ) : null}\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RELATION_MEMBER_OF, UserEntity } from '@backstage/catalog-model';\nimport {\n  EntityRefLinks,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n} from '@material-ui/core';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Alert from '@material-ui/lab/Alert';\nimport React from 'react';\nimport {\n  Avatar,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n} from '@backstage/core-components';\n\nconst CardTitle = ({ title }: { title?: string }) =>\n  title ? (\n    <Box display=\"flex\" alignItems=\"center\">\n      <PersonIcon fontSize=\"inherit\" />\n      <Box ml={1}>{title}</Box>\n    </Box>\n  ) : null;\n\nexport const UserProfileCard = ({\n  variant,\n}: {\n  variant?: InfoCardVariants;\n}) => {\n  const { entity: user } = useEntity<UserEntity>();\n  if (!user) {\n    return <Alert severity=\"error\">User not found</Alert>;\n  }\n\n  const {\n    metadata: { name: metaName, description },\n    spec: { profile },\n  } = user;\n  const displayName = profile?.displayName ?? metaName;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : undefined;\n  const memberOfRelations = getEntityRelations(user, RELATION_MEMBER_OF, {\n    kind: 'Group',\n  });\n\n  return (\n    <InfoCard\n      title={<CardTitle title={displayName} />}\n      subheader={description}\n      variant={variant}\n    >\n      <Grid container spacing={3} alignItems=\"flex-start\">\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n\n        <Grid item md={10} xl={11}>\n          <List>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Email\">\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText>\n                  <Link to={emailHref ?? ''}>{profile.email}</Link>\n                </ListItemText>\n              </ListItem>\n            )}\n\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Member of\">\n                  <GroupIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText>\n                <EntityRefLinks\n                  entityRefs={memberOfRelations}\n                  defaultKind=\"Group\"\n                />\n              </ListItemText>\n            </ListItem>\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, UserEntity } from '@backstage/catalog-model';\nimport {\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  Progress,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport {\n  catalogApiRef,\n  humanizeEntityRef,\n  isOwnerOf,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport { BackstageTheme } from '@backstage/theme';\nimport {\n  Box,\n  createStyles,\n  Grid,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport qs from 'qs';\nimport React from 'react';\nimport pluralize from 'pluralize';\nimport useAsync from 'react-use/lib/useAsync';\nimport { catalogIndexRouteRef } from '../../../routes';\n\ntype EntityTypeProps = {\n  kind: string;\n  type: string;\n  count: number;\n};\n\nconst useStyles = makeStyles((theme: BackstageTheme) =>\n  createStyles({\n    card: {\n      border: `1px solid ${theme.palette.divider}`,\n      boxShadow: theme.shadows[2],\n      borderRadius: '4px',\n      padding: theme.spacing(2),\n      color: '#fff',\n      transition: `${theme.transitions.duration.standard}ms`,\n      '&:hover': {\n        boxShadow: theme.shadows[4],\n      },\n    },\n    bold: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    entityTypeBox: {\n      background: (props: { type: string }) =>\n        theme.getPageTheme({ themeId: props.type }).backgroundImage,\n    },\n  }),\n);\n\nconst EntityCountTile = ({\n  counter,\n  type,\n  name,\n  url,\n}: {\n  counter: number;\n  type: string;\n  name: string;\n  url: string;\n}) => {\n  const classes = useStyles({ type });\n\n  return (\n    <Link to={url} variant=\"body2\">\n      <Box\n        className={`${classes.card} ${classes.entityTypeBox}`}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <Typography className={classes.bold} variant=\"h6\">\n          {counter}\n        </Typography>\n        <Typography className={classes.bold} variant=\"h6\">\n          {pluralize(name, counter)}\n        </Typography>\n      </Box>\n    </Link>\n  );\n};\n\nconst getQueryParams = (\n  owner: Entity,\n  selectedEntity: EntityTypeProps,\n): string => {\n  const ownerName = humanizeEntityRef(owner, { defaultKind: 'group' });\n  const { kind, type } = selectedEntity;\n  const filters = {\n    kind,\n    type,\n    owners: [ownerName],\n    user: 'all',\n  };\n  if (owner.kind === 'User') {\n    const user = owner as UserEntity;\n    filters.owners = [...filters.owners, ...(user.spec.memberOf ?? [])];\n  }\n  const queryParams = qs.stringify(\n    {\n      filters,\n    },\n    {\n      arrayFormat: 'repeat',\n    },\n  );\n\n  return queryParams;\n};\n\nexport const OwnershipCard = ({\n  variant,\n  entityFilterKind,\n}: {\n  variant?: InfoCardVariants;\n  entityFilterKind?: string[];\n}) => {\n  const { entity } = useEntity();\n  const catalogApi = useApi(catalogApiRef);\n  const catalogLink = useRouteRef(catalogIndexRouteRef);\n\n  const {\n    loading,\n    error,\n    value: componentsWithCounters,\n  } = useAsync(async () => {\n    const kinds = entityFilterKind ?? ['Component', 'API'];\n    const entitiesList = await catalogApi.getEntities({\n      filter: {\n        kind: kinds,\n      },\n      fields: [\n        'kind',\n        'metadata.name',\n        'metadata.namespace',\n        'spec.type',\n        'relations',\n      ],\n    });\n\n    const ownedEntitiesList = entitiesList.items.filter(component =>\n      isOwnerOf(entity, component),\n    );\n\n    const counts = ownedEntitiesList.reduce(\n      (acc: EntityTypeProps[], ownedEntity) => {\n        const match = acc.find(\n          x =>\n            x.kind === ownedEntity.kind &&\n            x.type === (ownedEntity.spec?.type ?? ownedEntity.kind),\n        );\n        if (match) {\n          match.count += 1;\n        } else {\n          acc.push({\n            kind: ownedEntity.kind,\n            type: ownedEntity.spec?.type?.toString() ?? ownedEntity.kind,\n            count: 1,\n          });\n        }\n        return acc;\n      },\n      [],\n    );\n\n    // Return top N (six) entities to be displayed in ownership boxes\n    const topN = counts.sort((a, b) => b.count - a.count).slice(0, 6);\n\n    return topN.map(topOwnedEntity => ({\n      counter: topOwnedEntity.count,\n      type: topOwnedEntity.type,\n      name: topOwnedEntity.type.toLocaleUpperCase('en-US'),\n      queryParams: getQueryParams(entity, topOwnedEntity),\n    })) as Array<{\n      counter: number;\n      type: string;\n      name: string;\n      queryParams: string;\n    }>;\n  }, [catalogApi, entity]);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  return (\n    <InfoCard title=\"Ownership\" variant={variant}>\n      <Grid container>\n        {componentsWithCounters?.map(c => (\n          <Grid item xs={6} md={6} lg={4} key={c.name}>\n            <EntityCountTile\n              counter={c.counter}\n              type={c.type}\n              name={c.name}\n              url={`${catalogLink()}/?${c.queryParams}`}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </InfoCard>\n  );\n};\n"],"names":["useStyles","CardTitle"],"mappings":"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"}