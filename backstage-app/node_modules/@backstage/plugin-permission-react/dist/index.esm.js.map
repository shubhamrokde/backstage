{"version":3,"file":"index.esm.js","sources":["../src/apis/PermissionApi.ts","../src/apis/IdentityPermissionApi.ts","../src/hooks/usePermission.ts","../src/components/PermissionedRoute.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthorizeQuery,\n  AuthorizeDecision,\n} from '@backstage/plugin-permission-common';\nimport { ApiRef, createApiRef } from '@backstage/core-plugin-api';\n\n/**\n * This API is used by various frontend utilities that allow developers to implement authorization within their frontend\n * plugins. A plugin developer will likely not have to interact with this API or its implementations directly, but\n * rather with the aforementioned utility components/hooks.\n * @public\n */\nexport type PermissionApi = {\n  authorize(request: AuthorizeQuery): Promise<AuthorizeDecision>;\n};\n\n/**\n * A Backstage ApiRef for the Permission API. See https://backstage.io/docs/api/utility-apis for more information on\n * Backstage ApiRefs.\n * @public\n */\nexport const permissionApiRef: ApiRef<PermissionApi> = createApiRef({\n  id: 'plugin.permission.api',\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiscoveryApi, IdentityApi } from '@backstage/core-plugin-api';\nimport { PermissionApi } from './PermissionApi';\nimport {\n  AuthorizeQuery,\n  AuthorizeDecision,\n  PermissionClient,\n} from '@backstage/plugin-permission-common';\nimport { Config } from '@backstage/config';\n\n/**\n * The default implementation of the PermissionApi, which simply calls the authorize method of the given\n * {@link @backstage/plugin-permission-common#PermissionClient}.\n * @public\n */\nexport class IdentityPermissionApi implements PermissionApi {\n  private constructor(\n    private readonly permissionClient: PermissionClient,\n    private readonly identityApi: IdentityApi,\n  ) {}\n\n  static create(options: {\n    config: Config;\n    discovery: DiscoveryApi;\n    identity: IdentityApi;\n  }) {\n    const { config, discovery, identity } = options;\n    const permissionClient = new PermissionClient({ discovery, config });\n    return new IdentityPermissionApi(permissionClient, identity);\n  }\n\n  async authorize(request: AuthorizeQuery): Promise<AuthorizeDecision> {\n    const response = await this.permissionClient.authorize(\n      [request],\n      await this.identityApi.getCredentials(),\n    );\n    return response[0];\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useApi } from '@backstage/core-plugin-api';\nimport { permissionApiRef } from '../apis';\nimport {\n  AuthorizeResult,\n  Permission,\n} from '@backstage/plugin-permission-common';\nimport useSWR from 'swr';\n\n/** @public */\nexport type AsyncPermissionResult = {\n  loading: boolean;\n  allowed: boolean;\n  error?: Error;\n};\n\n/**\n * React hook utility for authorization. Given a\n * {@link @backstage/plugin-permission-common#Permission} and an optional\n * resourceRef, it will return whether or not access is allowed (for the given\n * resource, if resourceRef is provided). See\n * {@link @backstage/plugin-permission-common/PermissionClient#authorize} for\n * more details.\n *\n * Note: This hook uses stale-while-revalidate to help avoid flicker in UI\n * elements that would be conditionally rendered based on the `allowed` result\n * of this hook.\n * @public\n */\nexport const usePermission = (\n  permission: Permission,\n  resourceRef?: string,\n): AsyncPermissionResult => {\n  const permissionApi = useApi(permissionApiRef);\n  const { data, error } = useSWR({ permission, resourceRef }, async args => {\n    const { result } = await permissionApi.authorize(args);\n    return result;\n  });\n\n  if (error) {\n    return { error, loading: false, allowed: false };\n  }\n  if (data === undefined) {\n    return { loading: true, allowed: false };\n  }\n  return { loading: false, allowed: data === AuthorizeResult.ALLOW };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ComponentProps, ReactElement } from 'react';\nimport { Route } from 'react-router';\nimport { useApp } from '@backstage/core-plugin-api';\nimport { usePermission } from '../hooks';\nimport { Permission } from '@backstage/plugin-permission-common';\n\n/**\n * Returns a React Router Route which only renders the element when authorized. If unauthorized, the Route will render a\n * NotFoundErrorPage (see {@link @backstage/core-app-api#AppComponents}).\n *\n * @public\n */\nexport const PermissionedRoute = (\n  props: ComponentProps<typeof Route> & {\n    permission: Permission;\n    resourceRef?: string;\n    errorComponent?: ReactElement | null;\n  },\n) => {\n  const { permission, resourceRef, errorComponent, ...otherProps } = props;\n  const permissionResult = usePermission(permission, resourceRef);\n  const app = useApp();\n  const { NotFoundErrorPage } = app.getComponents();\n\n  let shownElement: ReactElement | null | undefined =\n    errorComponent === undefined ? <NotFoundErrorPage /> : errorComponent;\n\n  if (permissionResult.loading) {\n    shownElement = null;\n  } else if (permissionResult.allowed) {\n    shownElement = props.element;\n  }\n\n  return <Route {...otherProps} element={shownElement} />;\n};\n"],"names":[],"mappings":";;;;;;AAqCO,MAAM,mBAA0C,YAAa,CAAA;AAAA,EAClE,EAAI,EAAA,uBAAA;AAAA,CAAA;;ACRsD,MAAA,qBAAA,CAAA;AAAA,EAClD,WAAA,CACW,kBACA,WACjB,EAAA;AAFiB,IAAA,IAAA,CAAA,gBAAA,GAAA,gBAAA,CAAA;AACA,IAAA,IAAA,CAAA,WAAA,GAAA,WAAA,CAAA;AAAA,GAAA;AAAA,EAAA,OAGZ,OAAO,OAIX,EAAA;AACD,IAAM,MAAA,EAAE,MAAQ,EAAA,SAAA,EAAW,QAAa,EAAA,GAAA,OAAA,CAAA;AACxC,IAAA,MAAM,gBAAmB,GAAA,IAAI,gBAAiB,CAAA,EAAE,SAAW,EAAA,MAAA,EAAA,CAAA,CAAA;AAC3D,IAAO,OAAA,IAAI,sBAAsB,gBAAkB,EAAA,QAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAAA,MAG/C,UAAU,OAAqD,EAAA;AACnE,IAAM,MAAA,QAAA,GAAW,MAAM,IAAK,CAAA,gBAAA,CAAiB,UAC3C,CAAC,OAAA,CAAA,EACD,MAAM,IAAA,CAAK,WAAY,CAAA,cAAA,EAAA,CAAA,CAAA;AAEzB,IAAA,OAAO,QAAS,CAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA;;ACPP,MAAA,aAAA,GAAgB,CAC3B,UAAA,EACA,WAC0B,KAAA;AAC1B,EAAA,MAAM,gBAAgB,MAAO,CAAA,gBAAA,CAAA,CAAA;AAC7B,EAAM,MAAA,EAAE,MAAM,KAAU,EAAA,GAAA,MAAA,CAAO,EAAE,UAAY,EAAA,WAAA,EAAA,EAAe,OAAM,IAAQ,KAAA;AACxE,IAAA,MAAM,EAAE,MAAA,EAAA,GAAW,MAAM,aAAA,CAAc,SAAU,CAAA,IAAA,CAAA,CAAA;AACjD,IAAO,OAAA,MAAA,CAAA;AAAA,GAAA,CAAA,CAAA;AAGT,EAAA,IAAI,KAAO,EAAA;AACT,IAAA,OAAO,EAAE,KAAA,EAAO,OAAS,EAAA,KAAA,EAAO,OAAS,EAAA,KAAA,EAAA,CAAA;AAAA,GAAA;AAE3C,EAAA,IAAI,SAAS,KAAW,CAAA,EAAA;AACtB,IAAO,OAAA,EAAE,OAAS,EAAA,IAAA,EAAM,OAAS,EAAA,KAAA,EAAA,CAAA;AAAA,GAAA;AAEnC,EAAA,OAAO,EAAE,OAAA,EAAS,KAAO,EAAA,OAAA,EAAS,SAAS,eAAgB,CAAA,KAAA,EAAA,CAAA;AAAA;;AChChD,MAAA,iBAAA,GAAoB,CAC/B,KAKG,KAAA;AACH,EAAA,MAAM,EAAE,UAAA,EAAY,WAAa,EAAA,cAAA,EAAA,GAAmB,UAAe,EAAA,GAAA,KAAA,CAAA;AACnE,EAAM,MAAA,gBAAA,GAAmB,cAAc,UAAY,EAAA,WAAA,CAAA,CAAA;AACnD,EAAA,MAAM,GAAM,GAAA,MAAA,EAAA,CAAA;AACZ,EAAM,MAAA,EAAE,sBAAsB,GAAI,CAAA,aAAA,EAAA,CAAA;AAElC,EAAA,IAAI,YACF,GAAA,cAAA,KAAmB,KAAY,CAAA,mBAAA,KAAA,CAAA,aAAA,CAAC,mBAAD,IAAwB,CAAA,GAAA,cAAA,CAAA;AAEzD,EAAA,IAAI,iBAAiB,OAAS,EAAA;AAC5B,IAAe,YAAA,GAAA,IAAA,CAAA;AAAA,GAAA,MAAA,IACN,iBAAiB,OAAS,EAAA;AACnC,IAAA,YAAA,GAAe,KAAM,CAAA,OAAA,CAAA;AAAA,GAAA;AAGvB,EAAA,2CAAQ,KAAD,EAAA;AAAA,IAAW,GAAA,UAAA;AAAA,IAAY,OAAS,EAAA,YAAA;AAAA,GAAA,CAAA,CAAA;AAAA;;;;"}