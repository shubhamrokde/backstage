{"version":3,"file":"index.cjs.js","sources":["../src/reader.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonValue, JsonObject } from '@backstage/types';\nimport { AppConfig, Config } from './types';\nimport cloneDeep from 'lodash/cloneDeep';\nimport mergeWith from 'lodash/mergeWith';\n\n// Update the same pattern in config-loader package if this is changed\nconst CONFIG_KEY_PART_PATTERN = /^[a-z][a-z0-9]*(?:[-_][a-z][a-z0-9]*)*$/i;\n\nfunction isObject(value: JsonValue | undefined): value is JsonObject {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction typeOf(value: JsonValue | undefined): string {\n  if (value === null) {\n    return 'null';\n  } else if (Array.isArray(value)) {\n    return 'array';\n  }\n  const type = typeof value;\n  if (type === 'number' && isNaN(value as number)) {\n    return 'nan';\n  }\n  if (type === 'string' && value === '') {\n    return 'empty-string';\n  }\n  return type;\n}\n\n// Separate out a couple of common error messages to reduce bundle size.\nconst errors = {\n  type(key: string, context: string, typeName: string, expected: string) {\n    return `Invalid type in config for key '${key}' in '${context}', got ${typeName}, wanted ${expected}`;\n  },\n  missing(key: string) {\n    return `Missing required config value at '${key}'`;\n  },\n  convert(key: string, context: string, expected: string) {\n    return `Unable to convert config value for key '${key}' in '${context}' to a ${expected}`;\n  },\n};\n\n/**\n * An implementation of the `Config` interface that uses a plain JavaScript object\n * for the backing data, with the ability of linking multiple readers together.\n *\n * @public\n */\nexport class ConfigReader implements Config {\n  /**\n   * A set of key paths that where removed from the config due to not being visible.\n   *\n   * This was added as a mutable private member to avoid changes to the public API.\n   * Its only purpose of this is to warn users of missing visibility when running\n   * the frontend in development mode.\n   */\n  private filteredKeys?: string[];\n  private notifiedFilteredKeys = new Set<string>();\n\n  /**\n   * Instantiates the config reader from a list of application config objects.\n   */\n  static fromConfigs(configs: AppConfig[]): ConfigReader {\n    if (configs.length === 0) {\n      return new ConfigReader(undefined);\n    }\n\n    // Merge together all configs into a single config with recursive fallback\n    // readers, giving the first config object in the array the lowest priority.\n    return configs.reduce<ConfigReader>(\n      (previousReader, { data, context, filteredKeys, deprecatedKeys }) => {\n        const reader = new ConfigReader(data, context, previousReader);\n        reader.filteredKeys = filteredKeys;\n\n        if (deprecatedKeys) {\n          for (const { key, description } of deprecatedKeys) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `The configuration key '${key}' of ${context} is deprecated and may be removed soon. ${\n                description || ''\n              }`,\n            );\n          }\n        }\n\n        return reader;\n      },\n      undefined!,\n    );\n  }\n\n  constructor(\n    private readonly data: JsonObject | undefined,\n    private readonly context: string = 'mock-config',\n    private readonly fallback?: ConfigReader,\n    private readonly prefix: string = '',\n  ) {}\n\n  /** {@inheritdoc Config.has} */\n  has(key: string): boolean {\n    const value = this.readValue(key);\n    if (value !== undefined) {\n      return true;\n    }\n    return this.fallback?.has(key) ?? false;\n  }\n\n  /** {@inheritdoc Config.keys} */\n  keys(): string[] {\n    const localKeys = this.data ? Object.keys(this.data) : [];\n    const fallbackKeys = this.fallback?.keys() ?? [];\n    return [...new Set([...localKeys, ...fallbackKeys])];\n  }\n\n  /** {@inheritdoc Config.get} */\n  get<T = JsonValue>(key?: string): T {\n    const value = this.getOptional(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key ?? '')));\n    }\n    return value as T;\n  }\n\n  /** {@inheritdoc Config.getOptional} */\n  getOptional<T = JsonValue>(key?: string): T | undefined {\n    const value = cloneDeep(this.readValue(key));\n    const fallbackValue = this.fallback?.getOptional<T>(key);\n\n    if (value === undefined) {\n      if (process.env.NODE_ENV === 'development') {\n        if (fallbackValue === undefined && key) {\n          const fullKey = this.fullKey(key);\n          if (\n            this.filteredKeys?.includes(fullKey) &&\n            !this.notifiedFilteredKeys.has(fullKey)\n          ) {\n            this.notifiedFilteredKeys.add(fullKey);\n            // eslint-disable-next-line no-console\n            console.warn(\n              `Failed to read configuration value at '${fullKey}' as it is not visible. ` +\n                'See https://backstage.io/docs/conf/defining#visibility for instructions on how to make it visible.',\n            );\n          }\n        }\n      }\n      return fallbackValue;\n    } else if (fallbackValue === undefined) {\n      return value as T;\n    }\n\n    // Avoid merging arrays and primitive values, since that's how merging works for other\n    // methods for reading config.\n    return mergeWith({}, { value: fallbackValue }, { value }, (into, from) =>\n      !isObject(from) || !isObject(into) ? from : undefined,\n    ).value as T;\n  }\n\n  /** {@inheritdoc Config.getConfig} */\n  getConfig(key: string): ConfigReader {\n    const value = this.getOptionalConfig(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalConfig} */\n  getOptionalConfig(key: string): ConfigReader | undefined {\n    const value = this.readValue(key);\n    const fallbackConfig = this.fallback?.getOptionalConfig(key);\n\n    if (isObject(value)) {\n      return this.copy(value, key, fallbackConfig);\n    }\n    if (value !== undefined) {\n      throw new TypeError(\n        errors.type(this.fullKey(key), this.context, typeOf(value), 'object'),\n      );\n    }\n    return fallbackConfig;\n  }\n\n  /** {@inheritdoc Config.getConfigArray} */\n  getConfigArray(key: string): ConfigReader[] {\n    const value = this.getOptionalConfigArray(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalConfigArray} */\n  getOptionalConfigArray(key: string): ConfigReader[] | undefined {\n    const configs = this.readConfigValue<JsonObject[]>(key, values => {\n      if (!Array.isArray(values)) {\n        return { expected: 'object-array' };\n      }\n\n      for (const [index, value] of values.entries()) {\n        if (!isObject(value)) {\n          return { expected: 'object-array', value, key: `${key}[${index}]` };\n        }\n      }\n      return true;\n    });\n\n    if (!configs) {\n      if (process.env.NODE_ENV === 'development') {\n        const fullKey = this.fullKey(key);\n        if (\n          this.filteredKeys?.some(k => k.startsWith(fullKey)) &&\n          !this.notifiedFilteredKeys.has(key)\n        ) {\n          this.notifiedFilteredKeys.add(key);\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Failed to read configuration array at '${key}' as it does not have any visible elements. ` +\n              'See https://backstage.io/docs/conf/defining#visibility for instructions on how to make it visible.',\n          );\n        }\n      }\n      return undefined;\n    }\n\n    return configs.map((obj, index) => this.copy(obj, `${key}[${index}]`));\n  }\n\n  /** {@inheritdoc Config.getNumber} */\n  getNumber(key: string): number {\n    const value = this.getOptionalNumber(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalNumber} */\n  getOptionalNumber(key: string): number | undefined {\n    const value = this.readConfigValue<string | number>(\n      key,\n      val =>\n        typeof val === 'number' ||\n        typeof val === 'string' || { expected: 'number' },\n    );\n    if (typeof value === 'number' || value === undefined) {\n      return value;\n    }\n    const number = Number(value);\n    if (!Number.isFinite(number)) {\n      throw new Error(\n        errors.convert(this.fullKey(key), this.context, 'number'),\n      );\n    }\n    return number;\n  }\n\n  /** {@inheritdoc Config.getBoolean} */\n  getBoolean(key: string): boolean {\n    const value = this.getOptionalBoolean(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalBoolean} */\n  getOptionalBoolean(key: string): boolean | undefined {\n    return this.readConfigValue(\n      key,\n      value => typeof value === 'boolean' || { expected: 'boolean' },\n    );\n  }\n\n  /** {@inheritdoc Config.getString} */\n  getString(key: string): string {\n    const value = this.getOptionalString(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalString} */\n  getOptionalString(key: string): string | undefined {\n    return this.readConfigValue(\n      key,\n      value =>\n        (typeof value === 'string' && value !== '') || { expected: 'string' },\n    );\n  }\n\n  /** {@inheritdoc Config.getStringArray} */\n  getStringArray(key: string): string[] {\n    const value = this.getOptionalStringArray(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalStringArray} */\n  getOptionalStringArray(key: string): string[] | undefined {\n    return this.readConfigValue(key, values => {\n      if (!Array.isArray(values)) {\n        return { expected: 'string-array' };\n      }\n      for (const [index, value] of values.entries()) {\n        if (typeof value !== 'string' || value === '') {\n          return { expected: 'string-array', value, key: `${key}[${index}]` };\n        }\n      }\n      return true;\n    });\n  }\n\n  private fullKey(key: string): string {\n    return `${this.prefix}${this.prefix ? '.' : ''}${key}`;\n  }\n\n  private copy(data: JsonObject, key: string, fallback?: ConfigReader) {\n    const reader = new ConfigReader(\n      data,\n      this.context,\n      fallback,\n      this.fullKey(key),\n    );\n    reader.filteredKeys = this.filteredKeys;\n    return reader;\n  }\n\n  private readConfigValue<T extends JsonValue>(\n    key: string,\n    validate: (\n      value: JsonValue,\n    ) => { expected: string; value?: JsonValue; key?: string } | true,\n  ): T | undefined {\n    const value = this.readValue(key);\n\n    if (value === undefined) {\n      if (process.env.NODE_ENV === 'development') {\n        const fullKey = this.fullKey(key);\n        if (\n          this.filteredKeys?.includes(fullKey) &&\n          !this.notifiedFilteredKeys.has(fullKey)\n        ) {\n          this.notifiedFilteredKeys.add(fullKey);\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Failed to read configuration value at '${fullKey}' as it is not visible. ` +\n              'See https://backstage.io/docs/conf/defining#visibility for instructions on how to make it visible.',\n          );\n        }\n      }\n\n      return this.fallback?.readConfigValue(key, validate);\n    }\n    const result = validate(value);\n    if (result !== true) {\n      const { key: keyName = key, value: theValue = value, expected } = result;\n      throw new TypeError(\n        errors.type(\n          this.fullKey(keyName),\n          this.context,\n          typeOf(theValue),\n          expected,\n        ),\n      );\n    }\n\n    return value as T;\n  }\n\n  private readValue(key?: string): JsonValue | undefined {\n    const parts = key ? key.split('.') : [];\n    for (const part of parts) {\n      if (!CONFIG_KEY_PART_PATTERN.test(part)) {\n        throw new TypeError(`Invalid config key '${key}'`);\n      }\n    }\n\n    if (this.data === undefined) {\n      return undefined;\n    }\n\n    let value: JsonValue | undefined = this.data;\n    for (const [index, part] of parts.entries()) {\n      if (isObject(value)) {\n        value = value[part];\n      } else if (value !== undefined) {\n        const badKey = this.fullKey(parts.slice(0, index).join('.'));\n        throw new TypeError(\n          errors.type(badKey, this.context, typeOf(value), 'object'),\n        );\n      }\n    }\n\n    return value;\n  }\n}\n"],"names":["cloneDeep","mergeWith"],"mappings":";;;;;;;;;;;;AAsBA,MAAM,uBAA0B,GAAA,0CAAA,CAAA;AAEhC,SAAA,QAAA,CAAkB,KAAmD,EAAA;AACnE,EAAA,OAAO,OAAO,KAAU,KAAA,QAAA,IAAY,UAAU,IAAQ,IAAA,CAAC,MAAM,OAAQ,CAAA,KAAA,CAAA,CAAA;AAAA,CAAA;AAGvE,SAAA,MAAA,CAAgB,KAAsC,EAAA;AACpD,EAAA,IAAI,UAAU,IAAM,EAAA;AAClB,IAAO,OAAA,MAAA,CAAA;AAAA,GACE,MAAA,IAAA,KAAA,CAAM,QAAQ,KAAQ,CAAA,EAAA;AAC/B,IAAO,OAAA,OAAA,CAAA;AAAA,GAAA;AAET,EAAA,MAAM,OAAO,OAAO,KAAA,CAAA;AACpB,EAAI,IAAA,IAAA,KAAS,QAAY,IAAA,KAAA,CAAM,KAAkB,CAAA,EAAA;AAC/C,IAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAET,EAAI,IAAA,IAAA,KAAS,QAAY,IAAA,KAAA,KAAU,EAAI,EAAA;AACrC,IAAO,OAAA,cAAA,CAAA;AAAA,GAAA;AAET,EAAO,OAAA,IAAA,CAAA;AAAA,CAAA;AAIT,MAAM,MAAS,GAAA;AAAA,EACb,IAAK,CAAA,GAAA,EAAa,OAAiB,EAAA,QAAA,EAAkB,QAAkB,EAAA;AACrE,IAAO,OAAA,CAAA,gCAAA,EAAmC,GAAY,CAAA,MAAA,EAAA,OAAA,CAAA,OAAA,EAAiB,QAAoB,CAAA,SAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAE7F,QAAQ,GAAa,EAAA;AACnB,IAAA,OAAO,CAAqC,kCAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAE9C,OAAA,CAAQ,GAAa,EAAA,OAAA,EAAiB,QAAkB,EAAA;AACtD,IAAO,OAAA,CAAA,wCAAA,EAA2C,YAAY,OAAiB,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA,CAAA,CAAA;AAUvC,MAAA,YAAA,CAAA;AAAA,EA2C1C,YACmB,IACA,EAAA,OAAA,GAAkB,aAClB,EAAA,QAAA,EACA,SAAiB,EAClC,EAAA;AAJiB,IAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA;AACA,IAAA,IAAA,CAAA,OAAA,GAAA,OAAA,CAAA;AACA,IAAA,IAAA,CAAA,QAAA,GAAA,QAAA,CAAA;AACA,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA,CAAA;AAtCX,IAAA,IAAA,CAAA,oBAAA,mBAA2B,IAAA,GAAA,EAAA,CAAA;AAAA,GAAA;AAAA,EAAA,OAK5B,YAAY,OAAoC,EAAA;AACrD,IAAI,IAAA,OAAA,CAAQ,WAAW,CAAG,EAAA;AACxB,MAAA,OAAO,IAAI,YAAa,CAAA,KAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAK1B,IAAO,OAAA,OAAA,CAAQ,OACb,CAAC,cAAA,EAAgB,EAAE,IAAM,EAAA,OAAA,EAAS,cAAc,cAAqB,EAAA,KAAA;AACnE,MAAA,MAAM,MAAS,GAAA,IAAI,YAAa,CAAA,IAAA,EAAM,OAAS,EAAA,cAAA,CAAA,CAAA;AAC/C,MAAA,MAAA,CAAO,YAAe,GAAA,YAAA,CAAA;AAEtB,MAAA,IAAI,cAAgB,EAAA;AAClB,QAAW,KAAA,MAAA,EAAE,GAAK,EAAA,WAAA,EAAA,IAAiB,cAAgB,EAAA;AAEjD,UAAA,OAAA,CAAQ,IACN,CAAA,CAAA,uBAAA,EAA0B,GAAW,CAAA,KAAA,EAAA,OAAA,CAAA,wCAAA,EACnC,WAAe,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA;AAMvB,MAAO,OAAA,MAAA,CAAA;AAAA,KAET,EAAA,KAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAYJ,IAAI,GAAsB,EAAA;AAlH5B,IAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAmHI,IAAM,MAAA,KAAA,GAAQ,KAAK,SAAU,CAAA,GAAA,CAAA,CAAA;AAC7B,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAO,OAAA,IAAA,CAAA;AAAA,KAAA;AAET,IAAA,OAAO,CAAK,EAAA,GAAA,CAAA,EAAA,GAAA,IAAA,CAAA,QAAA,KAAL,IAAe,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,CAAI,SAAnB,IAA2B,GAAA,EAAA,GAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAIpC,IAAiB,GAAA;AA3HnB,IAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AA4HI,IAAA,MAAM,YAAY,IAAK,CAAA,IAAA,GAAO,MAAO,CAAA,IAAA,CAAK,KAAK,IAAQ,CAAA,GAAA,EAAA,CAAA;AACvD,IAAA,MAAM,YAAe,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAA,CAAK,QAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,WAAf,IAAyB,GAAA,EAAA,GAAA,EAAA,CAAA;AAC9C,IAAA,OAAO,CAAC,mBAAG,IAAI,IAAI,CAAC,GAAG,WAAW,GAAG,YAAA,CAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAIvC,IAAmB,GAAiB,EAAA;AAClC,IAAM,MAAA,KAAA,GAAQ,KAAK,WAAY,CAAA,GAAA,CAAA,CAAA;AAC/B,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAA,MAAM,IAAI,KAAM,CAAA,MAAA,CAAO,OAAQ,CAAA,IAAA,CAAK,QAAQ,GAAO,IAAA,IAAA,GAAA,GAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAErD,IAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAIT,YAA2B,GAA6B,EAAA;AA3I1D,IAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AA4II,IAAM,MAAA,KAAA,GAAQA,6BAAU,CAAA,IAAA,CAAK,SAAU,CAAA,GAAA,CAAA,CAAA,CAAA;AACvC,IAAA,MAAM,aAAgB,GAAA,CAAA,EAAA,GAAA,IAAA,CAAK,QAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,WAAe,CAAA,GAAA,CAAA,CAAA;AAEpD,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAI,IAAA,OAAA,CAAQ,GAAI,CAAA,QAAA,KAAa,aAAe,EAAA;AAC1C,QAAI,IAAA,aAAA,KAAkB,UAAa,GAAK,EAAA;AACtC,UAAM,MAAA,OAAA,GAAU,KAAK,OAAQ,CAAA,GAAA,CAAA,CAAA;AAC7B,UACE,IAAA,CAAA,CAAA,EAAA,GAAA,IAAA,CAAK,iBAAL,IAAmB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAA,CAAS,aAC5B,CAAC,IAAA,CAAK,oBAAqB,CAAA,GAAA,CAAI,OAC/B,CAAA,EAAA;AACA,YAAA,IAAA,CAAK,qBAAqB,GAAI,CAAA,OAAA,CAAA,CAAA;AAE9B,YAAA,OAAA,CAAQ,KACN,CAA0C,uCAAA,EAAA,OAAA,CAAA,0HAAA,CAAA,CAAA,CAAA;AAAA,WAAA;AAAA,SAAA;AAAA,OAAA;AAMlD,MAAO,OAAA,aAAA,CAAA;AAAA,KAAA,MAAA,IACE,kBAAkB,KAAW,CAAA,EAAA;AACtC,MAAO,OAAA,KAAA,CAAA;AAAA,KAAA;AAKT,IAAA,OAAOC,8BAAU,EAAI,EAAA,EAAE,KAAO,EAAA,aAAA,EAAA,EAAiB,EAAE,KAAS,EAAA,EAAA,CAAC,IAAM,EAAA,IAAA,KAC/D,CAAC,QAAS,CAAA,IAAA,CAAA,IAAS,CAAC,QAAS,CAAA,IAAA,CAAA,GAAQ,OAAO,KAC5C,CAAA,CAAA,CAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAIJ,UAAU,GAA2B,EAAA;AACnC,IAAM,MAAA,KAAA,GAAQ,KAAK,iBAAkB,CAAA,GAAA,CAAA,CAAA;AACrC,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAA,MAAM,IAAI,KAAA,CAAM,MAAO,CAAA,OAAA,CAAQ,KAAK,OAAQ,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAE9C,IAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAIT,kBAAkB,GAAuC,EAAA;AAtL3D,IAAA,IAAA,EAAA,CAAA;AAuLI,IAAM,MAAA,KAAA,GAAQ,KAAK,SAAU,CAAA,GAAA,CAAA,CAAA;AAC7B,IAAA,MAAM,cAAiB,GAAA,CAAA,EAAA,GAAA,IAAA,CAAK,QAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAe,iBAAkB,CAAA,GAAA,CAAA,CAAA;AAExD,IAAA,IAAI,SAAS,KAAQ,CAAA,EAAA;AACnB,MAAO,OAAA,IAAA,CAAK,IAAK,CAAA,KAAA,EAAO,GAAK,EAAA,cAAA,CAAA,CAAA;AAAA,KAAA;AAE/B,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAM,MAAA,IAAI,SACR,CAAA,MAAA,CAAO,IAAK,CAAA,IAAA,CAAK,QAAQ,GAAM,CAAA,EAAA,IAAA,CAAK,OAAS,EAAA,MAAA,CAAO,KAAQ,CAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAGhE,IAAO,OAAA,cAAA,CAAA;AAAA,GAAA;AAAA,EAIT,eAAe,GAA6B,EAAA;AAC1C,IAAM,MAAA,KAAA,GAAQ,KAAK,sBAAuB,CAAA,GAAA,CAAA,CAAA;AAC1C,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAA,MAAM,IAAI,KAAA,CAAM,MAAO,CAAA,OAAA,CAAQ,KAAK,OAAQ,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAE9C,IAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAIT,uBAAuB,GAAyC,EAAA;AA/MlE,IAAA,IAAA,EAAA,CAAA;AAgNI,IAAA,MAAM,OAAU,GAAA,IAAA,CAAK,eAA8B,CAAA,GAAA,EAAK,CAAU,MAAA,KAAA;AAChE,MAAI,IAAA,CAAC,KAAM,CAAA,OAAA,CAAQ,MAAS,CAAA,EAAA;AAC1B,QAAA,OAAO,EAAE,QAAU,EAAA,cAAA,EAAA,CAAA;AAAA,OAAA;AAGrB,MAAA,KAAA,MAAW,CAAC,KAAA,EAAO,KAAU,CAAA,IAAA,MAAA,CAAO,OAAW,EAAA,EAAA;AAC7C,QAAI,IAAA,CAAC,SAAS,KAAQ,CAAA,EAAA;AACpB,UAAA,OAAO,EAAE,QAAU,EAAA,cAAA,EAAgB,KAAO,EAAA,GAAA,EAAK,GAAG,GAAO,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAA,SAAA;AAAA,OAAA;AAG7D,MAAO,OAAA,IAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAGT,IAAA,IAAI,CAAC,OAAS,EAAA;AACZ,MAAI,IAAA,OAAA,CAAQ,GAAI,CAAA,QAAA,KAAa,aAAe,EAAA;AAC1C,QAAM,MAAA,OAAA,GAAU,KAAK,OAAQ,CAAA,GAAA,CAAA,CAAA;AAC7B,QAAA,IACE,CAAK,CAAA,EAAA,GAAA,IAAA,CAAA,YAAA,KAAL,IAAmB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAK,CAAK,CAAA,KAAA,CAAA,CAAE,UAAW,CAAA,OAAA,CAAA,CAAA,KAC1C,CAAC,IAAA,CAAK,oBAAqB,CAAA,GAAA,CAAI,GAC/B,CAAA,EAAA;AACA,UAAA,IAAA,CAAK,qBAAqB,GAAI,CAAA,GAAA,CAAA,CAAA;AAE9B,UAAA,OAAA,CAAQ,KACN,CAA0C,uCAAA,EAAA,GAAA,CAAA,8IAAA,CAAA,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA;AAKhD,MAAO,OAAA,KAAA,CAAA,CAAA;AAAA,KAAA;AAGT,IAAO,OAAA,OAAA,CAAQ,IAAI,CAAC,GAAA,EAAK,UAAU,IAAK,CAAA,IAAA,CAAK,GAAK,EAAA,CAAA,EAAG,GAAO,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAI9D,UAAU,GAAqB,EAAA;AAC7B,IAAM,MAAA,KAAA,GAAQ,KAAK,iBAAkB,CAAA,GAAA,CAAA,CAAA;AACrC,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAA,MAAM,IAAI,KAAA,CAAM,MAAO,CAAA,OAAA,CAAQ,KAAK,OAAQ,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAE9C,IAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAIT,kBAAkB,GAAiC,EAAA;AACjD,IAAA,MAAM,KAAQ,GAAA,IAAA,CAAK,eACjB,CAAA,GAAA,EACA,CACE,GAAA,KAAA,OAAO,GAAQ,KAAA,QAAA,IACf,OAAO,GAAA,KAAQ,QAAY,IAAA,EAAE,QAAU,EAAA,QAAA,EAAA,CAAA,CAAA;AAE3C,IAAA,IAAI,OAAO,KAAA,KAAU,QAAY,IAAA,KAAA,KAAU,KAAW,CAAA,EAAA;AACpD,MAAO,OAAA,KAAA,CAAA;AAAA,KAAA;AAET,IAAA,MAAM,SAAS,MAAO,CAAA,KAAA,CAAA,CAAA;AACtB,IAAI,IAAA,CAAC,MAAO,CAAA,QAAA,CAAS,MAAS,CAAA,EAAA;AAC5B,MAAM,MAAA,IAAI,MACR,MAAO,CAAA,OAAA,CAAQ,KAAK,OAAQ,CAAA,GAAA,CAAA,EAAM,KAAK,OAAS,EAAA,QAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAGpD,IAAO,OAAA,MAAA,CAAA;AAAA,GAAA;AAAA,EAIT,WAAW,GAAsB,EAAA;AAC/B,IAAM,MAAA,KAAA,GAAQ,KAAK,kBAAmB,CAAA,GAAA,CAAA,CAAA;AACtC,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAA,MAAM,IAAI,KAAA,CAAM,MAAO,CAAA,OAAA,CAAQ,KAAK,OAAQ,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAE9C,IAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAIT,mBAAmB,GAAkC,EAAA;AACnD,IAAO,OAAA,IAAA,CAAK,gBACV,GACA,EAAA,CAAA,KAAA,KAAS,OAAO,KAAU,KAAA,SAAA,IAAa,EAAE,QAAU,EAAA,SAAA,EAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAKvD,UAAU,GAAqB,EAAA;AAC7B,IAAM,MAAA,KAAA,GAAQ,KAAK,iBAAkB,CAAA,GAAA,CAAA,CAAA;AACrC,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAA,MAAM,IAAI,KAAA,CAAM,MAAO,CAAA,OAAA,CAAQ,KAAK,OAAQ,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAE9C,IAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAIT,kBAAkB,GAAiC,EAAA;AACjD,IAAO,OAAA,IAAA,CAAK,eACV,CAAA,GAAA,EACA,CACG,KAAA,KAAA,OAAO,UAAU,QAAY,IAAA,KAAA,KAAU,EAAO,IAAA,EAAE,QAAU,EAAA,QAAA,EAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAKjE,eAAe,GAAuB,EAAA;AACpC,IAAM,MAAA,KAAA,GAAQ,KAAK,sBAAuB,CAAA,GAAA,CAAA,CAAA;AAC1C,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAA,MAAM,IAAI,KAAA,CAAM,MAAO,CAAA,OAAA,CAAQ,KAAK,OAAQ,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAE9C,IAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAIT,uBAAuB,GAAmC,EAAA;AACxD,IAAO,OAAA,IAAA,CAAK,eAAgB,CAAA,GAAA,EAAK,CAAU,MAAA,KAAA;AACzC,MAAI,IAAA,CAAC,KAAM,CAAA,OAAA,CAAQ,MAAS,CAAA,EAAA;AAC1B,QAAA,OAAO,EAAE,QAAU,EAAA,cAAA,EAAA,CAAA;AAAA,OAAA;AAErB,MAAA,KAAA,MAAW,CAAC,KAAA,EAAO,KAAU,CAAA,IAAA,MAAA,CAAO,OAAW,EAAA,EAAA;AAC7C,QAAA,IAAI,OAAO,KAAA,KAAU,QAAY,IAAA,KAAA,KAAU,EAAI,EAAA;AAC7C,UAAA,OAAO,EAAE,QAAU,EAAA,cAAA,EAAgB,KAAO,EAAA,GAAA,EAAK,GAAG,GAAO,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAA,SAAA;AAAA,OAAA;AAG7D,MAAO,OAAA,IAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAIH,QAAQ,GAAqB,EAAA;AACnC,IAAA,OAAO,GAAG,IAAK,CAAA,MAAA,CAAA,EAAS,IAAK,CAAA,MAAA,GAAS,MAAM,EAAK,CAAA,EAAA,GAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAG3C,IAAA,CAAK,IAAkB,EAAA,GAAA,EAAa,QAAyB,EAAA;AACnE,IAAM,MAAA,MAAA,GAAS,IAAI,YACjB,CAAA,IAAA,EACA,KAAK,OACL,EAAA,QAAA,EACA,KAAK,OAAQ,CAAA,GAAA,CAAA,CAAA,CAAA;AAEf,IAAA,MAAA,CAAO,eAAe,IAAK,CAAA,YAAA,CAAA;AAC3B,IAAO,OAAA,MAAA,CAAA;AAAA,GAAA;AAAA,EAGD,eAAA,CACN,KACA,QAGe,EAAA;AA9VnB,IAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AA+VI,IAAM,MAAA,KAAA,GAAQ,KAAK,SAAU,CAAA,GAAA,CAAA,CAAA;AAE7B,IAAA,IAAI,UAAU,KAAW,CAAA,EAAA;AACvB,MAAI,IAAA,OAAA,CAAQ,GAAI,CAAA,QAAA,KAAa,aAAe,EAAA;AAC1C,QAAM,MAAA,OAAA,GAAU,KAAK,OAAQ,CAAA,GAAA,CAAA,CAAA;AAC7B,QACE,IAAA,CAAA,CAAA,EAAA,GAAA,IAAA,CAAK,iBAAL,IAAmB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAA,CAAS,aAC5B,CAAC,IAAA,CAAK,oBAAqB,CAAA,GAAA,CAAI,OAC/B,CAAA,EAAA;AACA,UAAA,IAAA,CAAK,qBAAqB,GAAI,CAAA,OAAA,CAAA,CAAA;AAE9B,UAAA,OAAA,CAAQ,KACN,CAA0C,uCAAA,EAAA,OAAA,CAAA,0HAAA,CAAA,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA;AAMhD,MAAA,OAAO,CAAK,EAAA,GAAA,IAAA,CAAA,QAAA,KAAL,IAAe,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,eAAA,CAAgB,GAAK,EAAA,QAAA,CAAA,CAAA;AAAA,KAAA;AAE7C,IAAA,MAAM,SAAS,QAAS,CAAA,KAAA,CAAA,CAAA;AACxB,IAAA,IAAI,WAAW,IAAM,EAAA;AACnB,MAAA,MAAM,EAAE,GAAK,EAAA,OAAA,GAAU,KAAK,KAAO,EAAA,QAAA,GAAW,OAAO,QAAa,EAAA,GAAA,MAAA,CAAA;AAClE,MAAM,MAAA,IAAI,SACR,CAAA,MAAA,CAAO,IACL,CAAA,IAAA,CAAK,QAAQ,OACb,CAAA,EAAA,IAAA,CAAK,OACL,EAAA,MAAA,CAAO,QACP,CAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AAAA,KAAA;AAKN,IAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAGD,UAAU,GAAqC,EAAA;AACrD,IAAA,MAAM,KAAQ,GAAA,GAAA,GAAM,GAAI,CAAA,KAAA,CAAM,GAAO,CAAA,GAAA,EAAA,CAAA;AACrC,IAAA,KAAA,MAAW,QAAQ,KAAO,EAAA;AACxB,MAAI,IAAA,CAAC,uBAAwB,CAAA,IAAA,CAAK,IAAO,CAAA,EAAA;AACvC,QAAM,MAAA,IAAI,UAAU,CAAuB,oBAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,OAAA;AAAA,KAAA;AAI/C,IAAI,IAAA,IAAA,CAAK,SAAS,KAAW,CAAA,EAAA;AAC3B,MAAO,OAAA,KAAA,CAAA,CAAA;AAAA,KAAA;AAGT,IAAA,IAAI,QAA+B,IAAK,CAAA,IAAA,CAAA;AACxC,IAAA,KAAA,MAAW,CAAC,KAAA,EAAO,IAAS,CAAA,IAAA,KAAA,CAAM,OAAW,EAAA,EAAA;AAC3C,MAAA,IAAI,SAAS,KAAQ,CAAA,EAAA;AACnB,QAAA,KAAA,GAAQ,KAAM,CAAA,IAAA,CAAA,CAAA;AAAA,OAAA,MAAA,IACL,UAAU,KAAW,CAAA,EAAA;AAC9B,QAAA,MAAM,SAAS,IAAK,CAAA,OAAA,CAAQ,MAAM,KAAM,CAAA,CAAA,EAAG,OAAO,IAAK,CAAA,GAAA,CAAA,CAAA,CAAA;AACvD,QAAM,MAAA,IAAI,UACR,MAAO,CAAA,IAAA,CAAK,QAAQ,IAAK,CAAA,OAAA,EAAS,OAAO,KAAQ,CAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AAAA,OAAA;AAAA,KAAA;AAKvD,IAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAAA;;;;"}