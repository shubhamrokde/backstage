{"version":3,"file":"index.esm.js","sources":["../src/api/CatalogImportApi.ts","../src/api/GitHub.ts","../src/components/helpers.ts","../src/api/CatalogImportClient.ts","../src/plugin.ts","../src/hooks/useCatalogFilename.ts","../src/components/ImportInfoCard/ImportInfoCard.tsx","../src/components/useImportState.ts","../src/components/Buttons/index.tsx","../src/components/EntityListComponent/EntityListComponent.tsx","../src/components/StepFinishImportLocation/StepFinishImportLocation.tsx","../src/components/StepInitAnalyzeUrl/StepInitAnalyzeUrl.tsx","../src/components/StepPrepareCreatePullRequest/AutocompleteTextField.tsx","../src/components/StepPrepareCreatePullRequest/PreparePullRequestForm.tsx","../src/components/StepPrepareCreatePullRequest/PreviewCatalogInfoComponent.tsx","../src/components/StepPrepareCreatePullRequest/PreviewPullRequestComponent.tsx","../src/components/StepPrepareCreatePullRequest/StepPrepareCreatePullRequest.tsx","../src/components/StepPrepareSelectLocations/StepPrepareSelectLocations.tsx","../src/components/StepReviewLocation/StepReviewLocation.tsx","../src/components/ImportStepper/defaults.tsx","../src/components/ImportStepper/ImportStepper.tsx","../src/components/DefaultImportPage/DefaultImportPage.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport { createApiRef } from '@backstage/core-plugin-api';\nimport { PartialEntity } from '../types';\n\n/**\n * Utility API reference for the {@link CatalogImportApi}.\n *\n * @public\n */\nexport const catalogImportApiRef = createApiRef<CatalogImportApi>({\n  id: 'plugin.catalog-import.service',\n});\n\n/**\n * Result of the analysis.\n *\n * @public\n */\nexport type AnalyzeResult =\n  | {\n      type: 'locations';\n      locations: Array<{\n        target: string;\n        exists?: boolean;\n        entities: CompoundEntityRef[];\n      }>;\n    }\n  | {\n      type: 'repository';\n      url: string;\n      integrationType: string;\n      generatedEntities: PartialEntity[];\n    };\n\n/**\n * API for driving catalog imports.\n *\n * @public\n */\nexport interface CatalogImportApi {\n  analyzeUrl(url: string): Promise<AnalyzeResult>;\n\n  preparePullRequest?(): Promise<{\n    title: string;\n    body: string;\n  }>;\n\n  submitPullRequest(options: {\n    repositoryUrl: string;\n    fileContent: string;\n    title: string;\n    body: string;\n  }): Promise<{ link: string; location: string }>;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScmIntegrationRegistry } from '@backstage/integration';\nimport parseGitUrl from 'git-url-parse';\n\nexport const getGithubIntegrationConfig = (\n  scmIntegrationsApi: ScmIntegrationRegistry,\n  location: string,\n) => {\n  const integration = scmIntegrationsApi.github.byUrl(location);\n  if (!integration) {\n    return undefined;\n  }\n\n  const { name: repo, owner } = parseGitUrl(location);\n  return {\n    repo,\n    owner,\n    githubIntegrationConfig: integration.config,\n  };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Config } from '@backstage/config';\nimport { UseFormRegisterReturn } from 'react-hook-form';\n\n/**\n * A helper that converts the result of a render('name', opts) to make it compatible with material-ui.\n *\n * See also https://github.com/react-hook-form/react-hook-form/issues/4629#issuecomment-815840872\n * TODO: remove when updating to material-ui v5 (https://github.com/mui-org/material-ui/pull/23174)\n *\n * @param renderResult - the result of a render('name', opts)\n */\nexport function asInputRef(renderResult: UseFormRegisterReturn) {\n  const { ref, ...rest } = renderResult;\n  return {\n    inputRef: ref,\n    ...rest,\n  };\n}\n\nexport function getCatalogFilename(config: Config): string {\n  return (\n    config.getOptionalString('catalog.import.entityFilename') ??\n    'catalog-info.yaml'\n  );\n}\n\nexport function getBranchName(config: Config): string {\n  return (\n    config.getOptionalString('catalog.import.pullRequestBranchName') ??\n    'backstage-integration'\n  );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport {\n  ConfigApi,\n  DiscoveryApi,\n  IdentityApi,\n} from '@backstage/core-plugin-api';\nimport {\n  GitHubIntegrationConfig,\n  ScmIntegrationRegistry,\n} from '@backstage/integration';\nimport { ScmAuthApi } from '@backstage/integration-react';\nimport { Octokit } from '@octokit/rest';\nimport { Base64 } from 'js-base64';\nimport { PartialEntity } from '../types';\nimport { AnalyzeResult, CatalogImportApi } from './CatalogImportApi';\nimport { getGithubIntegrationConfig } from './GitHub';\nimport { trimEnd } from 'lodash';\nimport { getBranchName, getCatalogFilename } from '../components/helpers';\n\n/**\n * The default implementation of the {@link CatalogImportApi}.\n *\n * @public\n */\nexport class CatalogImportClient implements CatalogImportApi {\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly identityApi: IdentityApi;\n  private readonly scmAuthApi: ScmAuthApi;\n  private readonly scmIntegrationsApi: ScmIntegrationRegistry;\n  private readonly catalogApi: CatalogApi;\n  private readonly configApi: ConfigApi;\n\n  constructor(options: {\n    discoveryApi: DiscoveryApi;\n    scmAuthApi: ScmAuthApi;\n    identityApi: IdentityApi;\n    scmIntegrationsApi: ScmIntegrationRegistry;\n    catalogApi: CatalogApi;\n    configApi: ConfigApi;\n  }) {\n    this.discoveryApi = options.discoveryApi;\n    this.scmAuthApi = options.scmAuthApi;\n    this.identityApi = options.identityApi;\n    this.scmIntegrationsApi = options.scmIntegrationsApi;\n    this.catalogApi = options.catalogApi;\n    this.configApi = options.configApi;\n  }\n\n  async analyzeUrl(url: string): Promise<AnalyzeResult> {\n    if (\n      new URL(url).pathname.match(/\\.ya?ml$/) ||\n      new URL(url).searchParams.get('path')?.match(/.ya?ml$/)\n    ) {\n      const location = await this.catalogApi.addLocation({\n        type: 'url',\n        target: url,\n        dryRun: true,\n      });\n\n      return {\n        type: 'locations',\n        locations: [\n          {\n            exists: location.exists,\n            target: location.location.target,\n            entities: location.entities.map(e => ({\n              kind: e.kind,\n              namespace: e.metadata.namespace ?? 'default',\n              name: e.metadata.name,\n            })),\n          },\n        ],\n      };\n    }\n\n    const ghConfig = getGithubIntegrationConfig(this.scmIntegrationsApi, url);\n    if (!ghConfig) {\n      const other = this.scmIntegrationsApi.byUrl(url);\n      const catalogFilename = getCatalogFilename(this.configApi);\n\n      if (other) {\n        throw new Error(\n          `The ${other.title} integration only supports full URLs to ${catalogFilename} files. Did you try to pass in the URL of a directory instead?`,\n        );\n      }\n      throw new Error(\n        `This URL was not recognized as a valid GitHub URL because there was no configured integration that matched the given host name. You could try to paste the full URL to a ${catalogFilename} file instead.`,\n      );\n    }\n\n    // TODO: this could be part of the analyze-location endpoint\n    const locations = await this.checkGitHubForExistingCatalogInfo({\n      ...ghConfig,\n      url,\n    });\n\n    if (locations.length > 0) {\n      return {\n        type: 'locations',\n        locations,\n      };\n    }\n\n    return {\n      type: 'repository',\n      integrationType: 'github',\n      url: url,\n      generatedEntities: await this.generateEntityDefinitions({\n        repo: url,\n      }),\n    };\n  }\n\n  async preparePullRequest(): Promise<{\n    title: string;\n    body: string;\n  }> {\n    const appTitle =\n      this.configApi.getOptionalString('app.title') ?? 'Backstage';\n    const appBaseUrl = this.configApi.getString('app.baseUrl');\n    const catalogFilename = getCatalogFilename(this.configApi);\n\n    return {\n      title: `Add ${catalogFilename} config file`,\n      body: `This pull request adds a **Backstage entity metadata file** \\\nto this repository so that the component can be added to the \\\n[${appTitle} software catalog](${appBaseUrl}).\\n\\nAfter this pull request is merged, \\\nthe component will become available.\\n\\nFor more information, read an \\\n[overview of the Backstage software catalog](https://backstage.io/docs/features/software-catalog/software-catalog-overview).`,\n    };\n  }\n\n  async submitPullRequest(options: {\n    repositoryUrl: string;\n    fileContent: string;\n    title: string;\n    body: string;\n  }): Promise<{ link: string; location: string }> {\n    const { repositoryUrl, fileContent, title, body } = options;\n\n    const ghConfig = getGithubIntegrationConfig(\n      this.scmIntegrationsApi,\n      repositoryUrl,\n    );\n\n    if (ghConfig) {\n      return await this.submitGitHubPrToRepo({\n        ...ghConfig,\n        repositoryUrl,\n        fileContent,\n        title,\n        body,\n      });\n    }\n\n    throw new Error('unimplemented!');\n  }\n\n  // TODO: this could be part of the catalog api\n  private async generateEntityDefinitions(options: {\n    repo: string;\n  }): Promise<PartialEntity[]> {\n    const { token } = await this.identityApi.getCredentials();\n    const response = await fetch(\n      `${await this.discoveryApi.getBaseUrl('catalog')}/analyze-location`,\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && { Authorization: `Bearer ${token}` }),\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          location: { type: 'url', target: options.repo },\n        }),\n      },\n    ).catch(e => {\n      throw new Error(`Failed to generate entity definitions, ${e.message}`);\n    });\n    if (!response.ok) {\n      throw new Error(\n        `Failed to generate entity definitions. Received http response ${response.status}: ${response.statusText}`,\n      );\n    }\n\n    const payload = await response.json();\n    return payload.generateEntities.map((x: any) => x.entity);\n  }\n\n  // TODO: this response should better be part of the analyze-locations response and scm-independent / implemented per scm\n  private async checkGitHubForExistingCatalogInfo(options: {\n    url: string;\n    owner: string;\n    repo: string;\n    githubIntegrationConfig: GitHubIntegrationConfig;\n  }): Promise<\n    Array<{\n      target: string;\n      entities: CompoundEntityRef[];\n    }>\n  > {\n    const { url, owner, repo, githubIntegrationConfig } = options;\n\n    const { token } = await this.scmAuthApi.getCredentials({ url });\n    const octo = new Octokit({\n      auth: token,\n      baseUrl: githubIntegrationConfig.apiBaseUrl,\n    });\n    const catalogFilename = getCatalogFilename(this.configApi);\n    const query = `repo:${owner}/${repo}+filename:${catalogFilename}`;\n\n    const searchResult = await octo.search.code({ q: query }).catch(e => {\n      throw new Error(\n        formatHttpErrorMessage(\n          \"Couldn't search repository for metadata file.\",\n          e,\n        ),\n      );\n    });\n    const exists = searchResult.data.total_count > 0;\n    if (exists) {\n      const repoInformation = await octo.repos.get({ owner, repo }).catch(e => {\n        throw new Error(formatHttpErrorMessage(\"Couldn't fetch repo data\", e));\n      });\n      const defaultBranch = repoInformation.data.default_branch;\n\n      return await Promise.all(\n        searchResult.data.items\n          .map(i => `${trimEnd(url, '/')}/blob/${defaultBranch}/${i.path}`)\n          .map(async target => {\n            const result = await this.catalogApi.addLocation({\n              type: 'url',\n              target,\n              dryRun: true,\n            });\n            return {\n              target,\n              exists: result.exists,\n              entities: result.entities.map(e => ({\n                kind: e.kind,\n                namespace: e.metadata.namespace ?? 'default',\n                name: e.metadata.name,\n              })),\n            };\n          }),\n      );\n    }\n\n    return [];\n  }\n\n  // TODO: extract this function and implement for non-github\n  private async submitGitHubPrToRepo(options: {\n    owner: string;\n    repo: string;\n    title: string;\n    body: string;\n    fileContent: string;\n    repositoryUrl: string;\n    githubIntegrationConfig: GitHubIntegrationConfig;\n  }): Promise<{ link: string; location: string }> {\n    const {\n      owner,\n      repo,\n      title,\n      body,\n      fileContent,\n      repositoryUrl,\n      githubIntegrationConfig,\n    } = options;\n\n    const { token } = await this.scmAuthApi.getCredentials({\n      url: repositoryUrl,\n      additionalScope: {\n        repoWrite: true,\n      },\n    });\n\n    const octo = new Octokit({\n      auth: token,\n      baseUrl: githubIntegrationConfig.apiBaseUrl,\n    });\n\n    const branchName = getBranchName(this.configApi);\n    const fileName = getCatalogFilename(this.configApi);\n\n    const repoData = await octo.repos\n      .get({\n        owner,\n        repo,\n      })\n      .catch(e => {\n        throw new Error(formatHttpErrorMessage(\"Couldn't fetch repo data\", e));\n      });\n\n    const parentRef = await octo.git\n      .getRef({\n        owner,\n        repo,\n        ref: `heads/${repoData.data.default_branch}`,\n      })\n      .catch(e => {\n        throw new Error(\n          formatHttpErrorMessage(\"Couldn't fetch default branch data\", e),\n        );\n      });\n\n    await octo.git\n      .createRef({\n        owner,\n        repo,\n        ref: `refs/heads/${branchName}`,\n        sha: parentRef.data.object.sha,\n      })\n      .catch(e => {\n        throw new Error(\n          formatHttpErrorMessage(\n            `Couldn't create a new branch with name '${branchName}'`,\n            e,\n          ),\n        );\n      });\n\n    await octo.repos\n      .createOrUpdateFileContents({\n        owner,\n        repo,\n        path: fileName,\n        message: title,\n        content: Base64.encode(fileContent),\n        branch: branchName,\n      })\n      .catch(e => {\n        throw new Error(\n          formatHttpErrorMessage(\n            `Couldn't create a commit with ${fileName} file added`,\n            e,\n          ),\n        );\n      });\n\n    const pullRequestResponse = await octo.pulls\n      .create({\n        owner,\n        repo,\n        title,\n        head: branchName,\n        body,\n        base: repoData.data.default_branch,\n      })\n      .catch(e => {\n        throw new Error(\n          formatHttpErrorMessage(\n            `Couldn't create a pull request for ${branchName} branch`,\n            e,\n          ),\n        );\n      });\n\n    return {\n      link: pullRequestResponse.data.html_url,\n      location: `https://${githubIntegrationConfig.host}/${owner}/${repo}/blob/${repoData.data.default_branch}/${fileName}`,\n    };\n  }\n}\n\nfunction formatHttpErrorMessage(\n  message: string,\n  error: { status: number; message: string },\n) {\n  return `${message}, received http response status code ${error.status}: ${error.message}`;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  configApiRef,\n  createApiFactory,\n  createPlugin,\n  createRoutableExtension,\n  createRouteRef,\n  discoveryApiRef,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\nimport {\n  scmAuthApiRef,\n  scmIntegrationsApiRef,\n} from '@backstage/integration-react';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { catalogImportApiRef, CatalogImportClient } from './api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'catalog-import',\n});\n\n/**\n * A plugin that helps the user in importing projects and YAML files into the\n * catalog.\n *\n * @public\n */\nexport const catalogImportPlugin = createPlugin({\n  id: 'catalog-import',\n  apis: [\n    createApiFactory({\n      api: catalogImportApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        scmAuthApi: scmAuthApiRef,\n        identityApi: identityApiRef,\n        scmIntegrationsApi: scmIntegrationsApiRef,\n        catalogApi: catalogApiRef,\n        configApi: configApiRef,\n      },\n      factory: ({\n        discoveryApi,\n        scmAuthApi,\n        identityApi,\n        scmIntegrationsApi,\n        catalogApi,\n        configApi,\n      }) =>\n        new CatalogImportClient({\n          discoveryApi,\n          scmAuthApi,\n          scmIntegrationsApi,\n          identityApi,\n          catalogApi,\n          configApi,\n        }),\n    }),\n  ],\n  routes: {\n    importPage: rootRouteRef,\n  },\n});\n\n/**\n * The page for importing projects and YAML files into the catalog.\n *\n * @public\n */\nexport const CatalogImportPage = catalogImportPlugin.provide(\n  createRoutableExtension({\n    name: 'CatalogImportPage',\n    component: () => import('./components/ImportPage').then(m => m.ImportPage),\n    mountPoint: rootRouteRef,\n  }),\n);\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useApi, configApiRef } from '@backstage/core-plugin-api';\nimport { getCatalogFilename } from '../components/helpers';\n\nexport function useCatalogFilename(): string {\n  const config = useApi(configApiRef);\n\n  return getCatalogFilename(config);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InfoCard } from '@backstage/core-components';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Chip, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { catalogImportApiRef } from '../../api';\nimport { useCatalogFilename } from '../../hooks';\n\n/**\n * Props for {@link ImportInfoCard}.\n *\n * @public\n */\nexport interface ImportInfoCardProps {\n  exampleLocationUrl?: string;\n  exampleRepositoryUrl?: string;\n}\n\n/**\n * Shows information about the import process.\n *\n * @public\n */\nexport const ImportInfoCard = (props: ImportInfoCardProps) => {\n  const {\n    exampleLocationUrl = 'https://github.com/backstage/backstage/blob/master/catalog-info.yaml',\n    exampleRepositoryUrl = 'https://github.com/backstage/backstage',\n  } = props;\n\n  const configApi = useApi(configApiRef);\n  const appTitle = configApi.getOptional('app.title') || 'Backstage';\n  const catalogImportApi = useApi(catalogImportApiRef);\n\n  const integrations = configApi.getConfig('integrations');\n  const hasGithubIntegration = integrations.has('github');\n\n  const catalogFilename = useCatalogFilename();\n\n  return (\n    <InfoCard\n      title=\"Register an existing component\"\n      deepLink={{\n        title: 'Learn more about the Software Catalog',\n        link: 'https://backstage.io/docs/features/software-catalog/software-catalog-overview',\n      }}\n    >\n      <Typography variant=\"body2\" paragraph>\n        Enter the URL to your source code repository to add it to {appTitle}.\n      </Typography>\n      <Typography variant=\"h6\">Link to an existing entity file</Typography>\n      <Typography variant=\"subtitle2\" color=\"textSecondary\" paragraph>\n        Example: <code>{exampleLocationUrl}</code>\n      </Typography>\n      <Typography variant=\"body2\" paragraph>\n        The wizard analyzes the file, previews the entities, and adds them to\n        the {appTitle} catalog.\n      </Typography>\n      {hasGithubIntegration && (\n        <>\n          <Typography variant=\"h6\">\n            Link to a repository{' '}\n            <Chip label=\"GitHub only\" variant=\"outlined\" size=\"small\" />\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" paragraph>\n            Example: <code>{exampleRepositoryUrl}</code>\n          </Typography>\n          <Typography variant=\"body2\" paragraph>\n            The wizard discovers all <code>{catalogFilename}</code> files in the\n            repository, previews the entities, and adds them to the {appTitle}{' '}\n            catalog.\n          </Typography>\n          {catalogImportApi.preparePullRequest && (\n            <Typography variant=\"body2\" paragraph>\n              If no entities are found, the wizard will prepare a Pull Request\n              that adds an example <code>{catalogFilename}</code> and prepares\n              the {appTitle} catalog to load all entities as soon as the Pull\n              Request is merged.\n            </Typography>\n          )}\n        </>\n      )}\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, CompoundEntityRef } from '@backstage/catalog-model';\nimport { useReducer } from 'react';\nimport { AnalyzeResult } from '../api';\n\n/**\n * The configuration of the stepper.\n *\n * @public\n */\nexport type ImportFlows =\n  | 'unknown'\n  | 'single-location'\n  | 'multiple-locations'\n  | 'no-location';\n\n// the available states of the stepper\ntype ImportStateTypes = 'analyze' | 'prepare' | 'review' | 'finish';\n\n/**\n * Result of the prepare state.\n *\n * @public\n */\nexport type PrepareResult =\n  | {\n      type: 'locations';\n      locations: Array<{\n        exists?: boolean;\n        target: string;\n        entities: CompoundEntityRef[];\n      }>;\n    }\n  | {\n      type: 'repository';\n      url: string;\n      integrationType: string;\n      pullRequest: {\n        url: string;\n      };\n      locations: Array<{\n        target: string;\n        entities: CompoundEntityRef[];\n      }>;\n    };\n\n// result of the review result\nexport type ReviewResult =\n  | {\n      type: 'locations';\n      locations: Array<{\n        target: string;\n        entities: Entity[];\n      }>;\n      refreshed: Array<{ target: string }>;\n    }\n  | {\n      type: 'repository';\n      url: string;\n      integrationType: string;\n      pullRequest: {\n        url: string;\n      };\n      locations: Array<{\n        target: string;\n        entities: Entity[];\n      }>;\n    };\n\n// function type for the 'analysis' -> 'prepare'/'review' transition\ntype onAnalysisFn = (\n  flow: ImportFlows,\n  url: string,\n  result: AnalyzeResult,\n  opts?: { prepareResult?: PrepareResult },\n) => void;\n\n// function type for the 'prepare' -> 'review' transition\ntype onPrepareFn = (\n  result: PrepareResult,\n  opts?: { notRepeatable?: boolean },\n) => void;\n\n// function type for the 'review' -> 'finish' transition\ntype onReviewFn = (result: ReviewResult) => void;\n\n// the type interfaces that are available in each state. every state provides\n// already known information and means to go to the next, or the previous step.\ntype State =\n  | {\n      activeState: 'analyze';\n      onAnalysis: onAnalysisFn;\n    }\n  | {\n      activeState: 'prepare';\n      analyzeResult: AnalyzeResult;\n      prepareResult?: PrepareResult;\n      onPrepare: onPrepareFn;\n    }\n  | {\n      activeState: 'review';\n      analyzeResult: AnalyzeResult;\n      prepareResult: PrepareResult;\n      onReview: onReviewFn;\n    }\n  | {\n      activeState: 'finish';\n      analyzeResult: AnalyzeResult;\n      prepareResult: PrepareResult;\n      reviewResult: ReviewResult;\n    };\n\nexport type ImportState = State & {\n  activeFlow: ImportFlows;\n  activeStepNumber: number;\n  analysisUrl?: string;\n\n  onGoBack?: () => void;\n  onReset: () => void;\n};\n\ntype ReducerActions =\n  | { type: 'onAnalysis'; args: Parameters<onAnalysisFn> }\n  | { type: 'onPrepare'; args: Parameters<onPrepareFn> }\n  | { type: 'onReview'; args: Parameters<onReviewFn> }\n  | { type: 'onGoBack' }\n  | { type: 'onReset'; initialUrl?: string };\n\ntype ReducerState = {\n  activeFlow: ImportFlows;\n  activeState: ImportStateTypes;\n  analysisUrl?: string;\n  analyzeResult?: AnalyzeResult;\n  prepareResult?: PrepareResult;\n  reviewResult?: ReviewResult;\n\n  previousStates: ImportStateTypes[];\n};\n\nfunction init(initialUrl?: string): ReducerState {\n  return {\n    activeFlow: 'unknown',\n    activeState: 'analyze',\n    analysisUrl: initialUrl,\n    previousStates: [],\n  };\n}\n\nfunction reducer(state: ReducerState, action: ReducerActions): ReducerState {\n  switch (action.type) {\n    case 'onAnalysis': {\n      if (state.activeState !== 'analyze') {\n        return state;\n      }\n\n      const { activeState, previousStates } = state;\n      const [activeFlow, analysisUrl, analyzeResult, opts] = action.args;\n\n      return {\n        ...state,\n        analysisUrl,\n        activeFlow,\n        analyzeResult,\n        prepareResult: opts?.prepareResult,\n\n        activeState: opts?.prepareResult === undefined ? 'prepare' : 'review',\n        previousStates: previousStates.concat(activeState),\n      };\n    }\n\n    case 'onPrepare': {\n      if (state.activeState !== 'prepare') {\n        return state;\n      }\n\n      const { activeState, previousStates } = state;\n      const [prepareResult, opts] = action.args;\n\n      return {\n        ...state,\n        prepareResult,\n\n        activeState: 'review',\n        previousStates: opts?.notRepeatable\n          ? []\n          : previousStates.concat(activeState),\n      };\n    }\n\n    case 'onReview': {\n      if (state.activeState !== 'review') {\n        return state;\n      }\n\n      const { activeState, previousStates } = state;\n      const [reviewResult] = action.args;\n\n      return {\n        ...state,\n        reviewResult,\n\n        activeState: 'finish',\n        previousStates: previousStates.concat(activeState),\n      };\n    }\n\n    case 'onGoBack': {\n      const { activeState, previousStates } = state;\n\n      return {\n        ...state,\n\n        activeState:\n          previousStates.length > 0\n            ? previousStates[previousStates.length - 1]\n            : activeState,\n        previousStates: previousStates.slice(0, previousStates.length - 1),\n      };\n    }\n\n    case 'onReset':\n      return {\n        ...init(action.initialUrl),\n\n        // we keep the old prepareResult since the form is animated and an\n        // undefined value might crash the last step.\n        prepareResult: state.prepareResult,\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\n/**\n * A hook that manages the state machine of the form. It handles different flows\n * which each can implement up to four states:\n * 1. analyze\n * 2. preview (skippable from analyze->review)\n * 3. review\n * 4. finish\n *\n * @param options - options\n */\nexport const useImportState = (options?: {\n  initialUrl?: string;\n}): ImportState => {\n  const [state, dispatch] = useReducer(reducer, options?.initialUrl, init);\n\n  const { activeFlow, activeState, analysisUrl, previousStates } = state;\n\n  return {\n    activeFlow,\n    activeState,\n    activeStepNumber: ['analyze', 'prepare', 'review', 'finish'].indexOf(\n      activeState,\n    ),\n    analysisUrl: analysisUrl,\n\n    analyzeResult: state.analyzeResult!,\n    prepareResult: state.prepareResult!,\n    reviewResult: state.reviewResult!,\n\n    onAnalysis: (flow, url, result, opts) =>\n      dispatch({\n        type: 'onAnalysis',\n        args: [flow, url, result, opts],\n      }),\n\n    onPrepare: (result, opts) =>\n      dispatch({\n        type: 'onPrepare',\n        args: [result, opts],\n      }),\n\n    onReview: result => dispatch({ type: 'onReview', args: [result] }),\n\n    onGoBack:\n      previousStates.length > 0\n        ? () => dispatch({ type: 'onGoBack' })\n        : undefined,\n\n    onReset: () =>\n      dispatch({ type: 'onReset', initialUrl: options?.initialUrl }),\n  };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { ComponentProps } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport const NextButton = (\n  props: ComponentProps<typeof Button> & { loading?: boolean },\n) => {\n  const { loading, ...buttonProps } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        {...buttonProps}\n        disabled={props.disabled || props.loading}\n      />\n      {props.loading && (\n        <CircularProgress size=\"1.5rem\" className={classes.buttonProgress} />\n      )}\n      {props.loading}\n    </div>\n  );\n};\n\nexport const BackButton = (props: ComponentProps<typeof Button>) => {\n  const classes = useStyles();\n\n  return (\n    <Button variant=\"outlined\" className={classes.button} {...props}>\n      {props.children || 'Back'}\n    </Button>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, CompoundEntityRef } from '@backstage/catalog-model';\nimport { useApp } from '@backstage/core-plugin-api';\nimport {\n  EntityRefLink,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport {\n  Collapse,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport WorkIcon from '@material-ui/icons/Work';\nimport React, { useState } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nfunction sortEntities(entities: Array<CompoundEntityRef | Entity>) {\n  return entities.sort((a, b) =>\n    humanizeEntityRef(a).localeCompare(humanizeEntityRef(b)),\n  );\n}\n\n/**\n * Props for {@link EntityListComponent}.\n *\n * @public\n */\nexport interface EntityListComponentProps {\n  locations: Array<{\n    target: string;\n    entities: (Entity | CompoundEntityRef)[];\n  }>;\n  locationListItemIcon: (target: string) => React.ReactElement;\n  collapsed?: boolean;\n  firstListItem?: React.ReactElement;\n  onItemClick?: (target: string) => void;\n  withLinks?: boolean;\n}\n\n/**\n * Shows a result list of entities.\n *\n * @public\n */\nexport const EntityListComponent = (props: EntityListComponentProps) => {\n  const {\n    locations,\n    collapsed = false,\n    locationListItemIcon,\n    onItemClick,\n    firstListItem,\n    withLinks = false,\n  } = props;\n\n  const app = useApp();\n  const classes = useStyles();\n\n  const [expandedUrls, setExpandedUrls] = useState<string[]>([]);\n\n  const handleClick = (url: string) => {\n    setExpandedUrls(urls =>\n      urls.includes(url) ? urls.filter(u => u !== url) : urls.concat(url),\n    );\n  };\n\n  return (\n    <List>\n      {firstListItem}\n      {locations.map(r => (\n        <React.Fragment key={r.target}>\n          <ListItem\n            dense\n            button={Boolean(onItemClick) as any}\n            onClick={() => onItemClick?.call(this, r.target)}\n          >\n            <ListItemIcon>{locationListItemIcon(r.target)}</ListItemIcon>\n\n            <ListItemText\n              primary={r.target}\n              secondary={`Entities: ${r.entities.length}`}\n            />\n\n            {collapsed && (\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" onClick={() => handleClick(r.target)}>\n                  {expandedUrls.includes(r.target) ? (\n                    <ExpandLessIcon />\n                  ) : (\n                    <ExpandMoreIcon />\n                  )}\n                </IconButton>\n              </ListItemSecondaryAction>\n            )}\n          </ListItem>\n\n          <Collapse\n            in={!collapsed || expandedUrls.includes(r.target)}\n            timeout=\"auto\"\n            unmountOnExit\n          >\n            <List component=\"div\" disablePadding dense>\n              {sortEntities(r.entities).map(entity => {\n                const Icon =\n                  app.getSystemIcon(\n                    `kind:${entity.kind.toLocaleLowerCase('en-US')}`,\n                  ) ?? WorkIcon;\n                return (\n                  <ListItem\n                    key={humanizeEntityRef(entity)}\n                    className={classes.nested}\n                    {...(withLinks\n                      ? {\n                          component: EntityRefLink,\n                          entityRef: entity,\n                          button: withLinks as any,\n                        }\n                      : {})}\n                  >\n                    <ListItemIcon>\n                      <Icon />\n                    </ListItemIcon>\n                    <ListItemText primary={humanizeEntityRef(entity)} />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Collapse>\n        </React.Fragment>\n      ))}\n    </List>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Grid, Typography } from '@material-ui/core';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport React from 'react';\nimport { BackButton } from '../Buttons';\nimport { EntityListComponent } from '../EntityListComponent';\nimport { PrepareResult } from '../useImportState';\nimport { Link } from '@backstage/core-components';\nimport partition from 'lodash/partition';\n\ntype Props = {\n  prepareResult: PrepareResult;\n  onReset: () => void;\n};\n\nexport const StepFinishImportLocation = ({ prepareResult, onReset }: Props) => {\n  const continueButton = (\n    <Grid container spacing={0}>\n      <BackButton onClick={onReset}>Register another</BackButton>\n    </Grid>\n  );\n\n  if (prepareResult.type === 'repository') {\n    return (\n      <>\n        <Typography paragraph>\n          The following Pull Request has been opened:{' '}\n          <Link\n            to={prepareResult.pullRequest.url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {prepareResult.pullRequest.url}\n          </Link>\n        </Typography>\n\n        <Typography paragraph>\n          Your entities will be imported as soon as the Pull Request is merged.\n        </Typography>\n\n        {continueButton}\n      </>\n    );\n  }\n\n  const [existingLocations, newLocations] = partition(\n    prepareResult.locations,\n    l => l.exists,\n  );\n\n  return (\n    <>\n      {newLocations.length > 0 && (\n        <>\n          <Typography>\n            The following entities have been added to the catalog:\n          </Typography>\n\n          <EntityListComponent\n            locations={newLocations}\n            locationListItemIcon={() => <LocationOnIcon />}\n            withLinks\n          />\n        </>\n      )}\n      {existingLocations.length > 0 && (\n        <>\n          <Typography>\n            A refresh was triggered for the following locations:\n          </Typography>\n\n          <EntityListComponent\n            locations={existingLocations}\n            locationListItemIcon={() => <LocationOnIcon />}\n            withLinks\n          />\n        </>\n      )}\n      {continueButton}\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { FormHelperText, Grid, TextField } from '@material-ui/core';\nimport React, { useCallback, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { AnalyzeResult, catalogImportApiRef } from '../../api';\nimport { NextButton } from '../Buttons';\nimport { asInputRef } from '../helpers';\nimport { ImportFlows, PrepareResult } from '../useImportState';\n\ntype FormData = {\n  url: string;\n};\n\n/**\n * Props for {@link StepInitAnalyzeUrl}.\n *\n * @public\n */\nexport interface StepInitAnalyzeUrlProps {\n  onAnalysis: (\n    flow: ImportFlows,\n    url: string,\n    result: AnalyzeResult,\n    opts?: { prepareResult?: PrepareResult },\n  ) => void;\n  disablePullRequest?: boolean;\n  analysisUrl?: string;\n  exampleLocationUrl?: string;\n}\n\n/**\n * A form that lets the user input a url and analyze it for existing locations or potential entities.\n *\n * @param onAnalysis - is called when the analysis was successful\n * @param analysisUrl - a url that can be used as a default value\n * @param disablePullRequest - if true, repositories without entities will abort the wizard\n * @public\n */\nexport const StepInitAnalyzeUrl = (props: StepInitAnalyzeUrlProps) => {\n  const {\n    onAnalysis,\n    analysisUrl = '',\n    disablePullRequest = false,\n    exampleLocationUrl = 'https://github.com/backstage/backstage/blob/master/catalog-info.yaml',\n  } = props;\n\n  const errorApi = useApi(errorApiRef);\n  const catalogImportApi = useApi(catalogImportApiRef);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n  } = useForm<FormData>({\n    mode: 'onTouched',\n    defaultValues: {\n      url: analysisUrl,\n    },\n  });\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState<string | undefined>(undefined);\n\n  const handleResult = useCallback(\n    async ({ url }: FormData) => {\n      setSubmitted(true);\n\n      try {\n        const analysisResult = await catalogImportApi.analyzeUrl(url);\n\n        switch (analysisResult.type) {\n          case 'repository':\n            if (\n              !disablePullRequest &&\n              analysisResult.generatedEntities.length > 0\n            ) {\n              onAnalysis('no-location', url, analysisResult);\n            } else {\n              setError(\"Couldn't generate entities for your repository\");\n              setSubmitted(false);\n            }\n            break;\n\n          case 'locations': {\n            if (analysisResult.locations.length === 1) {\n              onAnalysis('single-location', url, analysisResult, {\n                prepareResult: analysisResult,\n              });\n            } else if (analysisResult.locations.length > 1) {\n              onAnalysis('multiple-locations', url, analysisResult);\n            } else {\n              setError('There are no entities at this location');\n              setSubmitted(false);\n            }\n            break;\n          }\n\n          default: {\n            const err = `Received unknown analysis result of type ${\n              (analysisResult as any).type\n            }. Please contact the support team.`;\n            setError(err);\n            setSubmitted(false);\n\n            errorApi.post(new Error(err));\n            break;\n          }\n        }\n      } catch (e: any) {\n        setError(e?.data?.error?.message ?? e.message);\n        setSubmitted(false);\n      }\n    },\n    [catalogImportApi, disablePullRequest, errorApi, onAnalysis],\n  );\n\n  return (\n    <form onSubmit={handleSubmit(handleResult)}>\n      <TextField\n        {...asInputRef(\n          register('url', {\n            required: true,\n            validate: {\n              httpsValidator: (value: any) =>\n                (typeof value === 'string' &&\n                  value.match(/^http[s]?:\\/\\//) !== null) ||\n                'Must start with http:// or https://.',\n            },\n          }),\n        )}\n        fullWidth\n        id=\"url\"\n        label=\"Repository URL\"\n        placeholder={exampleLocationUrl}\n        helperText=\"Enter the full path to your entity file to start tracking your component\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        error={Boolean(errors.url)}\n        required\n      />\n\n      {errors.url && (\n        <FormHelperText error>{errors.url.message}</FormHelperText>\n      )}\n\n      {error && <FormHelperText error>{error}</FormHelperText>}\n\n      <Grid container spacing={0}>\n        <NextButton\n          disabled={Boolean(errors.url) || !watch('url')}\n          loading={submitted}\n          type=\"submit\"\n        >\n          Analyze\n        </NextButton>\n      </Grid>\n    </form>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CircularProgress, TextField } from '@material-ui/core';\nimport { TextFieldProps } from '@material-ui/core/TextField/TextField';\nimport { Autocomplete } from '@material-ui/lab';\nimport React from 'react';\nimport { Controller, FieldErrors } from 'react-hook-form';\n\n/**\n * Props for {@link AutocompleteTextField}.\n *\n * @public\n */\nexport interface AutocompleteTextFieldProps<TFieldValue extends string> {\n  name: TFieldValue;\n  options: string[];\n  required?: boolean;\n\n  errors?: FieldErrors;\n  rules?: React.ComponentProps<typeof Controller>['rules'];\n\n  loading?: boolean;\n  loadingText?: string;\n\n  helperText?: React.ReactNode;\n  errorHelperText?: string;\n\n  textFieldProps?: Omit<TextFieldProps, 'required' | 'fullWidth'>;\n}\n\n/**\n * An autocompletion text field for the catalog import flows.\n *\n * @public\n */\nexport const AutocompleteTextField = <TFieldValue extends string>(\n  props: AutocompleteTextFieldProps<TFieldValue>,\n) => {\n  const {\n    name,\n    options,\n    required,\n    errors,\n    rules,\n    loading = false,\n    loadingText,\n    helperText,\n    errorHelperText,\n    textFieldProps = {},\n  } = props;\n\n  return (\n    <Controller\n      name={name}\n      rules={rules}\n      render={({ field: { onChange } }) => (\n        <Autocomplete\n          loading={loading}\n          loadingText={loadingText}\n          options={options || []}\n          autoSelect\n          freeSolo\n          onChange={(_event: React.ChangeEvent<{}>, value: string | null) =>\n            onChange(value)\n          }\n          renderInput={params => (\n            <TextField\n              {...params}\n              helperText={(errors?.[name] && errorHelperText) || helperText}\n              error={Boolean(errors?.[name])}\n              margin=\"normal\"\n              variant=\"outlined\"\n              required={required}\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <React.Fragment>\n                    {loading ? (\n                      <CircularProgress color=\"inherit\" size=\"1em\" />\n                    ) : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                ),\n              }}\n              {...textFieldProps}\n            />\n          )}\n        />\n      )}\n    />\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  FormProvider,\n  SubmitHandler,\n  UnpackNestedValue,\n  useForm,\n  UseFormProps,\n  UseFormReturn,\n} from 'react-hook-form';\n\n/**\n * Props for {@link PreparePullRequestForm}.\n *\n * @public\n */\nexport type PreparePullRequestFormProps<\n  TFieldValues extends Record<string, any>,\n> = Pick<UseFormProps<TFieldValues>, 'defaultValues'> & {\n  onSubmit: SubmitHandler<TFieldValues>;\n\n  render: (\n    props: Pick<\n      UseFormReturn<TFieldValues>,\n      'formState' | 'register' | 'control' | 'setValue'\n    > & {\n      values: UnpackNestedValue<TFieldValues>;\n    },\n  ) => React.ReactNode;\n};\n\n/**\n * A form wrapper that creates a form that is used to prepare a pull request. It\n * hosts the form logic.\n *\n * @param defaultValues - the default values of the form\n * @param onSubmit - a callback that is executed when the form is submitted\n *   (initiated by a button of type=\"submit\")\n * @param render - render the form elements\n * @public\n */\nexport const PreparePullRequestForm = <\n  TFieldValues extends Record<string, any>,\n>(\n  props: PreparePullRequestFormProps<TFieldValues>,\n) => {\n  const { defaultValues, onSubmit, render } = props;\n\n  const methods = useForm<TFieldValues>({ mode: 'onTouched', defaultValues });\n  const { handleSubmit, watch, control, register, formState, setValue } =\n    methods;\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {render({ values: watch(), formState, register, control, setValue })}\n      </form>\n    </FormProvider>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport React from 'react';\nimport YAML from 'yaml';\nimport { CodeSnippet } from '@backstage/core-components';\nimport { trimEnd } from 'lodash';\nimport { useCatalogFilename } from '../../hooks';\n\n/**\n * Props for {@link PreviewCatalogInfoComponent}.\n *\n * @public\n */\nexport interface PreviewCatalogInfoComponentProps {\n  repositoryUrl: string;\n  entities: Entity[];\n  classes?: { card?: string; cardContent?: string };\n}\n\n/**\n * Previews information about an entity to create.\n *\n * @public\n */\nexport const PreviewCatalogInfoComponent = (\n  props: PreviewCatalogInfoComponentProps,\n) => {\n  const { repositoryUrl, entities, classes } = props;\n  const catalogFilename = useCatalogFilename();\n\n  return (\n    <Card variant=\"outlined\" className={classes?.card}>\n      <CardHeader\n        title={\n          <code>{`${trimEnd(repositoryUrl, '/')}/${catalogFilename}`}</code>\n        }\n      />\n\n      <CardContent className={classes?.cardContent}>\n        <CodeSnippet\n          text={entities\n            .map(e => YAML.stringify(e))\n            .join('---\\n')\n            .trim()}\n          language=\"yaml\"\n        />\n      </CardContent>\n    </Card>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\nimport React from 'react';\nimport { MarkdownContent } from '@backstage/core-components';\n\n/**\n * Props for {@link PreviewPullRequestComponent}.\n *\n * @public\n */\nexport interface PreviewPullRequestComponentProps {\n  title: string;\n  description: string;\n  classes?: { card?: string; cardContent?: string };\n}\n\n/**\n * Previews a pull request.\n *\n * @public\n */\nexport const PreviewPullRequestComponent = (\n  props: PreviewPullRequestComponentProps,\n) => {\n  const { title, description, classes } = props;\n  return (\n    <Card variant=\"outlined\" className={classes?.card}>\n      <CardHeader title={title} subheader=\"Create a new Pull Request\" />\n      <CardContent className={classes?.cardContent}>\n        <MarkdownContent content={description} />\n      </CardContent>\n    </Card>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { assertError } from '@backstage/errors';\nimport {\n  catalogApiRef,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport { Box, FormHelperText, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { UnpackNestedValue, UseFormReturn } from 'react-hook-form';\nimport useAsync from 'react-use/lib/useAsync';\nimport YAML from 'yaml';\nimport { AnalyzeResult, catalogImportApiRef } from '../../api';\nimport { useCatalogFilename } from '../../hooks';\nimport { PartialEntity } from '../../types';\nimport { BackButton, NextButton } from '../Buttons';\nimport { PrepareResult } from '../useImportState';\nimport { PreparePullRequestForm } from './PreparePullRequestForm';\nimport { PreviewCatalogInfoComponent } from './PreviewCatalogInfoComponent';\nimport { PreviewPullRequestComponent } from './PreviewPullRequestComponent';\n\nconst useStyles = makeStyles(theme => ({\n  previewCard: {\n    marginTop: theme.spacing(1),\n  },\n  previewCardContent: {\n    paddingTop: 0,\n  },\n}));\n\ntype FormData = {\n  title: string;\n  body: string;\n  componentName: string;\n  owner: string;\n  useCodeowners: boolean;\n};\n\n/**\n * Props for {@link StepPrepareCreatePullRequest}.\n *\n * @public\n */\nexport interface StepPrepareCreatePullRequestProps {\n  analyzeResult: Extract<AnalyzeResult, { type: 'repository' }>;\n  onPrepare: (\n    result: PrepareResult,\n    opts?: { notRepeatable?: boolean },\n  ) => void;\n  onGoBack?: () => void;\n\n  renderFormFields: (\n    props: Pick<\n      UseFormReturn<FormData>,\n      'register' | 'setValue' | 'formState'\n    > & {\n      values: UnpackNestedValue<FormData>;\n      groups: string[];\n      groupsLoading: boolean;\n    },\n  ) => React.ReactNode;\n}\n\nexport function generateEntities(\n  entities: PartialEntity[],\n  componentName: string,\n  owner?: string,\n): Entity[] {\n  return entities.map(e => ({\n    ...e,\n    apiVersion: e.apiVersion!,\n    kind: e.kind!,\n    metadata: {\n      ...e.metadata,\n      name: componentName,\n    },\n    spec: {\n      ...e.spec,\n      ...(owner ? { owner } : {}),\n    },\n  }));\n}\n\n/**\n * Prepares a pull request.\n *\n * @public\n */\nexport const StepPrepareCreatePullRequest = (\n  props: StepPrepareCreatePullRequestProps,\n) => {\n  const { analyzeResult, onPrepare, onGoBack, renderFormFields } = props;\n\n  const classes = useStyles();\n  const catalogApi = useApi(catalogApiRef);\n  const catalogImportApi = useApi(catalogImportApiRef);\n  const errorApi = useApi(errorApiRef);\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState<string>();\n\n  const catalogFilename = useCatalogFilename();\n\n  const {\n    loading: prDefaultsLoading,\n    value: prDefaults,\n    error: prDefaultsError,\n  } = useAsync(\n    () => catalogImportApi.preparePullRequest!(),\n    [catalogImportApi.preparePullRequest],\n  );\n\n  useEffect(() => {\n    if (prDefaultsError) {\n      errorApi.post(prDefaultsError);\n    }\n  }, [prDefaultsError, errorApi]);\n\n  const { loading: groupsLoading, value: groups } = useAsync(async () => {\n    const groupEntities = await catalogApi.getEntities({\n      filter: { kind: 'group' },\n    });\n\n    return groupEntities.items\n      .map(e => humanizeEntityRef(e, { defaultKind: 'group' }))\n      .sort();\n  });\n\n  const handleResult = useCallback(\n    async (data: FormData) => {\n      setSubmitted(true);\n\n      try {\n        const pr = await catalogImportApi.submitPullRequest({\n          repositoryUrl: analyzeResult.url,\n          title: data.title,\n          body: data.body,\n          fileContent: generateEntities(\n            analyzeResult.generatedEntities,\n            data.componentName,\n            data.owner,\n          )\n            .map(e => YAML.stringify(e))\n            .join('---\\n'),\n        });\n\n        onPrepare(\n          {\n            type: 'repository',\n            url: analyzeResult.url,\n            integrationType: analyzeResult.integrationType,\n            pullRequest: {\n              url: pr.link,\n            },\n            locations: [\n              {\n                target: pr.location,\n                entities: generateEntities(\n                  analyzeResult.generatedEntities,\n                  data.componentName,\n                  data.owner,\n                ).map(e => ({\n                  kind: e.kind,\n                  namespace: e.metadata.namespace!,\n                  name: e.metadata.name,\n                })),\n              },\n            ],\n          },\n          { notRepeatable: true },\n        );\n      } catch (e) {\n        assertError(e);\n        setError(e.message);\n        setSubmitted(false);\n      }\n    },\n    [\n      analyzeResult.generatedEntities,\n      analyzeResult.integrationType,\n      analyzeResult.url,\n      catalogImportApi,\n      onPrepare,\n    ],\n  );\n\n  return (\n    <>\n      <Typography>\n        You entered a link to a {analyzeResult.integrationType} repository but a{' '}\n        <code>{catalogFilename}</code> could not be found. Use this form to open\n        a Pull Request that creates one.\n      </Typography>\n\n      {!prDefaultsLoading && (\n        <PreparePullRequestForm<FormData>\n          onSubmit={handleResult}\n          defaultValues={{\n            title: prDefaults?.title ?? '',\n            body: prDefaults?.body ?? '',\n            owner:\n              (analyzeResult.generatedEntities[0]?.spec?.owner as string) || '',\n            componentName:\n              analyzeResult.generatedEntities[0]?.metadata?.name || '',\n            useCodeowners: false,\n          }}\n          render={({ values, formState, register, setValue }) => (\n            <>\n              {renderFormFields({\n                values,\n                formState,\n                register,\n                setValue,\n                groups: groups ?? [],\n                groupsLoading,\n              })}\n\n              <Box marginTop={2}>\n                <Typography variant=\"h6\">Preview Pull Request</Typography>\n              </Box>\n\n              <PreviewPullRequestComponent\n                title={values.title}\n                description={values.body}\n                classes={{\n                  card: classes.previewCard,\n                  cardContent: classes.previewCardContent,\n                }}\n              />\n\n              <Box marginTop={2} marginBottom={1}>\n                <Typography variant=\"h6\">Preview Entities</Typography>\n              </Box>\n\n              <PreviewCatalogInfoComponent\n                entities={generateEntities(\n                  analyzeResult.generatedEntities,\n                  values.componentName,\n                  values.owner,\n                )}\n                repositoryUrl={analyzeResult.url}\n                classes={{\n                  card: classes.previewCard,\n                  cardContent: classes.previewCardContent,\n                }}\n              />\n\n              {error && <FormHelperText error>{error}</FormHelperText>}\n\n              <Grid container spacing={0}>\n                {onGoBack && (\n                  <BackButton onClick={onGoBack} disabled={submitted} />\n                )}\n                <NextButton\n                  type=\"submit\"\n                  disabled={Boolean(\n                    formState.errors.title ||\n                      formState.errors.body ||\n                      formState.errors.owner,\n                  )}\n                  loading={submitted}\n                >\n                  Create PR\n                </NextButton>\n              </Grid>\n            </>\n          )}\n        />\n      )}\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Checkbox,\n  Grid,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport React, { useCallback, useState } from 'react';\nimport { AnalyzeResult } from '../../api';\nimport { BackButton, NextButton } from '../Buttons';\nimport { EntityListComponent } from '../EntityListComponent';\nimport { PrepareResult } from '../useImportState';\nimport partition from 'lodash/partition';\n\ntype Props = {\n  analyzeResult: Extract<AnalyzeResult, { type: 'locations' }>;\n  prepareResult?: PrepareResult;\n  onPrepare: (result: PrepareResult) => void;\n  onGoBack?: () => void;\n};\n\n/**\n * A form that lets a user select one of a list of locations to import\n *\n * @param analyzeResult - the result of the analysis\n * @param prepareResult - the selectected locations from a previous step\n * @param onPrepare - called after the selection\n * @param onGoBack - called to go back to the previous step\n */\nexport const StepPrepareSelectLocations = ({\n  analyzeResult,\n  prepareResult,\n  onPrepare,\n  onGoBack,\n}: Props) => {\n  const [selectedUrls, setSelectedUrls] = useState<string[]>(\n    prepareResult?.locations.map(l => l.target) || [],\n  );\n\n  const [existingLocations, locations] = partition(\n    analyzeResult?.locations,\n    l => l.exists,\n  );\n\n  const handleResult = useCallback(async () => {\n    onPrepare({\n      type: 'locations',\n      locations: locations.filter((l: any) => selectedUrls.includes(l.target)),\n    });\n  }, [locations, onPrepare, selectedUrls]);\n\n  const onItemClick = (url: string) => {\n    setSelectedUrls(urls =>\n      urls.includes(url) ? urls.filter(u => u !== url) : urls.concat(url),\n    );\n  };\n\n  const onSelectAll = () => {\n    setSelectedUrls(urls =>\n      urls.length < locations.length ? locations.map(l => l.target) : [],\n    );\n  };\n\n  return (\n    <>\n      {locations.length > 0 && (\n        <>\n          <Typography>\n            Select one or more locations that are present in your git\n            repository:\n          </Typography>\n          <EntityListComponent\n            firstListItem={\n              <ListItem dense button onClick={onSelectAll}>\n                <ListItemIcon>\n                  <Checkbox\n                    edge=\"start\"\n                    checked={selectedUrls.length === locations.length}\n                    indeterminate={\n                      selectedUrls.length > 0 &&\n                      selectedUrls.length < locations.length\n                    }\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                </ListItemIcon>\n                <ListItemText primary=\"Select All\" />\n              </ListItem>\n            }\n            onItemClick={onItemClick}\n            locations={locations}\n            locationListItemIcon={target => (\n              <Checkbox\n                edge=\"start\"\n                checked={selectedUrls.includes(target)}\n                tabIndex={-1}\n                disableRipple\n              />\n            )}\n            collapsed\n          />\n        </>\n      )}\n\n      {existingLocations.length > 0 && (\n        <>\n          <Typography>These locations already exist in the catalog:</Typography>\n          <EntityListComponent\n            locations={existingLocations}\n            locationListItemIcon={() => <LocationOnIcon />}\n            withLinks\n            collapsed\n          />\n        </>\n      )}\n\n      <Grid container spacing={0}>\n        {onGoBack && <BackButton onClick={onGoBack} />}\n        <NextButton disabled={selectedUrls.length === 0} onClick={handleResult}>\n          Review\n        </NextButton>\n      </Grid>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { FormHelperText, Grid, Typography } from '@material-ui/core';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport React, { useCallback, useState } from 'react';\nimport { BackButton, NextButton } from '../Buttons';\nimport { EntityListComponent } from '../EntityListComponent';\nimport { PrepareResult, ReviewResult } from '../useImportState';\n\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Link } from '@backstage/core-components';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { assertError } from '@backstage/errors';\n\ntype Props = {\n  prepareResult: PrepareResult;\n  onReview: (result: ReviewResult) => void;\n  onGoBack?: () => void;\n};\n\nexport const StepReviewLocation = ({\n  prepareResult,\n  onReview,\n  onGoBack,\n}: Props) => {\n  const catalogApi = useApi(catalogApiRef);\n  const configApi = useApi(configApiRef);\n\n  const appTitle = configApi.getOptional('app.title') || 'Backstage';\n\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState<string>();\n  const exists =\n    prepareResult.type === 'locations' &&\n    prepareResult.locations.some(l => l.exists)\n      ? true\n      : false;\n  const handleClick = useCallback(async () => {\n    setSubmitted(true);\n    try {\n      let refreshed = new Array<{ target: string }>();\n      if (prepareResult.type === 'locations') {\n        refreshed = await Promise.all(\n          prepareResult.locations\n            .filter(l => l.exists)\n            .map(async l => {\n              const ref = stringifyEntityRef(l.entities[0] ?? l);\n              await catalogApi.refreshEntity(ref);\n              return { target: l.target };\n            }),\n        );\n      }\n\n      const locations = await Promise.all(\n        prepareResult.locations\n          .filter((l: unknown) => !(l as { exists?: boolean }).exists)\n          .map(async l => {\n            const result = await catalogApi.addLocation({\n              type: 'url',\n              target: l.target,\n            });\n            return {\n              target: result.location.target,\n              entities: result.entities,\n            };\n          }),\n      );\n\n      onReview({\n        ...prepareResult,\n        ...{ refreshed },\n        locations,\n      });\n    } catch (e) {\n      assertError(e);\n      // TODO: this error should be handled differently. We add it as 'optional' and\n      //       it is not uncommon that a PR has not been merged yet.\n      if (\n        prepareResult.type === 'repository' &&\n        e.message.startsWith(\n          'Location was added but has no entities specified yet',\n        )\n      ) {\n        onReview({\n          ...prepareResult,\n          locations: prepareResult.locations.map(l => ({\n            target: l.target,\n            entities: [],\n          })),\n        });\n      } else {\n        setError(e.message);\n        setSubmitted(false);\n      }\n    }\n  }, [prepareResult, onReview, catalogApi]);\n\n  return (\n    <>\n      {prepareResult.type === 'repository' && (\n        <>\n          <Typography paragraph>\n            The following Pull Request has been opened:{' '}\n            <Link\n              to={prepareResult.pullRequest.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {prepareResult.pullRequest.url}\n            </Link>\n          </Typography>\n\n          <Typography paragraph>\n            You can already import the location and {appTitle} will fetch the\n            entities as soon as the Pull Request is merged.\n          </Typography>\n        </>\n      )}\n\n      <Typography>\n        {exists\n          ? 'The following locations already exist in the catalog:'\n          : 'The following entities will be added to the catalog:'}\n      </Typography>\n\n      <EntityListComponent\n        locations={prepareResult.locations}\n        locationListItemIcon={() => <LocationOnIcon />}\n      />\n\n      {error && <FormHelperText error>{error}</FormHelperText>}\n\n      <Grid container spacing={0}>\n        {onGoBack && <BackButton onClick={onGoBack} disabled={submitted} />}\n        <NextButton\n          disabled={submitted}\n          loading={submitted}\n          onClick={() => handleClick()}\n        >\n          {exists ? 'Refresh' : 'Import'}\n        </NextButton>\n      </Grid>\n    </>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  FormHelperText,\n  StepLabel,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { BackButton } from '../Buttons';\nimport { asInputRef } from '../helpers';\nimport { StepFinishImportLocation } from '../StepFinishImportLocation';\nimport { StepInitAnalyzeUrl } from '../StepInitAnalyzeUrl';\nimport {\n  AutocompleteTextField,\n  StepPrepareCreatePullRequest,\n} from '../StepPrepareCreatePullRequest';\nimport { StepPrepareSelectLocations } from '../StepPrepareSelectLocations';\nimport { StepReviewLocation } from '../StepReviewLocation';\nimport { StepperApis } from '../types';\nimport { ImportFlows, ImportState } from '../useImportState';\n\nexport type StepConfiguration = {\n  stepLabel: React.ReactElement;\n  content: React.ReactElement;\n};\n\n/**\n * Defines the details of the stepper.\n *\n * @public\n */\nexport interface StepperProvider {\n  analyze: (\n    s: Extract<ImportState, { activeState: 'analyze' }>,\n    opts: { apis: StepperApis },\n  ) => StepConfiguration;\n  prepare: (\n    s: Extract<ImportState, { activeState: 'prepare' }>,\n    opts: { apis: StepperApis },\n  ) => StepConfiguration;\n  review: (\n    s: Extract<ImportState, { activeState: 'review' }>,\n    opts: { apis: StepperApis },\n  ) => StepConfiguration;\n  finish: (\n    s: Extract<ImportState, { activeState: 'finish' }>,\n    opts: { apis: StepperApis },\n  ) => StepConfiguration;\n}\n\n/**\n * The default stepper generation function.\n *\n * Override this function to customize the import flow. Each flow should at\n * least override the prepare operation.\n *\n * @param flow - the name of the active flow\n * @param defaults - the default steps\n * @public\n */\nexport function defaultGenerateStepper(\n  flow: ImportFlows,\n  defaults: StepperProvider,\n): StepperProvider {\n  switch (flow) {\n    // the prepare step is skipped but the label of the step is updated\n    case 'single-location':\n      return {\n        ...defaults,\n        prepare: () => ({\n          stepLabel: (\n            <StepLabel\n              optional={\n                <Typography variant=\"caption\">\n                  Discovered Locations: 1\n                </Typography>\n              }\n            >\n              Select Locations\n            </StepLabel>\n          ),\n          content: <></>,\n        }),\n      };\n\n    // let the user select one or more of the discovered locations in the prepare step\n    case 'multiple-locations':\n      return {\n        ...defaults,\n        prepare: (state, opts) => {\n          if (state.analyzeResult.type !== 'locations') {\n            return defaults.prepare(state, opts);\n          }\n\n          return {\n            stepLabel: (\n              <StepLabel\n                optional={\n                  <Typography variant=\"caption\">\n                    Discovered Locations: {state.analyzeResult.locations.length}\n                  </Typography>\n                }\n              >\n                Select Locations\n              </StepLabel>\n            ),\n            content: (\n              <StepPrepareSelectLocations\n                analyzeResult={state.analyzeResult}\n                prepareResult={state.prepareResult}\n                onPrepare={state.onPrepare}\n                onGoBack={state.onGoBack}\n              />\n            ),\n          };\n        },\n      };\n\n    case 'no-location':\n      return {\n        ...defaults,\n        prepare: (state, opts) => {\n          if (state.analyzeResult.type !== 'repository') {\n            return defaults.prepare(state, opts);\n          }\n\n          return {\n            stepLabel: <StepLabel>Create Pull Request</StepLabel>,\n            content: (\n              <StepPrepareCreatePullRequest\n                analyzeResult={state.analyzeResult}\n                onPrepare={state.onPrepare}\n                onGoBack={state.onGoBack}\n                renderFormFields={({\n                  values,\n                  setValue,\n                  formState,\n                  groupsLoading,\n                  groups,\n                  register,\n                }) => (\n                  <>\n                    <Box marginTop={2}>\n                      <Typography variant=\"h6\">Pull Request Details</Typography>\n                    </Box>\n\n                    <TextField\n                      {...asInputRef(\n                        register('title', {\n                          required: true,\n                        }),\n                      )}\n                      label=\"Pull Request Title\"\n                      placeholder=\"Add Backstage catalog entity descriptor files\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                      error={Boolean(formState.errors.title)}\n                      required\n                    />\n\n                    <TextField\n                      {...asInputRef(\n                        register('body', {\n                          required: true,\n                        }),\n                      )}\n                      label=\"Pull Request Body\"\n                      placeholder=\"A describing text with Markdown support\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                      error={Boolean(formState.errors.body)}\n                      multiline\n                      required\n                    />\n\n                    <Box marginTop={2}>\n                      <Typography variant=\"h6\">Entity Configuration</Typography>\n                    </Box>\n\n                    <TextField\n                      {...asInputRef(\n                        register('componentName', { required: true }),\n                      )}\n                      label=\"Name of the created component\"\n                      placeholder=\"my-component\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                      error={Boolean(formState.errors.componentName)}\n                      required\n                    />\n\n                    {!values.useCodeowners && (\n                      <AutocompleteTextField\n                        name=\"owner\"\n                        errors={formState.errors}\n                        options={groups || []}\n                        loading={groupsLoading}\n                        loadingText=\"Loading groups…\"\n                        helperText=\"Select an owner from the list or enter a reference to a Group or a User\"\n                        errorHelperText=\"required value\"\n                        textFieldProps={{\n                          label: 'Entity Owner',\n                          placeholder: 'my-group',\n                        }}\n                        rules={{ required: true }}\n                        required\n                      />\n                    )}\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          {...asInputRef(register('useCodeowners'))}\n                          onChange={(_, value) => {\n                            if (value) {\n                              setValue('owner', '');\n                            }\n                          }}\n                        />\n                      }\n                      label={\n                        <>\n                          Use <em>CODEOWNERS</em> file as Entity Owner\n                        </>\n                      }\n                    />\n                    <FormHelperText>\n                      WARNING: This may fail if no CODEOWNERS file is found at\n                      the target location.\n                    </FormHelperText>\n                  </>\n                )}\n              />\n            ),\n          };\n        },\n      };\n\n    default:\n      return defaults;\n  }\n}\n\nexport const defaultStepper: StepperProvider = {\n  analyze: (state, { apis }) => ({\n    stepLabel: <StepLabel>Select URL</StepLabel>,\n    content: (\n      <StepInitAnalyzeUrl\n        key=\"analyze\"\n        analysisUrl={state.analysisUrl}\n        onAnalysis={state.onAnalysis}\n        disablePullRequest={!apis.catalogImportApi.preparePullRequest}\n      />\n    ),\n  }),\n\n  prepare: state => ({\n    stepLabel: (\n      <StepLabel optional={<Typography variant=\"caption\">Optional</Typography>}>\n        Import Actions\n      </StepLabel>\n    ),\n    content: <BackButton onClick={state.onGoBack} />,\n  }),\n\n  review: state => ({\n    stepLabel: <StepLabel>Review</StepLabel>,\n    content: (\n      <StepReviewLocation\n        prepareResult={state.prepareResult}\n        onReview={state.onReview}\n        onGoBack={state.onGoBack}\n      />\n    ),\n  }),\n\n  finish: state => ({\n    stepLabel: <StepLabel>Finish</StepLabel>,\n    content: (\n      <StepFinishImportLocation\n        prepareResult={state.prepareResult}\n        onReset={state.onReset}\n      />\n    ),\n  }),\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InfoCard, InfoCardVariants } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { Step, StepContent, Stepper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useMemo } from 'react';\nimport { catalogImportApiRef } from '../../api';\nimport { ImportFlows, ImportState, useImportState } from '../useImportState';\nimport {\n  defaultGenerateStepper,\n  defaultStepper,\n  StepConfiguration,\n  StepperProvider,\n} from './defaults';\n\nconst useStyles = makeStyles(() => ({\n  stepperRoot: {\n    padding: 0,\n  },\n}));\n\n/**\n * Props for {@link ImportStepper}.\n *\n * @public\n */\nexport interface ImportStepperProps {\n  initialUrl?: string;\n  generateStepper?: (\n    flow: ImportFlows,\n    defaults: StepperProvider,\n  ) => StepperProvider;\n  variant?: InfoCardVariants;\n}\n\n/**\n * The stepper that holds the different import stages.\n *\n * @public\n */\nexport const ImportStepper = (props: ImportStepperProps) => {\n  const {\n    initialUrl,\n    generateStepper = defaultGenerateStepper,\n    variant,\n  } = props;\n\n  const catalogImportApi = useApi(catalogImportApiRef);\n  const classes = useStyles();\n  const state = useImportState({ initialUrl });\n\n  const states = useMemo<StepperProvider>(\n    () => generateStepper(state.activeFlow, defaultStepper),\n    [generateStepper, state.activeFlow],\n  );\n\n  const render = (step: StepConfiguration) => {\n    return (\n      <Step>\n        {step.stepLabel}\n        <StepContent>{step.content}</StepContent>\n      </Step>\n    );\n  };\n\n  return (\n    <InfoCard variant={variant}>\n      <Stepper\n        classes={{ root: classes.stepperRoot }}\n        activeStep={state.activeStepNumber}\n        orientation=\"vertical\"\n      >\n        {render(\n          states.analyze(\n            state as Extract<ImportState, { activeState: 'analyze' }>,\n            { apis: { catalogImportApi } },\n          ),\n        )}\n        {render(\n          states.prepare(\n            state as Extract<ImportState, { activeState: 'prepare' }>,\n            { apis: { catalogImportApi } },\n          ),\n        )}\n        {render(\n          states.review(\n            state as Extract<ImportState, { activeState: 'review' }>,\n            { apis: { catalogImportApi } },\n          ),\n        )}\n        {render(\n          states.finish(\n            state as Extract<ImportState, { activeState: 'finish' }>,\n            { apis: { catalogImportApi } },\n          ),\n        )}\n      </Stepper>\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Content,\n  ContentHeader,\n  Header,\n  Page,\n  SupportButton,\n} from '@backstage/core-components';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Grid } from '@material-ui/core';\nimport React from 'react';\nimport { ImportInfoCard } from '../ImportInfoCard';\nimport { ImportStepper } from '../ImportStepper';\n\n/**\n * The default catalog import page.\n *\n * @public\n */\nexport const DefaultImportPage = () => {\n  const configApi = useApi(configApiRef);\n  const appTitle = configApi.getOptional('app.title') || 'Backstage';\n\n  return (\n    <Page themeId=\"home\">\n      <Header title=\"Register an existing component\" />\n      <Content>\n        <ContentHeader title={`Start tracking your component in ${appTitle}`}>\n          <SupportButton>\n            Start tracking your component in {appTitle} by adding it to the\n            software catalog.\n          </SupportButton>\n        </ContentHeader>\n\n        <Grid container spacing={2} direction=\"row-reverse\">\n          <Grid item xs={12} md={4} lg={6} xl={8}>\n            <ImportInfoCard />\n          </Grid>\n\n          <Grid item xs={12} md={8} lg={6} xl={4}>\n            <ImportStepper />\n          </Grid>\n        </Grid>\n      </Content>\n    </Page>\n  );\n};\n"],"names":["useStyles","this"],"mappings":"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"}